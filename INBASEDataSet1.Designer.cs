//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace CompozitClient {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("INBASEDataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class INBASEDataSet1 : global::System.Data.DataSet {
        
        private DEVICEDataTable tableDEVICE;
        
        private DEVICE_EVENTSDataTable tableDEVICE_EVENTS;
        
        private ITEMSDataTable tableITEMS;
        
        private ITEMS_EVENTSDataTable tableITEMS_EVENTS;
        
        private LOGPASSDataTable tableLOGPASS;
        
        private OTDELDataTable tableOTDEL;
        
        private SOTRUDDataTable tableSOTRUD;
        
        private ZAKUPKIDataTable tableZAKUPKI;
        
        private global::System.Data.DataRelation relationFK_DEVICE_SOTRUD;
        
        private global::System.Data.DataRelation relationFK_DEVICE_ZAKUPKI;
        
        private global::System.Data.DataRelation relationFK_DEVICE_EVENTS_DEVICE;
        
        private global::System.Data.DataRelation relationFK_ITEMS_DEVICE;
        
        private global::System.Data.DataRelation relationFK_ITEMS_ZAKUPKI;
        
        private global::System.Data.DataRelation relationFK_ITEMS_EVENTS_ITEMS;
        
        private global::System.Data.DataRelation relationFK_LOGPASS_SOTRUD;
        
        private global::System.Data.DataRelation relationFK_SOTRUD_OTDEL;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public INBASEDataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected INBASEDataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DEVICE"] != null)) {
                    base.Tables.Add(new DEVICEDataTable(ds.Tables["DEVICE"]));
                }
                if ((ds.Tables["DEVICE_EVENTS"] != null)) {
                    base.Tables.Add(new DEVICE_EVENTSDataTable(ds.Tables["DEVICE_EVENTS"]));
                }
                if ((ds.Tables["ITEMS"] != null)) {
                    base.Tables.Add(new ITEMSDataTable(ds.Tables["ITEMS"]));
                }
                if ((ds.Tables["ITEMS_EVENTS"] != null)) {
                    base.Tables.Add(new ITEMS_EVENTSDataTable(ds.Tables["ITEMS_EVENTS"]));
                }
                if ((ds.Tables["LOGPASS"] != null)) {
                    base.Tables.Add(new LOGPASSDataTable(ds.Tables["LOGPASS"]));
                }
                if ((ds.Tables["OTDEL"] != null)) {
                    base.Tables.Add(new OTDELDataTable(ds.Tables["OTDEL"]));
                }
                if ((ds.Tables["SOTRUD"] != null)) {
                    base.Tables.Add(new SOTRUDDataTable(ds.Tables["SOTRUD"]));
                }
                if ((ds.Tables["ZAKUPKI"] != null)) {
                    base.Tables.Add(new ZAKUPKIDataTable(ds.Tables["ZAKUPKI"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DEVICEDataTable DEVICE {
            get {
                return this.tableDEVICE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DEVICE_EVENTSDataTable DEVICE_EVENTS {
            get {
                return this.tableDEVICE_EVENTS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ITEMSDataTable ITEMS {
            get {
                return this.tableITEMS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ITEMS_EVENTSDataTable ITEMS_EVENTS {
            get {
                return this.tableITEMS_EVENTS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LOGPASSDataTable LOGPASS {
            get {
                return this.tableLOGPASS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OTDELDataTable OTDEL {
            get {
                return this.tableOTDEL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SOTRUDDataTable SOTRUD {
            get {
                return this.tableSOTRUD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ZAKUPKIDataTable ZAKUPKI {
            get {
                return this.tableZAKUPKI;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            INBASEDataSet1 cln = ((INBASEDataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DEVICE"] != null)) {
                    base.Tables.Add(new DEVICEDataTable(ds.Tables["DEVICE"]));
                }
                if ((ds.Tables["DEVICE_EVENTS"] != null)) {
                    base.Tables.Add(new DEVICE_EVENTSDataTable(ds.Tables["DEVICE_EVENTS"]));
                }
                if ((ds.Tables["ITEMS"] != null)) {
                    base.Tables.Add(new ITEMSDataTable(ds.Tables["ITEMS"]));
                }
                if ((ds.Tables["ITEMS_EVENTS"] != null)) {
                    base.Tables.Add(new ITEMS_EVENTSDataTable(ds.Tables["ITEMS_EVENTS"]));
                }
                if ((ds.Tables["LOGPASS"] != null)) {
                    base.Tables.Add(new LOGPASSDataTable(ds.Tables["LOGPASS"]));
                }
                if ((ds.Tables["OTDEL"] != null)) {
                    base.Tables.Add(new OTDELDataTable(ds.Tables["OTDEL"]));
                }
                if ((ds.Tables["SOTRUD"] != null)) {
                    base.Tables.Add(new SOTRUDDataTable(ds.Tables["SOTRUD"]));
                }
                if ((ds.Tables["ZAKUPKI"] != null)) {
                    base.Tables.Add(new ZAKUPKIDataTable(ds.Tables["ZAKUPKI"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableDEVICE = ((DEVICEDataTable)(base.Tables["DEVICE"]));
            if ((initTable == true)) {
                if ((this.tableDEVICE != null)) {
                    this.tableDEVICE.InitVars();
                }
            }
            this.tableDEVICE_EVENTS = ((DEVICE_EVENTSDataTable)(base.Tables["DEVICE_EVENTS"]));
            if ((initTable == true)) {
                if ((this.tableDEVICE_EVENTS != null)) {
                    this.tableDEVICE_EVENTS.InitVars();
                }
            }
            this.tableITEMS = ((ITEMSDataTable)(base.Tables["ITEMS"]));
            if ((initTable == true)) {
                if ((this.tableITEMS != null)) {
                    this.tableITEMS.InitVars();
                }
            }
            this.tableITEMS_EVENTS = ((ITEMS_EVENTSDataTable)(base.Tables["ITEMS_EVENTS"]));
            if ((initTable == true)) {
                if ((this.tableITEMS_EVENTS != null)) {
                    this.tableITEMS_EVENTS.InitVars();
                }
            }
            this.tableLOGPASS = ((LOGPASSDataTable)(base.Tables["LOGPASS"]));
            if ((initTable == true)) {
                if ((this.tableLOGPASS != null)) {
                    this.tableLOGPASS.InitVars();
                }
            }
            this.tableOTDEL = ((OTDELDataTable)(base.Tables["OTDEL"]));
            if ((initTable == true)) {
                if ((this.tableOTDEL != null)) {
                    this.tableOTDEL.InitVars();
                }
            }
            this.tableSOTRUD = ((SOTRUDDataTable)(base.Tables["SOTRUD"]));
            if ((initTable == true)) {
                if ((this.tableSOTRUD != null)) {
                    this.tableSOTRUD.InitVars();
                }
            }
            this.tableZAKUPKI = ((ZAKUPKIDataTable)(base.Tables["ZAKUPKI"]));
            if ((initTable == true)) {
                if ((this.tableZAKUPKI != null)) {
                    this.tableZAKUPKI.InitVars();
                }
            }
            this.relationFK_DEVICE_SOTRUD = this.Relations["FK_DEVICE_SOTRUD"];
            this.relationFK_DEVICE_ZAKUPKI = this.Relations["FK_DEVICE_ZAKUPKI"];
            this.relationFK_DEVICE_EVENTS_DEVICE = this.Relations["FK_DEVICE_EVENTS_DEVICE"];
            this.relationFK_ITEMS_DEVICE = this.Relations["FK_ITEMS_DEVICE"];
            this.relationFK_ITEMS_ZAKUPKI = this.Relations["FK_ITEMS_ZAKUPKI"];
            this.relationFK_ITEMS_EVENTS_ITEMS = this.Relations["FK_ITEMS_EVENTS_ITEMS"];
            this.relationFK_LOGPASS_SOTRUD = this.Relations["FK_LOGPASS_SOTRUD"];
            this.relationFK_SOTRUD_OTDEL = this.Relations["FK_SOTRUD_OTDEL"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "INBASEDataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/INBASEDataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDEVICE = new DEVICEDataTable();
            base.Tables.Add(this.tableDEVICE);
            this.tableDEVICE_EVENTS = new DEVICE_EVENTSDataTable();
            base.Tables.Add(this.tableDEVICE_EVENTS);
            this.tableITEMS = new ITEMSDataTable();
            base.Tables.Add(this.tableITEMS);
            this.tableITEMS_EVENTS = new ITEMS_EVENTSDataTable();
            base.Tables.Add(this.tableITEMS_EVENTS);
            this.tableLOGPASS = new LOGPASSDataTable();
            base.Tables.Add(this.tableLOGPASS);
            this.tableOTDEL = new OTDELDataTable();
            base.Tables.Add(this.tableOTDEL);
            this.tableSOTRUD = new SOTRUDDataTable();
            base.Tables.Add(this.tableSOTRUD);
            this.tableZAKUPKI = new ZAKUPKIDataTable();
            base.Tables.Add(this.tableZAKUPKI);
            this.relationFK_DEVICE_SOTRUD = new global::System.Data.DataRelation("FK_DEVICE_SOTRUD", new global::System.Data.DataColumn[] {
                        this.tableSOTRUD.ID_SOTRUDColumn}, new global::System.Data.DataColumn[] {
                        this.tableDEVICE.ID_SOTRUDColumn}, false);
            this.Relations.Add(this.relationFK_DEVICE_SOTRUD);
            this.relationFK_DEVICE_ZAKUPKI = new global::System.Data.DataRelation("FK_DEVICE_ZAKUPKI", new global::System.Data.DataColumn[] {
                        this.tableZAKUPKI.NOMER_ZAKUPKIColumn}, new global::System.Data.DataColumn[] {
                        this.tableDEVICE.NOMER_ZAKUPLIColumn}, false);
            this.Relations.Add(this.relationFK_DEVICE_ZAKUPKI);
            this.relationFK_DEVICE_EVENTS_DEVICE = new global::System.Data.DataRelation("FK_DEVICE_EVENTS_DEVICE", new global::System.Data.DataColumn[] {
                        this.tableDEVICE.ID_DEVICEColumn}, new global::System.Data.DataColumn[] {
                        this.tableDEVICE_EVENTS.ID_DEVICEColumn}, false);
            this.Relations.Add(this.relationFK_DEVICE_EVENTS_DEVICE);
            this.relationFK_ITEMS_DEVICE = new global::System.Data.DataRelation("FK_ITEMS_DEVICE", new global::System.Data.DataColumn[] {
                        this.tableDEVICE.ID_DEVICEColumn}, new global::System.Data.DataColumn[] {
                        this.tableITEMS.ID_DEVICEColumn}, false);
            this.Relations.Add(this.relationFK_ITEMS_DEVICE);
            this.relationFK_ITEMS_ZAKUPKI = new global::System.Data.DataRelation("FK_ITEMS_ZAKUPKI", new global::System.Data.DataColumn[] {
                        this.tableZAKUPKI.NOMER_ZAKUPKIColumn}, new global::System.Data.DataColumn[] {
                        this.tableITEMS.NOMER_ZAKUPKIColumn}, false);
            this.Relations.Add(this.relationFK_ITEMS_ZAKUPKI);
            this.relationFK_ITEMS_EVENTS_ITEMS = new global::System.Data.DataRelation("FK_ITEMS_EVENTS_ITEMS", new global::System.Data.DataColumn[] {
                        this.tableITEMS.ID_ITEMColumn}, new global::System.Data.DataColumn[] {
                        this.tableITEMS_EVENTS.ID_ITEMColumn}, false);
            this.Relations.Add(this.relationFK_ITEMS_EVENTS_ITEMS);
            this.relationFK_LOGPASS_SOTRUD = new global::System.Data.DataRelation("FK_LOGPASS_SOTRUD", new global::System.Data.DataColumn[] {
                        this.tableSOTRUD.ID_SOTRUDColumn}, new global::System.Data.DataColumn[] {
                        this.tableLOGPASS.ID_SOTRUDColumn}, false);
            this.Relations.Add(this.relationFK_LOGPASS_SOTRUD);
            this.relationFK_SOTRUD_OTDEL = new global::System.Data.DataRelation("FK_SOTRUD_OTDEL", new global::System.Data.DataColumn[] {
                        this.tableOTDEL.ID_OTDELColumn}, new global::System.Data.DataColumn[] {
                        this.tableSOTRUD.ID_OTDELColumn}, false);
            this.Relations.Add(this.relationFK_SOTRUD_OTDEL);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDEVICE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDEVICE_EVENTS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeITEMS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeITEMS_EVENTS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeLOGPASS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeOTDEL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSOTRUD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeZAKUPKI() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            INBASEDataSet1 ds = new INBASEDataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DEVICERowChangeEventHandler(object sender, DEVICERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DEVICE_EVENTSRowChangeEventHandler(object sender, DEVICE_EVENTSRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ITEMSRowChangeEventHandler(object sender, ITEMSRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ITEMS_EVENTSRowChangeEventHandler(object sender, ITEMS_EVENTSRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void LOGPASSRowChangeEventHandler(object sender, LOGPASSRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void OTDELRowChangeEventHandler(object sender, OTDELRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SOTRUDRowChangeEventHandler(object sender, SOTRUDRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ZAKUPKIRowChangeEventHandler(object sender, ZAKUPKIRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DEVICEDataTable : global::System.Data.TypedTableBase<DEVICERow> {
            
            private global::System.Data.DataColumn columnID_DEVICE;
            
            private global::System.Data.DataColumn columnTYPE_DEVICE;
            
            private global::System.Data.DataColumn columnNAME_DEVICE;
            
            private global::System.Data.DataColumn columnDEV_DEVICE;
            
            private global::System.Data.DataColumn columnNOMER_ZAKUPLI;
            
            private global::System.Data.DataColumn columnDATE_DEVICE;
            
            private global::System.Data.DataColumn columnNET_NAME_DEVICE;
            
            private global::System.Data.DataColumn columnIP_DEVICE;
            
            private global::System.Data.DataColumn columnOS_DEVICE;
            
            private global::System.Data.DataColumn columnSTATIK_IP_DEVICE;
            
            private global::System.Data.DataColumn columnDOPINFO_DEVICE;
            
            private global::System.Data.DataColumn columnTIMORI_DEVICE;
            
            private global::System.Data.DataColumn columnSTATE_DEVICE;
            
            private global::System.Data.DataColumn columnID_SOTRUD;
            
            private global::System.Data.DataColumn columnCONECT_DEVICE;
            
            private global::System.Data.DataColumn columnTYPE_CONECT_DEVICE;
            
            private global::System.Data.DataColumn columnSN_DEVICE;
            
            private global::System.Data.DataColumn columnOLD_INV_DEVICE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEVICEDataTable() {
                this.TableName = "DEVICE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DEVICEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DEVICEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_DEVICEColumn {
                get {
                    return this.columnID_DEVICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TYPE_DEVICEColumn {
                get {
                    return this.columnTYPE_DEVICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NAME_DEVICEColumn {
                get {
                    return this.columnNAME_DEVICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DEV_DEVICEColumn {
                get {
                    return this.columnDEV_DEVICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NOMER_ZAKUPLIColumn {
                get {
                    return this.columnNOMER_ZAKUPLI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DATE_DEVICEColumn {
                get {
                    return this.columnDATE_DEVICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NET_NAME_DEVICEColumn {
                get {
                    return this.columnNET_NAME_DEVICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IP_DEVICEColumn {
                get {
                    return this.columnIP_DEVICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OS_DEVICEColumn {
                get {
                    return this.columnOS_DEVICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STATIK_IP_DEVICEColumn {
                get {
                    return this.columnSTATIK_IP_DEVICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DOPINFO_DEVICEColumn {
                get {
                    return this.columnDOPINFO_DEVICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TIMORI_DEVICEColumn {
                get {
                    return this.columnTIMORI_DEVICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STATE_DEVICEColumn {
                get {
                    return this.columnSTATE_DEVICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_SOTRUDColumn {
                get {
                    return this.columnID_SOTRUD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CONECT_DEVICEColumn {
                get {
                    return this.columnCONECT_DEVICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TYPE_CONECT_DEVICEColumn {
                get {
                    return this.columnTYPE_CONECT_DEVICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SN_DEVICEColumn {
                get {
                    return this.columnSN_DEVICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OLD_INV_DEVICEColumn {
                get {
                    return this.columnOLD_INV_DEVICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEVICERow this[int index] {
                get {
                    return ((DEVICERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DEVICERowChangeEventHandler DEVICERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DEVICERowChangeEventHandler DEVICERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DEVICERowChangeEventHandler DEVICERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DEVICERowChangeEventHandler DEVICERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDEVICERow(DEVICERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEVICERow AddDEVICERow(
                        string TYPE_DEVICE, 
                        string NAME_DEVICE, 
                        string DEV_DEVICE, 
                        ZAKUPKIRow parentZAKUPKIRowByFK_DEVICE_ZAKUPKI, 
                        System.DateTime DATE_DEVICE, 
                        string NET_NAME_DEVICE, 
                        string IP_DEVICE, 
                        string OS_DEVICE, 
                        bool STATIK_IP_DEVICE, 
                        string DOPINFO_DEVICE, 
                        bool TIMORI_DEVICE, 
                        string STATE_DEVICE, 
                        SOTRUDRow parentSOTRUDRowByFK_DEVICE_SOTRUD, 
                        int CONECT_DEVICE, 
                        string TYPE_CONECT_DEVICE, 
                        string SN_DEVICE, 
                        string OLD_INV_DEVICE) {
                DEVICERow rowDEVICERow = ((DEVICERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TYPE_DEVICE,
                        NAME_DEVICE,
                        DEV_DEVICE,
                        null,
                        DATE_DEVICE,
                        NET_NAME_DEVICE,
                        IP_DEVICE,
                        OS_DEVICE,
                        STATIK_IP_DEVICE,
                        DOPINFO_DEVICE,
                        TIMORI_DEVICE,
                        STATE_DEVICE,
                        null,
                        CONECT_DEVICE,
                        TYPE_CONECT_DEVICE,
                        SN_DEVICE,
                        OLD_INV_DEVICE};
                if ((parentZAKUPKIRowByFK_DEVICE_ZAKUPKI != null)) {
                    columnValuesArray[4] = parentZAKUPKIRowByFK_DEVICE_ZAKUPKI[0];
                }
                if ((parentSOTRUDRowByFK_DEVICE_SOTRUD != null)) {
                    columnValuesArray[13] = parentSOTRUDRowByFK_DEVICE_SOTRUD[0];
                }
                rowDEVICERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDEVICERow);
                return rowDEVICERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEVICERow FindByID_DEVICE(int ID_DEVICE) {
                return ((DEVICERow)(this.Rows.Find(new object[] {
                            ID_DEVICE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DEVICEDataTable cln = ((DEVICEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DEVICEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID_DEVICE = base.Columns["ID_DEVICE"];
                this.columnTYPE_DEVICE = base.Columns["TYPE_DEVICE"];
                this.columnNAME_DEVICE = base.Columns["NAME_DEVICE"];
                this.columnDEV_DEVICE = base.Columns["DEV_DEVICE"];
                this.columnNOMER_ZAKUPLI = base.Columns["NOMER_ZAKUPLI"];
                this.columnDATE_DEVICE = base.Columns["DATE_DEVICE"];
                this.columnNET_NAME_DEVICE = base.Columns["NET_NAME_DEVICE"];
                this.columnIP_DEVICE = base.Columns["IP_DEVICE"];
                this.columnOS_DEVICE = base.Columns["OS_DEVICE"];
                this.columnSTATIK_IP_DEVICE = base.Columns["STATIK_IP_DEVICE"];
                this.columnDOPINFO_DEVICE = base.Columns["DOPINFO_DEVICE"];
                this.columnTIMORI_DEVICE = base.Columns["TIMORI_DEVICE"];
                this.columnSTATE_DEVICE = base.Columns["STATE_DEVICE"];
                this.columnID_SOTRUD = base.Columns["ID_SOTRUD"];
                this.columnCONECT_DEVICE = base.Columns["CONECT_DEVICE"];
                this.columnTYPE_CONECT_DEVICE = base.Columns["TYPE_CONECT_DEVICE"];
                this.columnSN_DEVICE = base.Columns["SN_DEVICE"];
                this.columnOLD_INV_DEVICE = base.Columns["OLD_INV_DEVICE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID_DEVICE = new global::System.Data.DataColumn("ID_DEVICE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_DEVICE);
                this.columnTYPE_DEVICE = new global::System.Data.DataColumn("TYPE_DEVICE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE_DEVICE);
                this.columnNAME_DEVICE = new global::System.Data.DataColumn("NAME_DEVICE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_DEVICE);
                this.columnDEV_DEVICE = new global::System.Data.DataColumn("DEV_DEVICE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEV_DEVICE);
                this.columnNOMER_ZAKUPLI = new global::System.Data.DataColumn("NOMER_ZAKUPLI", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOMER_ZAKUPLI);
                this.columnDATE_DEVICE = new global::System.Data.DataColumn("DATE_DEVICE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_DEVICE);
                this.columnNET_NAME_DEVICE = new global::System.Data.DataColumn("NET_NAME_DEVICE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNET_NAME_DEVICE);
                this.columnIP_DEVICE = new global::System.Data.DataColumn("IP_DEVICE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP_DEVICE);
                this.columnOS_DEVICE = new global::System.Data.DataColumn("OS_DEVICE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOS_DEVICE);
                this.columnSTATIK_IP_DEVICE = new global::System.Data.DataColumn("STATIK_IP_DEVICE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATIK_IP_DEVICE);
                this.columnDOPINFO_DEVICE = new global::System.Data.DataColumn("DOPINFO_DEVICE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOPINFO_DEVICE);
                this.columnTIMORI_DEVICE = new global::System.Data.DataColumn("TIMORI_DEVICE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIMORI_DEVICE);
                this.columnSTATE_DEVICE = new global::System.Data.DataColumn("STATE_DEVICE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATE_DEVICE);
                this.columnID_SOTRUD = new global::System.Data.DataColumn("ID_SOTRUD", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_SOTRUD);
                this.columnCONECT_DEVICE = new global::System.Data.DataColumn("CONECT_DEVICE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONECT_DEVICE);
                this.columnTYPE_CONECT_DEVICE = new global::System.Data.DataColumn("TYPE_CONECT_DEVICE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE_CONECT_DEVICE);
                this.columnSN_DEVICE = new global::System.Data.DataColumn("SN_DEVICE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSN_DEVICE);
                this.columnOLD_INV_DEVICE = new global::System.Data.DataColumn("OLD_INV_DEVICE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOLD_INV_DEVICE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_DEVICE}, true));
                this.columnID_DEVICE.AutoIncrement = true;
                this.columnID_DEVICE.AutoIncrementSeed = -1;
                this.columnID_DEVICE.AutoIncrementStep = -1;
                this.columnID_DEVICE.AllowDBNull = false;
                this.columnID_DEVICE.ReadOnly = true;
                this.columnID_DEVICE.Unique = true;
                this.columnTYPE_DEVICE.AllowDBNull = false;
                this.columnTYPE_DEVICE.MaxLength = 120;
                this.columnNAME_DEVICE.AllowDBNull = false;
                this.columnNAME_DEVICE.MaxLength = 120;
                this.columnDEV_DEVICE.MaxLength = 120;
                this.columnNET_NAME_DEVICE.MaxLength = 128;
                this.columnIP_DEVICE.MaxLength = 40;
                this.columnOS_DEVICE.MaxLength = 120;
                this.columnDOPINFO_DEVICE.MaxLength = 200;
                this.columnTIMORI_DEVICE.AllowDBNull = false;
                this.columnSTATE_DEVICE.AllowDBNull = false;
                this.columnSTATE_DEVICE.MaxLength = 80;
                this.columnTYPE_CONECT_DEVICE.MaxLength = 80;
                this.columnSN_DEVICE.MaxLength = 180;
                this.columnOLD_INV_DEVICE.MaxLength = 120;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEVICERow NewDEVICERow() {
                return ((DEVICERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DEVICERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DEVICERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DEVICERowChanged != null)) {
                    this.DEVICERowChanged(this, new DEVICERowChangeEvent(((DEVICERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DEVICERowChanging != null)) {
                    this.DEVICERowChanging(this, new DEVICERowChangeEvent(((DEVICERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DEVICERowDeleted != null)) {
                    this.DEVICERowDeleted(this, new DEVICERowChangeEvent(((DEVICERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DEVICERowDeleting != null)) {
                    this.DEVICERowDeleting(this, new DEVICERowChangeEvent(((DEVICERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDEVICERow(DEVICERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                INBASEDataSet1 ds = new INBASEDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DEVICEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DEVICE_EVENTSDataTable : global::System.Data.TypedTableBase<DEVICE_EVENTSRow> {
            
            private global::System.Data.DataColumn columnN_DEEV;
            
            private global::System.Data.DataColumn columnID_DEVICE;
            
            private global::System.Data.DataColumn columnID_SOTRUD;
            
            private global::System.Data.DataColumn columnTYPE_DEEV;
            
            private global::System.Data.DataColumn columnDATE_DEEV;
            
            private global::System.Data.DataColumn columnDOPINFO_DEEV;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEVICE_EVENTSDataTable() {
                this.TableName = "DEVICE_EVENTS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DEVICE_EVENTSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DEVICE_EVENTSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn N_DEEVColumn {
                get {
                    return this.columnN_DEEV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_DEVICEColumn {
                get {
                    return this.columnID_DEVICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_SOTRUDColumn {
                get {
                    return this.columnID_SOTRUD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TYPE_DEEVColumn {
                get {
                    return this.columnTYPE_DEEV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DATE_DEEVColumn {
                get {
                    return this.columnDATE_DEEV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DOPINFO_DEEVColumn {
                get {
                    return this.columnDOPINFO_DEEV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEVICE_EVENTSRow this[int index] {
                get {
                    return ((DEVICE_EVENTSRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DEVICE_EVENTSRowChangeEventHandler DEVICE_EVENTSRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DEVICE_EVENTSRowChangeEventHandler DEVICE_EVENTSRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DEVICE_EVENTSRowChangeEventHandler DEVICE_EVENTSRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DEVICE_EVENTSRowChangeEventHandler DEVICE_EVENTSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDEVICE_EVENTSRow(DEVICE_EVENTSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEVICE_EVENTSRow AddDEVICE_EVENTSRow(DEVICERow parentDEVICERowByFK_DEVICE_EVENTS_DEVICE, int ID_SOTRUD, string TYPE_DEEV, System.DateTime DATE_DEEV, string DOPINFO_DEEV) {
                DEVICE_EVENTSRow rowDEVICE_EVENTSRow = ((DEVICE_EVENTSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        ID_SOTRUD,
                        TYPE_DEEV,
                        DATE_DEEV,
                        DOPINFO_DEEV};
                if ((parentDEVICERowByFK_DEVICE_EVENTS_DEVICE != null)) {
                    columnValuesArray[1] = parentDEVICERowByFK_DEVICE_EVENTS_DEVICE[0];
                }
                rowDEVICE_EVENTSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDEVICE_EVENTSRow);
                return rowDEVICE_EVENTSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEVICE_EVENTSRow FindByN_DEEV(int N_DEEV) {
                return ((DEVICE_EVENTSRow)(this.Rows.Find(new object[] {
                            N_DEEV})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DEVICE_EVENTSDataTable cln = ((DEVICE_EVENTSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DEVICE_EVENTSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnN_DEEV = base.Columns["N_DEEV"];
                this.columnID_DEVICE = base.Columns["ID_DEVICE"];
                this.columnID_SOTRUD = base.Columns["ID_SOTRUD"];
                this.columnTYPE_DEEV = base.Columns["TYPE_DEEV"];
                this.columnDATE_DEEV = base.Columns["DATE_DEEV"];
                this.columnDOPINFO_DEEV = base.Columns["DOPINFO_DEEV"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnN_DEEV = new global::System.Data.DataColumn("N_DEEV", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnN_DEEV);
                this.columnID_DEVICE = new global::System.Data.DataColumn("ID_DEVICE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_DEVICE);
                this.columnID_SOTRUD = new global::System.Data.DataColumn("ID_SOTRUD", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_SOTRUD);
                this.columnTYPE_DEEV = new global::System.Data.DataColumn("TYPE_DEEV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE_DEEV);
                this.columnDATE_DEEV = new global::System.Data.DataColumn("DATE_DEEV", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_DEEV);
                this.columnDOPINFO_DEEV = new global::System.Data.DataColumn("DOPINFO_DEEV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOPINFO_DEEV);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnN_DEEV}, true));
                this.columnN_DEEV.AutoIncrement = true;
                this.columnN_DEEV.AutoIncrementSeed = -1;
                this.columnN_DEEV.AutoIncrementStep = -1;
                this.columnN_DEEV.AllowDBNull = false;
                this.columnN_DEEV.ReadOnly = true;
                this.columnN_DEEV.Unique = true;
                this.columnID_DEVICE.AllowDBNull = false;
                this.columnTYPE_DEEV.AllowDBNull = false;
                this.columnTYPE_DEEV.MaxLength = 50;
                this.columnDATE_DEEV.AllowDBNull = false;
                this.columnDOPINFO_DEEV.MaxLength = 120;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEVICE_EVENTSRow NewDEVICE_EVENTSRow() {
                return ((DEVICE_EVENTSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DEVICE_EVENTSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DEVICE_EVENTSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DEVICE_EVENTSRowChanged != null)) {
                    this.DEVICE_EVENTSRowChanged(this, new DEVICE_EVENTSRowChangeEvent(((DEVICE_EVENTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DEVICE_EVENTSRowChanging != null)) {
                    this.DEVICE_EVENTSRowChanging(this, new DEVICE_EVENTSRowChangeEvent(((DEVICE_EVENTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DEVICE_EVENTSRowDeleted != null)) {
                    this.DEVICE_EVENTSRowDeleted(this, new DEVICE_EVENTSRowChangeEvent(((DEVICE_EVENTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DEVICE_EVENTSRowDeleting != null)) {
                    this.DEVICE_EVENTSRowDeleting(this, new DEVICE_EVENTSRowChangeEvent(((DEVICE_EVENTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDEVICE_EVENTSRow(DEVICE_EVENTSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                INBASEDataSet1 ds = new INBASEDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DEVICE_EVENTSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ITEMSDataTable : global::System.Data.TypedTableBase<ITEMSRow> {
            
            private global::System.Data.DataColumn columnID_ITEM;
            
            private global::System.Data.DataColumn columnNOMER_ZAKUPKI;
            
            private global::System.Data.DataColumn columnID_DEVICE;
            
            private global::System.Data.DataColumn columnTYPE_ITEM;
            
            private global::System.Data.DataColumn columnNAME_ITEM;
            
            private global::System.Data.DataColumn columnDEV_ITEM;
            
            private global::System.Data.DataColumn columnSTATE_ITEM;
            
            private global::System.Data.DataColumn columnOPISANIE_ITEM;
            
            private global::System.Data.DataColumn columnSN_ITEM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ITEMSDataTable() {
                this.TableName = "ITEMS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ITEMSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ITEMSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_ITEMColumn {
                get {
                    return this.columnID_ITEM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NOMER_ZAKUPKIColumn {
                get {
                    return this.columnNOMER_ZAKUPKI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_DEVICEColumn {
                get {
                    return this.columnID_DEVICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TYPE_ITEMColumn {
                get {
                    return this.columnTYPE_ITEM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NAME_ITEMColumn {
                get {
                    return this.columnNAME_ITEM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DEV_ITEMColumn {
                get {
                    return this.columnDEV_ITEM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STATE_ITEMColumn {
                get {
                    return this.columnSTATE_ITEM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OPISANIE_ITEMColumn {
                get {
                    return this.columnOPISANIE_ITEM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SN_ITEMColumn {
                get {
                    return this.columnSN_ITEM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ITEMSRow this[int index] {
                get {
                    return ((ITEMSRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ITEMSRowChangeEventHandler ITEMSRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ITEMSRowChangeEventHandler ITEMSRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ITEMSRowChangeEventHandler ITEMSRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ITEMSRowChangeEventHandler ITEMSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddITEMSRow(ITEMSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ITEMSRow AddITEMSRow(ZAKUPKIRow parentZAKUPKIRowByFK_ITEMS_ZAKUPKI, DEVICERow parentDEVICERowByFK_ITEMS_DEVICE, string TYPE_ITEM, string NAME_ITEM, string DEV_ITEM, string STATE_ITEM, string OPISANIE_ITEM, string SN_ITEM) {
                ITEMSRow rowITEMSRow = ((ITEMSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        TYPE_ITEM,
                        NAME_ITEM,
                        DEV_ITEM,
                        STATE_ITEM,
                        OPISANIE_ITEM,
                        SN_ITEM};
                if ((parentZAKUPKIRowByFK_ITEMS_ZAKUPKI != null)) {
                    columnValuesArray[1] = parentZAKUPKIRowByFK_ITEMS_ZAKUPKI[0];
                }
                if ((parentDEVICERowByFK_ITEMS_DEVICE != null)) {
                    columnValuesArray[2] = parentDEVICERowByFK_ITEMS_DEVICE[0];
                }
                rowITEMSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowITEMSRow);
                return rowITEMSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ITEMSRow FindByID_ITEM(int ID_ITEM) {
                return ((ITEMSRow)(this.Rows.Find(new object[] {
                            ID_ITEM})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ITEMSDataTable cln = ((ITEMSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ITEMSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID_ITEM = base.Columns["ID_ITEM"];
                this.columnNOMER_ZAKUPKI = base.Columns["NOMER_ZAKUPKI"];
                this.columnID_DEVICE = base.Columns["ID_DEVICE"];
                this.columnTYPE_ITEM = base.Columns["TYPE_ITEM"];
                this.columnNAME_ITEM = base.Columns["NAME_ITEM"];
                this.columnDEV_ITEM = base.Columns["DEV_ITEM"];
                this.columnSTATE_ITEM = base.Columns["STATE_ITEM"];
                this.columnOPISANIE_ITEM = base.Columns["OPISANIE_ITEM"];
                this.columnSN_ITEM = base.Columns["SN_ITEM"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID_ITEM = new global::System.Data.DataColumn("ID_ITEM", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ITEM);
                this.columnNOMER_ZAKUPKI = new global::System.Data.DataColumn("NOMER_ZAKUPKI", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOMER_ZAKUPKI);
                this.columnID_DEVICE = new global::System.Data.DataColumn("ID_DEVICE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_DEVICE);
                this.columnTYPE_ITEM = new global::System.Data.DataColumn("TYPE_ITEM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE_ITEM);
                this.columnNAME_ITEM = new global::System.Data.DataColumn("NAME_ITEM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_ITEM);
                this.columnDEV_ITEM = new global::System.Data.DataColumn("DEV_ITEM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEV_ITEM);
                this.columnSTATE_ITEM = new global::System.Data.DataColumn("STATE_ITEM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATE_ITEM);
                this.columnOPISANIE_ITEM = new global::System.Data.DataColumn("OPISANIE_ITEM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPISANIE_ITEM);
                this.columnSN_ITEM = new global::System.Data.DataColumn("SN_ITEM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSN_ITEM);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_ITEM}, true));
                this.columnID_ITEM.AutoIncrement = true;
                this.columnID_ITEM.AutoIncrementSeed = -1;
                this.columnID_ITEM.AutoIncrementStep = -1;
                this.columnID_ITEM.AllowDBNull = false;
                this.columnID_ITEM.ReadOnly = true;
                this.columnID_ITEM.Unique = true;
                this.columnTYPE_ITEM.AllowDBNull = false;
                this.columnTYPE_ITEM.MaxLength = 80;
                this.columnNAME_ITEM.AllowDBNull = false;
                this.columnNAME_ITEM.MaxLength = 120;
                this.columnDEV_ITEM.MaxLength = 80;
                this.columnSTATE_ITEM.AllowDBNull = false;
                this.columnSTATE_ITEM.MaxLength = 40;
                this.columnOPISANIE_ITEM.MaxLength = 280;
                this.columnSN_ITEM.MaxLength = 120;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ITEMSRow NewITEMSRow() {
                return ((ITEMSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ITEMSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ITEMSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ITEMSRowChanged != null)) {
                    this.ITEMSRowChanged(this, new ITEMSRowChangeEvent(((ITEMSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ITEMSRowChanging != null)) {
                    this.ITEMSRowChanging(this, new ITEMSRowChangeEvent(((ITEMSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ITEMSRowDeleted != null)) {
                    this.ITEMSRowDeleted(this, new ITEMSRowChangeEvent(((ITEMSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ITEMSRowDeleting != null)) {
                    this.ITEMSRowDeleting(this, new ITEMSRowChangeEvent(((ITEMSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveITEMSRow(ITEMSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                INBASEDataSet1 ds = new INBASEDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ITEMSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ITEMS_EVENTSDataTable : global::System.Data.TypedTableBase<ITEMS_EVENTSRow> {
            
            private global::System.Data.DataColumn columnN_ITEV;
            
            private global::System.Data.DataColumn columnID_ITEM;
            
            private global::System.Data.DataColumn columnID_DEVICE;
            
            private global::System.Data.DataColumn columnTYPE_ITEV;
            
            private global::System.Data.DataColumn columnDATE_ITEV;
            
            private global::System.Data.DataColumn columnDOPINFO_ITEV;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ITEMS_EVENTSDataTable() {
                this.TableName = "ITEMS_EVENTS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ITEMS_EVENTSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ITEMS_EVENTSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn N_ITEVColumn {
                get {
                    return this.columnN_ITEV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_ITEMColumn {
                get {
                    return this.columnID_ITEM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_DEVICEColumn {
                get {
                    return this.columnID_DEVICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TYPE_ITEVColumn {
                get {
                    return this.columnTYPE_ITEV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DATE_ITEVColumn {
                get {
                    return this.columnDATE_ITEV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DOPINFO_ITEVColumn {
                get {
                    return this.columnDOPINFO_ITEV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ITEMS_EVENTSRow this[int index] {
                get {
                    return ((ITEMS_EVENTSRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ITEMS_EVENTSRowChangeEventHandler ITEMS_EVENTSRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ITEMS_EVENTSRowChangeEventHandler ITEMS_EVENTSRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ITEMS_EVENTSRowChangeEventHandler ITEMS_EVENTSRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ITEMS_EVENTSRowChangeEventHandler ITEMS_EVENTSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddITEMS_EVENTSRow(ITEMS_EVENTSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ITEMS_EVENTSRow AddITEMS_EVENTSRow(ITEMSRow parentITEMSRowByFK_ITEMS_EVENTS_ITEMS, int ID_DEVICE, string TYPE_ITEV, System.DateTime DATE_ITEV, string DOPINFO_ITEV) {
                ITEMS_EVENTSRow rowITEMS_EVENTSRow = ((ITEMS_EVENTSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        ID_DEVICE,
                        TYPE_ITEV,
                        DATE_ITEV,
                        DOPINFO_ITEV};
                if ((parentITEMSRowByFK_ITEMS_EVENTS_ITEMS != null)) {
                    columnValuesArray[1] = parentITEMSRowByFK_ITEMS_EVENTS_ITEMS[0];
                }
                rowITEMS_EVENTSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowITEMS_EVENTSRow);
                return rowITEMS_EVENTSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ITEMS_EVENTSRow FindByN_ITEV(int N_ITEV) {
                return ((ITEMS_EVENTSRow)(this.Rows.Find(new object[] {
                            N_ITEV})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ITEMS_EVENTSDataTable cln = ((ITEMS_EVENTSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ITEMS_EVENTSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnN_ITEV = base.Columns["N_ITEV"];
                this.columnID_ITEM = base.Columns["ID_ITEM"];
                this.columnID_DEVICE = base.Columns["ID_DEVICE"];
                this.columnTYPE_ITEV = base.Columns["TYPE_ITEV"];
                this.columnDATE_ITEV = base.Columns["DATE_ITEV"];
                this.columnDOPINFO_ITEV = base.Columns["DOPINFO_ITEV"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnN_ITEV = new global::System.Data.DataColumn("N_ITEV", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnN_ITEV);
                this.columnID_ITEM = new global::System.Data.DataColumn("ID_ITEM", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ITEM);
                this.columnID_DEVICE = new global::System.Data.DataColumn("ID_DEVICE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_DEVICE);
                this.columnTYPE_ITEV = new global::System.Data.DataColumn("TYPE_ITEV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE_ITEV);
                this.columnDATE_ITEV = new global::System.Data.DataColumn("DATE_ITEV", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_ITEV);
                this.columnDOPINFO_ITEV = new global::System.Data.DataColumn("DOPINFO_ITEV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOPINFO_ITEV);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnN_ITEV}, true));
                this.columnN_ITEV.AutoIncrement = true;
                this.columnN_ITEV.AutoIncrementSeed = -1;
                this.columnN_ITEV.AutoIncrementStep = -1;
                this.columnN_ITEV.AllowDBNull = false;
                this.columnN_ITEV.ReadOnly = true;
                this.columnN_ITEV.Unique = true;
                this.columnID_ITEM.AllowDBNull = false;
                this.columnTYPE_ITEV.AllowDBNull = false;
                this.columnTYPE_ITEV.MaxLength = 50;
                this.columnDATE_ITEV.AllowDBNull = false;
                this.columnDOPINFO_ITEV.MaxLength = 120;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ITEMS_EVENTSRow NewITEMS_EVENTSRow() {
                return ((ITEMS_EVENTSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ITEMS_EVENTSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ITEMS_EVENTSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ITEMS_EVENTSRowChanged != null)) {
                    this.ITEMS_EVENTSRowChanged(this, new ITEMS_EVENTSRowChangeEvent(((ITEMS_EVENTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ITEMS_EVENTSRowChanging != null)) {
                    this.ITEMS_EVENTSRowChanging(this, new ITEMS_EVENTSRowChangeEvent(((ITEMS_EVENTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ITEMS_EVENTSRowDeleted != null)) {
                    this.ITEMS_EVENTSRowDeleted(this, new ITEMS_EVENTSRowChangeEvent(((ITEMS_EVENTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ITEMS_EVENTSRowDeleting != null)) {
                    this.ITEMS_EVENTSRowDeleting(this, new ITEMS_EVENTSRowChangeEvent(((ITEMS_EVENTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveITEMS_EVENTSRow(ITEMS_EVENTSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                INBASEDataSet1 ds = new INBASEDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ITEMS_EVENTSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LOGPASSDataTable : global::System.Data.TypedTableBase<LOGPASSRow> {
            
            private global::System.Data.DataColumn columnID_LOGPASS;
            
            private global::System.Data.DataColumn columnID_SOTRUD;
            
            private global::System.Data.DataColumn columnTYPE_LOGPASS;
            
            private global::System.Data.DataColumn columnNASV_LOGPASS;
            
            private global::System.Data.DataColumn columnDATE_LOGPASS;
            
            private global::System.Data.DataColumn columnLOGIN_LOGPASS;
            
            private global::System.Data.DataColumn columnPASS_LOGPASS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LOGPASSDataTable() {
                this.TableName = "LOGPASS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LOGPASSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected LOGPASSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_LOGPASSColumn {
                get {
                    return this.columnID_LOGPASS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_SOTRUDColumn {
                get {
                    return this.columnID_SOTRUD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TYPE_LOGPASSColumn {
                get {
                    return this.columnTYPE_LOGPASS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NASV_LOGPASSColumn {
                get {
                    return this.columnNASV_LOGPASS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DATE_LOGPASSColumn {
                get {
                    return this.columnDATE_LOGPASS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LOGIN_LOGPASSColumn {
                get {
                    return this.columnLOGIN_LOGPASS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PASS_LOGPASSColumn {
                get {
                    return this.columnPASS_LOGPASS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LOGPASSRow this[int index] {
                get {
                    return ((LOGPASSRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LOGPASSRowChangeEventHandler LOGPASSRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LOGPASSRowChangeEventHandler LOGPASSRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LOGPASSRowChangeEventHandler LOGPASSRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LOGPASSRowChangeEventHandler LOGPASSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddLOGPASSRow(LOGPASSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LOGPASSRow AddLOGPASSRow(SOTRUDRow parentSOTRUDRowByFK_LOGPASS_SOTRUD, bool TYPE_LOGPASS, string NASV_LOGPASS, System.DateTime DATE_LOGPASS, string LOGIN_LOGPASS, string PASS_LOGPASS) {
                LOGPASSRow rowLOGPASSRow = ((LOGPASSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        TYPE_LOGPASS,
                        NASV_LOGPASS,
                        DATE_LOGPASS,
                        LOGIN_LOGPASS,
                        PASS_LOGPASS};
                if ((parentSOTRUDRowByFK_LOGPASS_SOTRUD != null)) {
                    columnValuesArray[1] = parentSOTRUDRowByFK_LOGPASS_SOTRUD[0];
                }
                rowLOGPASSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLOGPASSRow);
                return rowLOGPASSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LOGPASSRow FindByID_LOGPASS(int ID_LOGPASS) {
                return ((LOGPASSRow)(this.Rows.Find(new object[] {
                            ID_LOGPASS})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                LOGPASSDataTable cln = ((LOGPASSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LOGPASSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID_LOGPASS = base.Columns["ID_LOGPASS"];
                this.columnID_SOTRUD = base.Columns["ID_SOTRUD"];
                this.columnTYPE_LOGPASS = base.Columns["TYPE_LOGPASS"];
                this.columnNASV_LOGPASS = base.Columns["NASV_LOGPASS"];
                this.columnDATE_LOGPASS = base.Columns["DATE_LOGPASS"];
                this.columnLOGIN_LOGPASS = base.Columns["LOGIN_LOGPASS"];
                this.columnPASS_LOGPASS = base.Columns["PASS_LOGPASS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID_LOGPASS = new global::System.Data.DataColumn("ID_LOGPASS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_LOGPASS);
                this.columnID_SOTRUD = new global::System.Data.DataColumn("ID_SOTRUD", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_SOTRUD);
                this.columnTYPE_LOGPASS = new global::System.Data.DataColumn("TYPE_LOGPASS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE_LOGPASS);
                this.columnNASV_LOGPASS = new global::System.Data.DataColumn("NASV_LOGPASS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNASV_LOGPASS);
                this.columnDATE_LOGPASS = new global::System.Data.DataColumn("DATE_LOGPASS", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_LOGPASS);
                this.columnLOGIN_LOGPASS = new global::System.Data.DataColumn("LOGIN_LOGPASS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOGIN_LOGPASS);
                this.columnPASS_LOGPASS = new global::System.Data.DataColumn("PASS_LOGPASS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPASS_LOGPASS);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_LOGPASS}, true));
                this.columnID_LOGPASS.AutoIncrement = true;
                this.columnID_LOGPASS.AutoIncrementSeed = -1;
                this.columnID_LOGPASS.AutoIncrementStep = -1;
                this.columnID_LOGPASS.AllowDBNull = false;
                this.columnID_LOGPASS.ReadOnly = true;
                this.columnID_LOGPASS.Unique = true;
                this.columnID_SOTRUD.AllowDBNull = false;
                this.columnTYPE_LOGPASS.AllowDBNull = false;
                this.columnNASV_LOGPASS.AllowDBNull = false;
                this.columnNASV_LOGPASS.MaxLength = 1240;
                this.columnDATE_LOGPASS.AllowDBNull = false;
                this.columnLOGIN_LOGPASS.AllowDBNull = false;
                this.columnLOGIN_LOGPASS.MaxLength = 840;
                this.columnPASS_LOGPASS.MaxLength = 840;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LOGPASSRow NewLOGPASSRow() {
                return ((LOGPASSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LOGPASSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(LOGPASSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LOGPASSRowChanged != null)) {
                    this.LOGPASSRowChanged(this, new LOGPASSRowChangeEvent(((LOGPASSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LOGPASSRowChanging != null)) {
                    this.LOGPASSRowChanging(this, new LOGPASSRowChangeEvent(((LOGPASSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LOGPASSRowDeleted != null)) {
                    this.LOGPASSRowDeleted(this, new LOGPASSRowChangeEvent(((LOGPASSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LOGPASSRowDeleting != null)) {
                    this.LOGPASSRowDeleting(this, new LOGPASSRowChangeEvent(((LOGPASSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveLOGPASSRow(LOGPASSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                INBASEDataSet1 ds = new INBASEDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LOGPASSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OTDELDataTable : global::System.Data.TypedTableBase<OTDELRow> {
            
            private global::System.Data.DataColumn columnID_OTDEL;
            
            private global::System.Data.DataColumn columnNAME_OTDEL;
            
            private global::System.Data.DataColumn columnTEL_OTDEL;
            
            private global::System.Data.DataColumn columnNACH_OTDEL;
            
            private global::System.Data.DataColumn columnADRESS_OTDEL;
            
            private global::System.Data.DataColumn columnMESTO_OTDEL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OTDELDataTable() {
                this.TableName = "OTDEL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal OTDELDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected OTDELDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_OTDELColumn {
                get {
                    return this.columnID_OTDEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NAME_OTDELColumn {
                get {
                    return this.columnNAME_OTDEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TEL_OTDELColumn {
                get {
                    return this.columnTEL_OTDEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NACH_OTDELColumn {
                get {
                    return this.columnNACH_OTDEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ADRESS_OTDELColumn {
                get {
                    return this.columnADRESS_OTDEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MESTO_OTDELColumn {
                get {
                    return this.columnMESTO_OTDEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OTDELRow this[int index] {
                get {
                    return ((OTDELRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OTDELRowChangeEventHandler OTDELRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OTDELRowChangeEventHandler OTDELRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OTDELRowChangeEventHandler OTDELRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OTDELRowChangeEventHandler OTDELRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddOTDELRow(OTDELRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OTDELRow AddOTDELRow(string NAME_OTDEL, string TEL_OTDEL, int NACH_OTDEL, string ADRESS_OTDEL, string MESTO_OTDEL) {
                OTDELRow rowOTDELRow = ((OTDELRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        NAME_OTDEL,
                        TEL_OTDEL,
                        NACH_OTDEL,
                        ADRESS_OTDEL,
                        MESTO_OTDEL};
                rowOTDELRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOTDELRow);
                return rowOTDELRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OTDELRow FindByID_OTDEL(int ID_OTDEL) {
                return ((OTDELRow)(this.Rows.Find(new object[] {
                            ID_OTDEL})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                OTDELDataTable cln = ((OTDELDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OTDELDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID_OTDEL = base.Columns["ID_OTDEL"];
                this.columnNAME_OTDEL = base.Columns["NAME_OTDEL"];
                this.columnTEL_OTDEL = base.Columns["TEL_OTDEL"];
                this.columnNACH_OTDEL = base.Columns["NACH_OTDEL"];
                this.columnADRESS_OTDEL = base.Columns["ADRESS_OTDEL"];
                this.columnMESTO_OTDEL = base.Columns["MESTO_OTDEL"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID_OTDEL = new global::System.Data.DataColumn("ID_OTDEL", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_OTDEL);
                this.columnNAME_OTDEL = new global::System.Data.DataColumn("NAME_OTDEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_OTDEL);
                this.columnTEL_OTDEL = new global::System.Data.DataColumn("TEL_OTDEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEL_OTDEL);
                this.columnNACH_OTDEL = new global::System.Data.DataColumn("NACH_OTDEL", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNACH_OTDEL);
                this.columnADRESS_OTDEL = new global::System.Data.DataColumn("ADRESS_OTDEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADRESS_OTDEL);
                this.columnMESTO_OTDEL = new global::System.Data.DataColumn("MESTO_OTDEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMESTO_OTDEL);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_OTDEL}, true));
                this.columnID_OTDEL.AutoIncrement = true;
                this.columnID_OTDEL.AutoIncrementSeed = -1;
                this.columnID_OTDEL.AutoIncrementStep = -1;
                this.columnID_OTDEL.AllowDBNull = false;
                this.columnID_OTDEL.ReadOnly = true;
                this.columnID_OTDEL.Unique = true;
                this.columnNAME_OTDEL.AllowDBNull = false;
                this.columnNAME_OTDEL.MaxLength = 240;
                this.columnTEL_OTDEL.MaxLength = 120;
                this.columnADRESS_OTDEL.AllowDBNull = false;
                this.columnADRESS_OTDEL.MaxLength = 128;
                this.columnMESTO_OTDEL.AllowDBNull = false;
                this.columnMESTO_OTDEL.MaxLength = 240;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OTDELRow NewOTDELRow() {
                return ((OTDELRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OTDELRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(OTDELRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OTDELRowChanged != null)) {
                    this.OTDELRowChanged(this, new OTDELRowChangeEvent(((OTDELRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OTDELRowChanging != null)) {
                    this.OTDELRowChanging(this, new OTDELRowChangeEvent(((OTDELRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OTDELRowDeleted != null)) {
                    this.OTDELRowDeleted(this, new OTDELRowChangeEvent(((OTDELRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OTDELRowDeleting != null)) {
                    this.OTDELRowDeleting(this, new OTDELRowChangeEvent(((OTDELRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveOTDELRow(OTDELRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                INBASEDataSet1 ds = new INBASEDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OTDELDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SOTRUDDataTable : global::System.Data.TypedTableBase<SOTRUDRow> {
            
            private global::System.Data.DataColumn columnID_SOTRUD;
            
            private global::System.Data.DataColumn columnFAM_SOTRUD;
            
            private global::System.Data.DataColumn columnIMA_SOTRUD;
            
            private global::System.Data.DataColumn columnOTCH_SOTRUD;
            
            private global::System.Data.DataColumn columnID_OTDEL;
            
            private global::System.Data.DataColumn columnDOLGNOST_SOTRUD;
            
            private global::System.Data.DataColumn columnSTATUS_SOTRUD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SOTRUDDataTable() {
                this.TableName = "SOTRUD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SOTRUDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SOTRUDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_SOTRUDColumn {
                get {
                    return this.columnID_SOTRUD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FAM_SOTRUDColumn {
                get {
                    return this.columnFAM_SOTRUD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IMA_SOTRUDColumn {
                get {
                    return this.columnIMA_SOTRUD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OTCH_SOTRUDColumn {
                get {
                    return this.columnOTCH_SOTRUD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ID_OTDELColumn {
                get {
                    return this.columnID_OTDEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DOLGNOST_SOTRUDColumn {
                get {
                    return this.columnDOLGNOST_SOTRUD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STATUS_SOTRUDColumn {
                get {
                    return this.columnSTATUS_SOTRUD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SOTRUDRow this[int index] {
                get {
                    return ((SOTRUDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SOTRUDRowChangeEventHandler SOTRUDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SOTRUDRowChangeEventHandler SOTRUDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SOTRUDRowChangeEventHandler SOTRUDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SOTRUDRowChangeEventHandler SOTRUDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSOTRUDRow(SOTRUDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SOTRUDRow AddSOTRUDRow(string FAM_SOTRUD, string IMA_SOTRUD, string OTCH_SOTRUD, OTDELRow parentOTDELRowByFK_SOTRUD_OTDEL, string DOLGNOST_SOTRUD, bool STATUS_SOTRUD) {
                SOTRUDRow rowSOTRUDRow = ((SOTRUDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        FAM_SOTRUD,
                        IMA_SOTRUD,
                        OTCH_SOTRUD,
                        null,
                        DOLGNOST_SOTRUD,
                        STATUS_SOTRUD};
                if ((parentOTDELRowByFK_SOTRUD_OTDEL != null)) {
                    columnValuesArray[4] = parentOTDELRowByFK_SOTRUD_OTDEL[0];
                }
                rowSOTRUDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSOTRUDRow);
                return rowSOTRUDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SOTRUDRow FindByID_SOTRUD(int ID_SOTRUD) {
                return ((SOTRUDRow)(this.Rows.Find(new object[] {
                            ID_SOTRUD})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SOTRUDDataTable cln = ((SOTRUDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SOTRUDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID_SOTRUD = base.Columns["ID_SOTRUD"];
                this.columnFAM_SOTRUD = base.Columns["FAM_SOTRUD"];
                this.columnIMA_SOTRUD = base.Columns["IMA_SOTRUD"];
                this.columnOTCH_SOTRUD = base.Columns["OTCH_SOTRUD"];
                this.columnID_OTDEL = base.Columns["ID_OTDEL"];
                this.columnDOLGNOST_SOTRUD = base.Columns["DOLGNOST_SOTRUD"];
                this.columnSTATUS_SOTRUD = base.Columns["STATUS_SOTRUD"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID_SOTRUD = new global::System.Data.DataColumn("ID_SOTRUD", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_SOTRUD);
                this.columnFAM_SOTRUD = new global::System.Data.DataColumn("FAM_SOTRUD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAM_SOTRUD);
                this.columnIMA_SOTRUD = new global::System.Data.DataColumn("IMA_SOTRUD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIMA_SOTRUD);
                this.columnOTCH_SOTRUD = new global::System.Data.DataColumn("OTCH_SOTRUD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTCH_SOTRUD);
                this.columnID_OTDEL = new global::System.Data.DataColumn("ID_OTDEL", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_OTDEL);
                this.columnDOLGNOST_SOTRUD = new global::System.Data.DataColumn("DOLGNOST_SOTRUD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOLGNOST_SOTRUD);
                this.columnSTATUS_SOTRUD = new global::System.Data.DataColumn("STATUS_SOTRUD", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS_SOTRUD);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_SOTRUD}, true));
                this.columnID_SOTRUD.AutoIncrement = true;
                this.columnID_SOTRUD.AutoIncrementSeed = -1;
                this.columnID_SOTRUD.AutoIncrementStep = -1;
                this.columnID_SOTRUD.AllowDBNull = false;
                this.columnID_SOTRUD.ReadOnly = true;
                this.columnID_SOTRUD.Unique = true;
                this.columnFAM_SOTRUD.AllowDBNull = false;
                this.columnFAM_SOTRUD.MaxLength = 80;
                this.columnIMA_SOTRUD.AllowDBNull = false;
                this.columnIMA_SOTRUD.MaxLength = 80;
                this.columnOTCH_SOTRUD.MaxLength = 80;
                this.columnDOLGNOST_SOTRUD.AllowDBNull = false;
                this.columnDOLGNOST_SOTRUD.MaxLength = 120;
                this.columnSTATUS_SOTRUD.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SOTRUDRow NewSOTRUDRow() {
                return ((SOTRUDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SOTRUDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SOTRUDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SOTRUDRowChanged != null)) {
                    this.SOTRUDRowChanged(this, new SOTRUDRowChangeEvent(((SOTRUDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SOTRUDRowChanging != null)) {
                    this.SOTRUDRowChanging(this, new SOTRUDRowChangeEvent(((SOTRUDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SOTRUDRowDeleted != null)) {
                    this.SOTRUDRowDeleted(this, new SOTRUDRowChangeEvent(((SOTRUDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SOTRUDRowDeleting != null)) {
                    this.SOTRUDRowDeleting(this, new SOTRUDRowChangeEvent(((SOTRUDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSOTRUDRow(SOTRUDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                INBASEDataSet1 ds = new INBASEDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SOTRUDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ZAKUPKIDataTable : global::System.Data.TypedTableBase<ZAKUPKIRow> {
            
            private global::System.Data.DataColumn columnNOMER_ZAKUPKI;
            
            private global::System.Data.DataColumn columnDATE_ZAKUPKI;
            
            private global::System.Data.DataColumn columnNAME_ZAKYPKI;
            
            private global::System.Data.DataColumn columnOPIS_ZAKYPKI;
            
            private global::System.Data.DataColumn columnSTATE_ZAKYPKI;
            
            private global::System.Data.DataColumn columnDOK_ZAKYPKI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ZAKUPKIDataTable() {
                this.TableName = "ZAKUPKI";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ZAKUPKIDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ZAKUPKIDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NOMER_ZAKUPKIColumn {
                get {
                    return this.columnNOMER_ZAKUPKI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DATE_ZAKUPKIColumn {
                get {
                    return this.columnDATE_ZAKUPKI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NAME_ZAKYPKIColumn {
                get {
                    return this.columnNAME_ZAKYPKI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OPIS_ZAKYPKIColumn {
                get {
                    return this.columnOPIS_ZAKYPKI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STATE_ZAKYPKIColumn {
                get {
                    return this.columnSTATE_ZAKYPKI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DOK_ZAKYPKIColumn {
                get {
                    return this.columnDOK_ZAKYPKI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ZAKUPKIRow this[int index] {
                get {
                    return ((ZAKUPKIRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ZAKUPKIRowChangeEventHandler ZAKUPKIRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ZAKUPKIRowChangeEventHandler ZAKUPKIRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ZAKUPKIRowChangeEventHandler ZAKUPKIRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ZAKUPKIRowChangeEventHandler ZAKUPKIRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddZAKUPKIRow(ZAKUPKIRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ZAKUPKIRow AddZAKUPKIRow(System.DateTime DATE_ZAKUPKI, string NAME_ZAKYPKI, string OPIS_ZAKYPKI, string STATE_ZAKYPKI, string DOK_ZAKYPKI) {
                ZAKUPKIRow rowZAKUPKIRow = ((ZAKUPKIRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DATE_ZAKUPKI,
                        NAME_ZAKYPKI,
                        OPIS_ZAKYPKI,
                        STATE_ZAKYPKI,
                        DOK_ZAKYPKI};
                rowZAKUPKIRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowZAKUPKIRow);
                return rowZAKUPKIRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ZAKUPKIRow FindByNOMER_ZAKUPKI(int NOMER_ZAKUPKI) {
                return ((ZAKUPKIRow)(this.Rows.Find(new object[] {
                            NOMER_ZAKUPKI})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ZAKUPKIDataTable cln = ((ZAKUPKIDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ZAKUPKIDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnNOMER_ZAKUPKI = base.Columns["NOMER_ZAKUPKI"];
                this.columnDATE_ZAKUPKI = base.Columns["DATE_ZAKUPKI"];
                this.columnNAME_ZAKYPKI = base.Columns["NAME_ZAKYPKI"];
                this.columnOPIS_ZAKYPKI = base.Columns["OPIS_ZAKYPKI"];
                this.columnSTATE_ZAKYPKI = base.Columns["STATE_ZAKYPKI"];
                this.columnDOK_ZAKYPKI = base.Columns["DOK_ZAKYPKI"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnNOMER_ZAKUPKI = new global::System.Data.DataColumn("NOMER_ZAKUPKI", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOMER_ZAKUPKI);
                this.columnDATE_ZAKUPKI = new global::System.Data.DataColumn("DATE_ZAKUPKI", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_ZAKUPKI);
                this.columnNAME_ZAKYPKI = new global::System.Data.DataColumn("NAME_ZAKYPKI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_ZAKYPKI);
                this.columnOPIS_ZAKYPKI = new global::System.Data.DataColumn("OPIS_ZAKYPKI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPIS_ZAKYPKI);
                this.columnSTATE_ZAKYPKI = new global::System.Data.DataColumn("STATE_ZAKYPKI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATE_ZAKYPKI);
                this.columnDOK_ZAKYPKI = new global::System.Data.DataColumn("DOK_ZAKYPKI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOK_ZAKYPKI);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNOMER_ZAKUPKI}, true));
                this.columnNOMER_ZAKUPKI.AutoIncrement = true;
                this.columnNOMER_ZAKUPKI.AutoIncrementSeed = -1;
                this.columnNOMER_ZAKUPKI.AutoIncrementStep = -1;
                this.columnNOMER_ZAKUPKI.AllowDBNull = false;
                this.columnNOMER_ZAKUPKI.ReadOnly = true;
                this.columnNOMER_ZAKUPKI.Unique = true;
                this.columnDATE_ZAKUPKI.AllowDBNull = false;
                this.columnNAME_ZAKYPKI.AllowDBNull = false;
                this.columnNAME_ZAKYPKI.MaxLength = 50;
                this.columnOPIS_ZAKYPKI.MaxLength = 120;
                this.columnSTATE_ZAKYPKI.AllowDBNull = false;
                this.columnSTATE_ZAKYPKI.MaxLength = 20;
                this.columnDOK_ZAKYPKI.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ZAKUPKIRow NewZAKUPKIRow() {
                return ((ZAKUPKIRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ZAKUPKIRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ZAKUPKIRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ZAKUPKIRowChanged != null)) {
                    this.ZAKUPKIRowChanged(this, new ZAKUPKIRowChangeEvent(((ZAKUPKIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ZAKUPKIRowChanging != null)) {
                    this.ZAKUPKIRowChanging(this, new ZAKUPKIRowChangeEvent(((ZAKUPKIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ZAKUPKIRowDeleted != null)) {
                    this.ZAKUPKIRowDeleted(this, new ZAKUPKIRowChangeEvent(((ZAKUPKIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ZAKUPKIRowDeleting != null)) {
                    this.ZAKUPKIRowDeleting(this, new ZAKUPKIRowChangeEvent(((ZAKUPKIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveZAKUPKIRow(ZAKUPKIRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                INBASEDataSet1 ds = new INBASEDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ZAKUPKIDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DEVICERow : global::System.Data.DataRow {
            
            private DEVICEDataTable tableDEVICE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DEVICERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDEVICE = ((DEVICEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_DEVICE {
                get {
                    return ((int)(this[this.tableDEVICE.ID_DEVICEColumn]));
                }
                set {
                    this[this.tableDEVICE.ID_DEVICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TYPE_DEVICE {
                get {
                    return ((string)(this[this.tableDEVICE.TYPE_DEVICEColumn]));
                }
                set {
                    this[this.tableDEVICE.TYPE_DEVICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NAME_DEVICE {
                get {
                    return ((string)(this[this.tableDEVICE.NAME_DEVICEColumn]));
                }
                set {
                    this[this.tableDEVICE.NAME_DEVICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DEV_DEVICE {
                get {
                    try {
                        return ((string)(this[this.tableDEVICE.DEV_DEVICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DEV_DEVICE\' в таблице \'DEVICE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEVICE.DEV_DEVICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NOMER_ZAKUPLI {
                get {
                    try {
                        return ((int)(this[this.tableDEVICE.NOMER_ZAKUPLIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'NOMER_ZAKUPLI\' в таблице \'DEVICE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEVICE.NOMER_ZAKUPLIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DATE_DEVICE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDEVICE.DATE_DEVICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DATE_DEVICE\' в таблице \'DEVICE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEVICE.DATE_DEVICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NET_NAME_DEVICE {
                get {
                    try {
                        return ((string)(this[this.tableDEVICE.NET_NAME_DEVICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'NET_NAME_DEVICE\' в таблице \'DEVICE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEVICE.NET_NAME_DEVICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IP_DEVICE {
                get {
                    try {
                        return ((string)(this[this.tableDEVICE.IP_DEVICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'IP_DEVICE\' в таблице \'DEVICE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEVICE.IP_DEVICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OS_DEVICE {
                get {
                    try {
                        return ((string)(this[this.tableDEVICE.OS_DEVICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'OS_DEVICE\' в таблице \'DEVICE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEVICE.OS_DEVICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool STATIK_IP_DEVICE {
                get {
                    try {
                        return ((bool)(this[this.tableDEVICE.STATIK_IP_DEVICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'STATIK_IP_DEVICE\' в таблице \'DEVICE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEVICE.STATIK_IP_DEVICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DOPINFO_DEVICE {
                get {
                    try {
                        return ((string)(this[this.tableDEVICE.DOPINFO_DEVICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DOPINFO_DEVICE\' в таблице \'DEVICE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEVICE.DOPINFO_DEVICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool TIMORI_DEVICE {
                get {
                    return ((bool)(this[this.tableDEVICE.TIMORI_DEVICEColumn]));
                }
                set {
                    this[this.tableDEVICE.TIMORI_DEVICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STATE_DEVICE {
                get {
                    return ((string)(this[this.tableDEVICE.STATE_DEVICEColumn]));
                }
                set {
                    this[this.tableDEVICE.STATE_DEVICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_SOTRUD {
                get {
                    try {
                        return ((int)(this[this.tableDEVICE.ID_SOTRUDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ID_SOTRUD\' в таблице \'DEVICE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEVICE.ID_SOTRUDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CONECT_DEVICE {
                get {
                    try {
                        return ((int)(this[this.tableDEVICE.CONECT_DEVICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'CONECT_DEVICE\' в таблице \'DEVICE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEVICE.CONECT_DEVICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TYPE_CONECT_DEVICE {
                get {
                    try {
                        return ((string)(this[this.tableDEVICE.TYPE_CONECT_DEVICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'TYPE_CONECT_DEVICE\' в таблице \'DEVICE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEVICE.TYPE_CONECT_DEVICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SN_DEVICE {
                get {
                    try {
                        return ((string)(this[this.tableDEVICE.SN_DEVICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'SN_DEVICE\' в таблице \'DEVICE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEVICE.SN_DEVICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OLD_INV_DEVICE {
                get {
                    try {
                        return ((string)(this[this.tableDEVICE.OLD_INV_DEVICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'OLD_INV_DEVICE\' в таблице \'DEVICE\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEVICE.OLD_INV_DEVICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SOTRUDRow SOTRUDRow {
                get {
                    return ((SOTRUDRow)(this.GetParentRow(this.Table.ParentRelations["FK_DEVICE_SOTRUD"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_DEVICE_SOTRUD"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ZAKUPKIRow ZAKUPKIRow {
                get {
                    return ((ZAKUPKIRow)(this.GetParentRow(this.Table.ParentRelations["FK_DEVICE_ZAKUPKI"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_DEVICE_ZAKUPKI"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDEV_DEVICENull() {
                return this.IsNull(this.tableDEVICE.DEV_DEVICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDEV_DEVICENull() {
                this[this.tableDEVICE.DEV_DEVICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNOMER_ZAKUPLINull() {
                return this.IsNull(this.tableDEVICE.NOMER_ZAKUPLIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNOMER_ZAKUPLINull() {
                this[this.tableDEVICE.NOMER_ZAKUPLIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDATE_DEVICENull() {
                return this.IsNull(this.tableDEVICE.DATE_DEVICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDATE_DEVICENull() {
                this[this.tableDEVICE.DATE_DEVICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNET_NAME_DEVICENull() {
                return this.IsNull(this.tableDEVICE.NET_NAME_DEVICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNET_NAME_DEVICENull() {
                this[this.tableDEVICE.NET_NAME_DEVICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIP_DEVICENull() {
                return this.IsNull(this.tableDEVICE.IP_DEVICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIP_DEVICENull() {
                this[this.tableDEVICE.IP_DEVICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOS_DEVICENull() {
                return this.IsNull(this.tableDEVICE.OS_DEVICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOS_DEVICENull() {
                this[this.tableDEVICE.OS_DEVICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTATIK_IP_DEVICENull() {
                return this.IsNull(this.tableDEVICE.STATIK_IP_DEVICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTATIK_IP_DEVICENull() {
                this[this.tableDEVICE.STATIK_IP_DEVICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDOPINFO_DEVICENull() {
                return this.IsNull(this.tableDEVICE.DOPINFO_DEVICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDOPINFO_DEVICENull() {
                this[this.tableDEVICE.DOPINFO_DEVICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsID_SOTRUDNull() {
                return this.IsNull(this.tableDEVICE.ID_SOTRUDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetID_SOTRUDNull() {
                this[this.tableDEVICE.ID_SOTRUDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCONECT_DEVICENull() {
                return this.IsNull(this.tableDEVICE.CONECT_DEVICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCONECT_DEVICENull() {
                this[this.tableDEVICE.CONECT_DEVICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTYPE_CONECT_DEVICENull() {
                return this.IsNull(this.tableDEVICE.TYPE_CONECT_DEVICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTYPE_CONECT_DEVICENull() {
                this[this.tableDEVICE.TYPE_CONECT_DEVICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSN_DEVICENull() {
                return this.IsNull(this.tableDEVICE.SN_DEVICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSN_DEVICENull() {
                this[this.tableDEVICE.SN_DEVICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOLD_INV_DEVICENull() {
                return this.IsNull(this.tableDEVICE.OLD_INV_DEVICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOLD_INV_DEVICENull() {
                this[this.tableDEVICE.OLD_INV_DEVICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEVICE_EVENTSRow[] GetDEVICE_EVENTSRows() {
                if ((this.Table.ChildRelations["FK_DEVICE_EVENTS_DEVICE"] == null)) {
                    return new DEVICE_EVENTSRow[0];
                }
                else {
                    return ((DEVICE_EVENTSRow[])(base.GetChildRows(this.Table.ChildRelations["FK_DEVICE_EVENTS_DEVICE"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ITEMSRow[] GetITEMSRows() {
                if ((this.Table.ChildRelations["FK_ITEMS_DEVICE"] == null)) {
                    return new ITEMSRow[0];
                }
                else {
                    return ((ITEMSRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ITEMS_DEVICE"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DEVICE_EVENTSRow : global::System.Data.DataRow {
            
            private DEVICE_EVENTSDataTable tableDEVICE_EVENTS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DEVICE_EVENTSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDEVICE_EVENTS = ((DEVICE_EVENTSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int N_DEEV {
                get {
                    return ((int)(this[this.tableDEVICE_EVENTS.N_DEEVColumn]));
                }
                set {
                    this[this.tableDEVICE_EVENTS.N_DEEVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_DEVICE {
                get {
                    return ((int)(this[this.tableDEVICE_EVENTS.ID_DEVICEColumn]));
                }
                set {
                    this[this.tableDEVICE_EVENTS.ID_DEVICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_SOTRUD {
                get {
                    try {
                        return ((int)(this[this.tableDEVICE_EVENTS.ID_SOTRUDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ID_SOTRUD\' в таблице \'DEVICE_EVENTS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEVICE_EVENTS.ID_SOTRUDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TYPE_DEEV {
                get {
                    return ((string)(this[this.tableDEVICE_EVENTS.TYPE_DEEVColumn]));
                }
                set {
                    this[this.tableDEVICE_EVENTS.TYPE_DEEVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DATE_DEEV {
                get {
                    return ((global::System.DateTime)(this[this.tableDEVICE_EVENTS.DATE_DEEVColumn]));
                }
                set {
                    this[this.tableDEVICE_EVENTS.DATE_DEEVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DOPINFO_DEEV {
                get {
                    try {
                        return ((string)(this[this.tableDEVICE_EVENTS.DOPINFO_DEEVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DOPINFO_DEEV\' в таблице \'DEVICE_EVENTS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableDEVICE_EVENTS.DOPINFO_DEEVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEVICERow DEVICERow {
                get {
                    return ((DEVICERow)(this.GetParentRow(this.Table.ParentRelations["FK_DEVICE_EVENTS_DEVICE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_DEVICE_EVENTS_DEVICE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsID_SOTRUDNull() {
                return this.IsNull(this.tableDEVICE_EVENTS.ID_SOTRUDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetID_SOTRUDNull() {
                this[this.tableDEVICE_EVENTS.ID_SOTRUDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDOPINFO_DEEVNull() {
                return this.IsNull(this.tableDEVICE_EVENTS.DOPINFO_DEEVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDOPINFO_DEEVNull() {
                this[this.tableDEVICE_EVENTS.DOPINFO_DEEVColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ITEMSRow : global::System.Data.DataRow {
            
            private ITEMSDataTable tableITEMS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ITEMSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableITEMS = ((ITEMSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_ITEM {
                get {
                    return ((int)(this[this.tableITEMS.ID_ITEMColumn]));
                }
                set {
                    this[this.tableITEMS.ID_ITEMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NOMER_ZAKUPKI {
                get {
                    try {
                        return ((int)(this[this.tableITEMS.NOMER_ZAKUPKIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'NOMER_ZAKUPKI\' в таблице \'ITEMS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableITEMS.NOMER_ZAKUPKIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_DEVICE {
                get {
                    try {
                        return ((int)(this[this.tableITEMS.ID_DEVICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ID_DEVICE\' в таблице \'ITEMS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableITEMS.ID_DEVICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TYPE_ITEM {
                get {
                    return ((string)(this[this.tableITEMS.TYPE_ITEMColumn]));
                }
                set {
                    this[this.tableITEMS.TYPE_ITEMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NAME_ITEM {
                get {
                    return ((string)(this[this.tableITEMS.NAME_ITEMColumn]));
                }
                set {
                    this[this.tableITEMS.NAME_ITEMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DEV_ITEM {
                get {
                    try {
                        return ((string)(this[this.tableITEMS.DEV_ITEMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DEV_ITEM\' в таблице \'ITEMS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableITEMS.DEV_ITEMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STATE_ITEM {
                get {
                    return ((string)(this[this.tableITEMS.STATE_ITEMColumn]));
                }
                set {
                    this[this.tableITEMS.STATE_ITEMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OPISANIE_ITEM {
                get {
                    try {
                        return ((string)(this[this.tableITEMS.OPISANIE_ITEMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'OPISANIE_ITEM\' в таблице \'ITEMS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableITEMS.OPISANIE_ITEMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SN_ITEM {
                get {
                    try {
                        return ((string)(this[this.tableITEMS.SN_ITEMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'SN_ITEM\' в таблице \'ITEMS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableITEMS.SN_ITEMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEVICERow DEVICERow {
                get {
                    return ((DEVICERow)(this.GetParentRow(this.Table.ParentRelations["FK_ITEMS_DEVICE"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ITEMS_DEVICE"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ZAKUPKIRow ZAKUPKIRow {
                get {
                    return ((ZAKUPKIRow)(this.GetParentRow(this.Table.ParentRelations["FK_ITEMS_ZAKUPKI"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ITEMS_ZAKUPKI"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNOMER_ZAKUPKINull() {
                return this.IsNull(this.tableITEMS.NOMER_ZAKUPKIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNOMER_ZAKUPKINull() {
                this[this.tableITEMS.NOMER_ZAKUPKIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsID_DEVICENull() {
                return this.IsNull(this.tableITEMS.ID_DEVICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetID_DEVICENull() {
                this[this.tableITEMS.ID_DEVICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDEV_ITEMNull() {
                return this.IsNull(this.tableITEMS.DEV_ITEMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDEV_ITEMNull() {
                this[this.tableITEMS.DEV_ITEMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOPISANIE_ITEMNull() {
                return this.IsNull(this.tableITEMS.OPISANIE_ITEMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOPISANIE_ITEMNull() {
                this[this.tableITEMS.OPISANIE_ITEMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSN_ITEMNull() {
                return this.IsNull(this.tableITEMS.SN_ITEMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSN_ITEMNull() {
                this[this.tableITEMS.SN_ITEMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ITEMS_EVENTSRow[] GetITEMS_EVENTSRows() {
                if ((this.Table.ChildRelations["FK_ITEMS_EVENTS_ITEMS"] == null)) {
                    return new ITEMS_EVENTSRow[0];
                }
                else {
                    return ((ITEMS_EVENTSRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ITEMS_EVENTS_ITEMS"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ITEMS_EVENTSRow : global::System.Data.DataRow {
            
            private ITEMS_EVENTSDataTable tableITEMS_EVENTS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ITEMS_EVENTSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableITEMS_EVENTS = ((ITEMS_EVENTSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int N_ITEV {
                get {
                    return ((int)(this[this.tableITEMS_EVENTS.N_ITEVColumn]));
                }
                set {
                    this[this.tableITEMS_EVENTS.N_ITEVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_ITEM {
                get {
                    return ((int)(this[this.tableITEMS_EVENTS.ID_ITEMColumn]));
                }
                set {
                    this[this.tableITEMS_EVENTS.ID_ITEMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_DEVICE {
                get {
                    try {
                        return ((int)(this[this.tableITEMS_EVENTS.ID_DEVICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ID_DEVICE\' в таблице \'ITEMS_EVENTS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableITEMS_EVENTS.ID_DEVICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TYPE_ITEV {
                get {
                    return ((string)(this[this.tableITEMS_EVENTS.TYPE_ITEVColumn]));
                }
                set {
                    this[this.tableITEMS_EVENTS.TYPE_ITEVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DATE_ITEV {
                get {
                    return ((global::System.DateTime)(this[this.tableITEMS_EVENTS.DATE_ITEVColumn]));
                }
                set {
                    this[this.tableITEMS_EVENTS.DATE_ITEVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DOPINFO_ITEV {
                get {
                    try {
                        return ((string)(this[this.tableITEMS_EVENTS.DOPINFO_ITEVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DOPINFO_ITEV\' в таблице \'ITEMS_EVENTS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableITEMS_EVENTS.DOPINFO_ITEVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ITEMSRow ITEMSRow {
                get {
                    return ((ITEMSRow)(this.GetParentRow(this.Table.ParentRelations["FK_ITEMS_EVENTS_ITEMS"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ITEMS_EVENTS_ITEMS"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsID_DEVICENull() {
                return this.IsNull(this.tableITEMS_EVENTS.ID_DEVICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetID_DEVICENull() {
                this[this.tableITEMS_EVENTS.ID_DEVICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDOPINFO_ITEVNull() {
                return this.IsNull(this.tableITEMS_EVENTS.DOPINFO_ITEVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDOPINFO_ITEVNull() {
                this[this.tableITEMS_EVENTS.DOPINFO_ITEVColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LOGPASSRow : global::System.Data.DataRow {
            
            private LOGPASSDataTable tableLOGPASS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LOGPASSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLOGPASS = ((LOGPASSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_LOGPASS {
                get {
                    return ((int)(this[this.tableLOGPASS.ID_LOGPASSColumn]));
                }
                set {
                    this[this.tableLOGPASS.ID_LOGPASSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_SOTRUD {
                get {
                    return ((int)(this[this.tableLOGPASS.ID_SOTRUDColumn]));
                }
                set {
                    this[this.tableLOGPASS.ID_SOTRUDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool TYPE_LOGPASS {
                get {
                    return ((bool)(this[this.tableLOGPASS.TYPE_LOGPASSColumn]));
                }
                set {
                    this[this.tableLOGPASS.TYPE_LOGPASSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NASV_LOGPASS {
                get {
                    return ((string)(this[this.tableLOGPASS.NASV_LOGPASSColumn]));
                }
                set {
                    this[this.tableLOGPASS.NASV_LOGPASSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DATE_LOGPASS {
                get {
                    return ((global::System.DateTime)(this[this.tableLOGPASS.DATE_LOGPASSColumn]));
                }
                set {
                    this[this.tableLOGPASS.DATE_LOGPASSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LOGIN_LOGPASS {
                get {
                    return ((string)(this[this.tableLOGPASS.LOGIN_LOGPASSColumn]));
                }
                set {
                    this[this.tableLOGPASS.LOGIN_LOGPASSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PASS_LOGPASS {
                get {
                    try {
                        return ((string)(this[this.tableLOGPASS.PASS_LOGPASSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'PASS_LOGPASS\' в таблице \'LOGPASS\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableLOGPASS.PASS_LOGPASSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SOTRUDRow SOTRUDRow {
                get {
                    return ((SOTRUDRow)(this.GetParentRow(this.Table.ParentRelations["FK_LOGPASS_SOTRUD"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_LOGPASS_SOTRUD"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPASS_LOGPASSNull() {
                return this.IsNull(this.tableLOGPASS.PASS_LOGPASSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPASS_LOGPASSNull() {
                this[this.tableLOGPASS.PASS_LOGPASSColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class OTDELRow : global::System.Data.DataRow {
            
            private OTDELDataTable tableOTDEL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal OTDELRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOTDEL = ((OTDELDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_OTDEL {
                get {
                    return ((int)(this[this.tableOTDEL.ID_OTDELColumn]));
                }
                set {
                    this[this.tableOTDEL.ID_OTDELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NAME_OTDEL {
                get {
                    return ((string)(this[this.tableOTDEL.NAME_OTDELColumn]));
                }
                set {
                    this[this.tableOTDEL.NAME_OTDELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TEL_OTDEL {
                get {
                    try {
                        return ((string)(this[this.tableOTDEL.TEL_OTDELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'TEL_OTDEL\' в таблице \'OTDEL\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableOTDEL.TEL_OTDELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NACH_OTDEL {
                get {
                    try {
                        return ((int)(this[this.tableOTDEL.NACH_OTDELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'NACH_OTDEL\' в таблице \'OTDEL\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableOTDEL.NACH_OTDELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ADRESS_OTDEL {
                get {
                    return ((string)(this[this.tableOTDEL.ADRESS_OTDELColumn]));
                }
                set {
                    this[this.tableOTDEL.ADRESS_OTDELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MESTO_OTDEL {
                get {
                    return ((string)(this[this.tableOTDEL.MESTO_OTDELColumn]));
                }
                set {
                    this[this.tableOTDEL.MESTO_OTDELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTEL_OTDELNull() {
                return this.IsNull(this.tableOTDEL.TEL_OTDELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTEL_OTDELNull() {
                this[this.tableOTDEL.TEL_OTDELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNACH_OTDELNull() {
                return this.IsNull(this.tableOTDEL.NACH_OTDELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNACH_OTDELNull() {
                this[this.tableOTDEL.NACH_OTDELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SOTRUDRow[] GetSOTRUDRows() {
                if ((this.Table.ChildRelations["FK_SOTRUD_OTDEL"] == null)) {
                    return new SOTRUDRow[0];
                }
                else {
                    return ((SOTRUDRow[])(base.GetChildRows(this.Table.ChildRelations["FK_SOTRUD_OTDEL"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SOTRUDRow : global::System.Data.DataRow {
            
            private SOTRUDDataTable tableSOTRUD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SOTRUDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSOTRUD = ((SOTRUDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_SOTRUD {
                get {
                    return ((int)(this[this.tableSOTRUD.ID_SOTRUDColumn]));
                }
                set {
                    this[this.tableSOTRUD.ID_SOTRUDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FAM_SOTRUD {
                get {
                    return ((string)(this[this.tableSOTRUD.FAM_SOTRUDColumn]));
                }
                set {
                    this[this.tableSOTRUD.FAM_SOTRUDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IMA_SOTRUD {
                get {
                    return ((string)(this[this.tableSOTRUD.IMA_SOTRUDColumn]));
                }
                set {
                    this[this.tableSOTRUD.IMA_SOTRUDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OTCH_SOTRUD {
                get {
                    try {
                        return ((string)(this[this.tableSOTRUD.OTCH_SOTRUDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'OTCH_SOTRUD\' в таблице \'SOTRUD\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableSOTRUD.OTCH_SOTRUDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID_OTDEL {
                get {
                    try {
                        return ((int)(this[this.tableSOTRUD.ID_OTDELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ID_OTDEL\' в таблице \'SOTRUD\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableSOTRUD.ID_OTDELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DOLGNOST_SOTRUD {
                get {
                    return ((string)(this[this.tableSOTRUD.DOLGNOST_SOTRUDColumn]));
                }
                set {
                    this[this.tableSOTRUD.DOLGNOST_SOTRUDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool STATUS_SOTRUD {
                get {
                    return ((bool)(this[this.tableSOTRUD.STATUS_SOTRUDColumn]));
                }
                set {
                    this[this.tableSOTRUD.STATUS_SOTRUDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OTDELRow OTDELRow {
                get {
                    return ((OTDELRow)(this.GetParentRow(this.Table.ParentRelations["FK_SOTRUD_OTDEL"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_SOTRUD_OTDEL"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOTCH_SOTRUDNull() {
                return this.IsNull(this.tableSOTRUD.OTCH_SOTRUDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOTCH_SOTRUDNull() {
                this[this.tableSOTRUD.OTCH_SOTRUDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsID_OTDELNull() {
                return this.IsNull(this.tableSOTRUD.ID_OTDELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetID_OTDELNull() {
                this[this.tableSOTRUD.ID_OTDELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEVICERow[] GetDEVICERows() {
                if ((this.Table.ChildRelations["FK_DEVICE_SOTRUD"] == null)) {
                    return new DEVICERow[0];
                }
                else {
                    return ((DEVICERow[])(base.GetChildRows(this.Table.ChildRelations["FK_DEVICE_SOTRUD"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LOGPASSRow[] GetLOGPASSRows() {
                if ((this.Table.ChildRelations["FK_LOGPASS_SOTRUD"] == null)) {
                    return new LOGPASSRow[0];
                }
                else {
                    return ((LOGPASSRow[])(base.GetChildRows(this.Table.ChildRelations["FK_LOGPASS_SOTRUD"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ZAKUPKIRow : global::System.Data.DataRow {
            
            private ZAKUPKIDataTable tableZAKUPKI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ZAKUPKIRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableZAKUPKI = ((ZAKUPKIDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NOMER_ZAKUPKI {
                get {
                    return ((int)(this[this.tableZAKUPKI.NOMER_ZAKUPKIColumn]));
                }
                set {
                    this[this.tableZAKUPKI.NOMER_ZAKUPKIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DATE_ZAKUPKI {
                get {
                    return ((global::System.DateTime)(this[this.tableZAKUPKI.DATE_ZAKUPKIColumn]));
                }
                set {
                    this[this.tableZAKUPKI.DATE_ZAKUPKIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NAME_ZAKYPKI {
                get {
                    return ((string)(this[this.tableZAKUPKI.NAME_ZAKYPKIColumn]));
                }
                set {
                    this[this.tableZAKUPKI.NAME_ZAKYPKIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OPIS_ZAKYPKI {
                get {
                    try {
                        return ((string)(this[this.tableZAKUPKI.OPIS_ZAKYPKIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'OPIS_ZAKYPKI\' в таблице \'ZAKUPKI\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableZAKUPKI.OPIS_ZAKYPKIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STATE_ZAKYPKI {
                get {
                    return ((string)(this[this.tableZAKUPKI.STATE_ZAKYPKIColumn]));
                }
                set {
                    this[this.tableZAKUPKI.STATE_ZAKYPKIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DOK_ZAKYPKI {
                get {
                    try {
                        return ((string)(this[this.tableZAKUPKI.DOK_ZAKYPKIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'DOK_ZAKYPKI\' в таблице \'ZAKUPKI\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableZAKUPKI.DOK_ZAKYPKIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOPIS_ZAKYPKINull() {
                return this.IsNull(this.tableZAKUPKI.OPIS_ZAKYPKIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOPIS_ZAKYPKINull() {
                this[this.tableZAKUPKI.OPIS_ZAKYPKIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDOK_ZAKYPKINull() {
                return this.IsNull(this.tableZAKUPKI.DOK_ZAKYPKIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDOK_ZAKYPKINull() {
                this[this.tableZAKUPKI.DOK_ZAKYPKIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEVICERow[] GetDEVICERows() {
                if ((this.Table.ChildRelations["FK_DEVICE_ZAKUPKI"] == null)) {
                    return new DEVICERow[0];
                }
                else {
                    return ((DEVICERow[])(base.GetChildRows(this.Table.ChildRelations["FK_DEVICE_ZAKUPKI"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ITEMSRow[] GetITEMSRows() {
                if ((this.Table.ChildRelations["FK_ITEMS_ZAKUPKI"] == null)) {
                    return new ITEMSRow[0];
                }
                else {
                    return ((ITEMSRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ITEMS_ZAKUPKI"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DEVICERowChangeEvent : global::System.EventArgs {
            
            private DEVICERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEVICERowChangeEvent(DEVICERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEVICERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DEVICE_EVENTSRowChangeEvent : global::System.EventArgs {
            
            private DEVICE_EVENTSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEVICE_EVENTSRowChangeEvent(DEVICE_EVENTSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEVICE_EVENTSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ITEMSRowChangeEvent : global::System.EventArgs {
            
            private ITEMSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ITEMSRowChangeEvent(ITEMSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ITEMSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ITEMS_EVENTSRowChangeEvent : global::System.EventArgs {
            
            private ITEMS_EVENTSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ITEMS_EVENTSRowChangeEvent(ITEMS_EVENTSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ITEMS_EVENTSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class LOGPASSRowChangeEvent : global::System.EventArgs {
            
            private LOGPASSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LOGPASSRowChangeEvent(LOGPASSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LOGPASSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class OTDELRowChangeEvent : global::System.EventArgs {
            
            private OTDELRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OTDELRowChangeEvent(OTDELRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OTDELRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SOTRUDRowChangeEvent : global::System.EventArgs {
            
            private SOTRUDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SOTRUDRowChangeEvent(SOTRUDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SOTRUDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ZAKUPKIRowChangeEvent : global::System.EventArgs {
            
            private ZAKUPKIRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ZAKUPKIRowChangeEvent(ZAKUPKIRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ZAKUPKIRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace CompozitClient.INBASEDataSet1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DEVICETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DEVICETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DEVICE";
            tableMapping.ColumnMappings.Add("ID_DEVICE", "ID_DEVICE");
            tableMapping.ColumnMappings.Add("TYPE_DEVICE", "TYPE_DEVICE");
            tableMapping.ColumnMappings.Add("NAME_DEVICE", "NAME_DEVICE");
            tableMapping.ColumnMappings.Add("DEV_DEVICE", "DEV_DEVICE");
            tableMapping.ColumnMappings.Add("NOMER_ZAKUPLI", "NOMER_ZAKUPLI");
            tableMapping.ColumnMappings.Add("DATE_DEVICE", "DATE_DEVICE");
            tableMapping.ColumnMappings.Add("NET_NAME_DEVICE", "NET_NAME_DEVICE");
            tableMapping.ColumnMappings.Add("IP_DEVICE", "IP_DEVICE");
            tableMapping.ColumnMappings.Add("OS_DEVICE", "OS_DEVICE");
            tableMapping.ColumnMappings.Add("STATIK_IP_DEVICE", "STATIK_IP_DEVICE");
            tableMapping.ColumnMappings.Add("DOPINFO_DEVICE", "DOPINFO_DEVICE");
            tableMapping.ColumnMappings.Add("TIMORI_DEVICE", "TIMORI_DEVICE");
            tableMapping.ColumnMappings.Add("STATE_DEVICE", "STATE_DEVICE");
            tableMapping.ColumnMappings.Add("ID_SOTRUD", "ID_SOTRUD");
            tableMapping.ColumnMappings.Add("CONECT_DEVICE", "CONECT_DEVICE");
            tableMapping.ColumnMappings.Add("TYPE_CONECT_DEVICE", "TYPE_CONECT_DEVICE");
            tableMapping.ColumnMappings.Add("SN_DEVICE", "SN_DEVICE");
            tableMapping.ColumnMappings.Add("OLD_INV_DEVICE", "OLD_INV_DEVICE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [DEVICE] WHERE (([ID_DEVICE] = @Original_ID_DEVICE) AND ([TYPE_DEVICE" +
                "] = @Original_TYPE_DEVICE) AND ([NAME_DEVICE] = @Original_NAME_DEVICE) AND ((@Is" +
                "Null_DEV_DEVICE = 1 AND [DEV_DEVICE] IS NULL) OR ([DEV_DEVICE] = @Original_DEV_D" +
                "EVICE)) AND ((@IsNull_NOMER_ZAKUPLI = 1 AND [NOMER_ZAKUPLI] IS NULL) OR ([NOMER_" +
                "ZAKUPLI] = @Original_NOMER_ZAKUPLI)) AND ((@IsNull_DATE_DEVICE = 1 AND [DATE_DEV" +
                "ICE] IS NULL) OR ([DATE_DEVICE] = @Original_DATE_DEVICE)) AND ((@IsNull_NET_NAME" +
                "_DEVICE = 1 AND [NET_NAME_DEVICE] IS NULL) OR ([NET_NAME_DEVICE] = @Original_NET" +
                "_NAME_DEVICE)) AND ((@IsNull_IP_DEVICE = 1 AND [IP_DEVICE] IS NULL) OR ([IP_DEVI" +
                "CE] = @Original_IP_DEVICE)) AND ((@IsNull_OS_DEVICE = 1 AND [OS_DEVICE] IS NULL)" +
                " OR ([OS_DEVICE] = @Original_OS_DEVICE)) AND ((@IsNull_STATIK_IP_DEVICE = 1 AND " +
                "[STATIK_IP_DEVICE] IS NULL) OR ([STATIK_IP_DEVICE] = @Original_STATIK_IP_DEVICE)" +
                ") AND ((@IsNull_DOPINFO_DEVICE = 1 AND [DOPINFO_DEVICE] IS NULL) OR ([DOPINFO_DE" +
                "VICE] = @Original_DOPINFO_DEVICE)) AND ([TIMORI_DEVICE] = @Original_TIMORI_DEVIC" +
                "E) AND ([STATE_DEVICE] = @Original_STATE_DEVICE) AND ((@IsNull_ID_SOTRUD = 1 AND" +
                " [ID_SOTRUD] IS NULL) OR ([ID_SOTRUD] = @Original_ID_SOTRUD)) AND ((@IsNull_CONE" +
                "CT_DEVICE = 1 AND [CONECT_DEVICE] IS NULL) OR ([CONECT_DEVICE] = @Original_CONEC" +
                "T_DEVICE)) AND ((@IsNull_TYPE_CONECT_DEVICE = 1 AND [TYPE_CONECT_DEVICE] IS NULL" +
                ") OR ([TYPE_CONECT_DEVICE] = @Original_TYPE_CONECT_DEVICE)) AND ((@IsNull_SN_DEV" +
                "ICE = 1 AND [SN_DEVICE] IS NULL) OR ([SN_DEVICE] = @Original_SN_DEVICE)) AND ((@" +
                "IsNull_OLD_INV_DEVICE = 1 AND [OLD_INV_DEVICE] IS NULL) OR ([OLD_INV_DEVICE] = @" +
                "Original_OLD_INV_DEVICE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TYPE_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DEV_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEV_DEVICE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEV_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEV_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NOMER_ZAKUPLI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOMER_ZAKUPLI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOMER_ZAKUPLI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOMER_ZAKUPLI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DATE_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_DEVICE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_DEVICE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NET_NAME_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NET_NAME_DEVICE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NET_NAME_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NET_NAME_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_DEVICE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OS_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OS_DEVICE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OS_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OS_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STATIK_IP_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATIK_IP_DEVICE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STATIK_IP_DEVICE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATIK_IP_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DOPINFO_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOPINFO_DEVICE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DOPINFO_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOPINFO_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TIMORI_DEVICE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIMORI_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STATE_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATE_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_SOTRUD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_SOTRUD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_SOTRUD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_SOTRUD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CONECT_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONECT_DEVICE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONECT_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONECT_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TYPE_CONECT_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_CONECT_DEVICE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TYPE_CONECT_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_CONECT_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SN_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SN_DEVICE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SN_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SN_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OLD_INV_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_INV_DEVICE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OLD_INV_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_INV_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [DEVICE] ([TYPE_DEVICE], [NAME_DEVICE], [DEV_DEVICE], [NOMER_ZAKUPLI], [DATE_DEVICE], [NET_NAME_DEVICE], [IP_DEVICE], [OS_DEVICE], [STATIK_IP_DEVICE], [DOPINFO_DEVICE], [TIMORI_DEVICE], [STATE_DEVICE], [ID_SOTRUD], [CONECT_DEVICE], [TYPE_CONECT_DEVICE], [SN_DEVICE], [OLD_INV_DEVICE]) VALUES (@TYPE_DEVICE, @NAME_DEVICE, @DEV_DEVICE, @NOMER_ZAKUPLI, @DATE_DEVICE, @NET_NAME_DEVICE, @IP_DEVICE, @OS_DEVICE, @STATIK_IP_DEVICE, @DOPINFO_DEVICE, @TIMORI_DEVICE, @STATE_DEVICE, @ID_SOTRUD, @CONECT_DEVICE, @TYPE_CONECT_DEVICE, @SN_DEVICE, @OLD_INV_DEVICE);
SELECT ID_DEVICE, TYPE_DEVICE, NAME_DEVICE, DEV_DEVICE, NOMER_ZAKUPLI, DATE_DEVICE, NET_NAME_DEVICE, IP_DEVICE, OS_DEVICE, STATIK_IP_DEVICE, DOPINFO_DEVICE, TIMORI_DEVICE, STATE_DEVICE, ID_SOTRUD, CONECT_DEVICE, TYPE_CONECT_DEVICE, SN_DEVICE, OLD_INV_DEVICE FROM DEVICE WHERE (ID_DEVICE = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEV_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEV_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOMER_ZAKUPLI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOMER_ZAKUPLI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_DEVICE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NET_NAME_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NET_NAME_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OS_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OS_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATIK_IP_DEVICE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATIK_IP_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOPINFO_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOPINFO_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TIMORI_DEVICE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIMORI_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATE_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATE_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_SOTRUD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_SOTRUD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONECT_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONECT_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE_CONECT_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_CONECT_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SN_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SN_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OLD_INV_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_INV_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [DEVICE] SET [TYPE_DEVICE] = @TYPE_DEVICE, [NAME_DEVICE] = @NAME_DEVICE, [" +
                "DEV_DEVICE] = @DEV_DEVICE, [NOMER_ZAKUPLI] = @NOMER_ZAKUPLI, [DATE_DEVICE] = @DA" +
                "TE_DEVICE, [NET_NAME_DEVICE] = @NET_NAME_DEVICE, [IP_DEVICE] = @IP_DEVICE, [OS_D" +
                "EVICE] = @OS_DEVICE, [STATIK_IP_DEVICE] = @STATIK_IP_DEVICE, [DOPINFO_DEVICE] = " +
                "@DOPINFO_DEVICE, [TIMORI_DEVICE] = @TIMORI_DEVICE, [STATE_DEVICE] = @STATE_DEVIC" +
                "E, [ID_SOTRUD] = @ID_SOTRUD, [CONECT_DEVICE] = @CONECT_DEVICE, [TYPE_CONECT_DEVI" +
                "CE] = @TYPE_CONECT_DEVICE, [SN_DEVICE] = @SN_DEVICE, [OLD_INV_DEVICE] = @OLD_INV" +
                "_DEVICE WHERE (([ID_DEVICE] = @Original_ID_DEVICE) AND ([TYPE_DEVICE] = @Origina" +
                "l_TYPE_DEVICE) AND ([NAME_DEVICE] = @Original_NAME_DEVICE) AND ((@IsNull_DEV_DEV" +
                "ICE = 1 AND [DEV_DEVICE] IS NULL) OR ([DEV_DEVICE] = @Original_DEV_DEVICE)) AND " +
                "((@IsNull_NOMER_ZAKUPLI = 1 AND [NOMER_ZAKUPLI] IS NULL) OR ([NOMER_ZAKUPLI] = @" +
                "Original_NOMER_ZAKUPLI)) AND ((@IsNull_DATE_DEVICE = 1 AND [DATE_DEVICE] IS NULL" +
                ") OR ([DATE_DEVICE] = @Original_DATE_DEVICE)) AND ((@IsNull_NET_NAME_DEVICE = 1 " +
                "AND [NET_NAME_DEVICE] IS NULL) OR ([NET_NAME_DEVICE] = @Original_NET_NAME_DEVICE" +
                ")) AND ((@IsNull_IP_DEVICE = 1 AND [IP_DEVICE] IS NULL) OR ([IP_DEVICE] = @Origi" +
                "nal_IP_DEVICE)) AND ((@IsNull_OS_DEVICE = 1 AND [OS_DEVICE] IS NULL) OR ([OS_DEV" +
                "ICE] = @Original_OS_DEVICE)) AND ((@IsNull_STATIK_IP_DEVICE = 1 AND [STATIK_IP_D" +
                "EVICE] IS NULL) OR ([STATIK_IP_DEVICE] = @Original_STATIK_IP_DEVICE)) AND ((@IsN" +
                "ull_DOPINFO_DEVICE = 1 AND [DOPINFO_DEVICE] IS NULL) OR ([DOPINFO_DEVICE] = @Ori" +
                "ginal_DOPINFO_DEVICE)) AND ([TIMORI_DEVICE] = @Original_TIMORI_DEVICE) AND ([STA" +
                "TE_DEVICE] = @Original_STATE_DEVICE) AND ((@IsNull_ID_SOTRUD = 1 AND [ID_SOTRUD]" +
                " IS NULL) OR ([ID_SOTRUD] = @Original_ID_SOTRUD)) AND ((@IsNull_CONECT_DEVICE = " +
                "1 AND [CONECT_DEVICE] IS NULL) OR ([CONECT_DEVICE] = @Original_CONECT_DEVICE)) A" +
                "ND ((@IsNull_TYPE_CONECT_DEVICE = 1 AND [TYPE_CONECT_DEVICE] IS NULL) OR ([TYPE_" +
                "CONECT_DEVICE] = @Original_TYPE_CONECT_DEVICE)) AND ((@IsNull_SN_DEVICE = 1 AND " +
                "[SN_DEVICE] IS NULL) OR ([SN_DEVICE] = @Original_SN_DEVICE)) AND ((@IsNull_OLD_I" +
                "NV_DEVICE = 1 AND [OLD_INV_DEVICE] IS NULL) OR ([OLD_INV_DEVICE] = @Original_OLD" +
                "_INV_DEVICE)));\r\nSELECT ID_DEVICE, TYPE_DEVICE, NAME_DEVICE, DEV_DEVICE, NOMER_Z" +
                "AKUPLI, DATE_DEVICE, NET_NAME_DEVICE, IP_DEVICE, OS_DEVICE, STATIK_IP_DEVICE, DO" +
                "PINFO_DEVICE, TIMORI_DEVICE, STATE_DEVICE, ID_SOTRUD, CONECT_DEVICE, TYPE_CONECT" +
                "_DEVICE, SN_DEVICE, OLD_INV_DEVICE FROM DEVICE WHERE (ID_DEVICE = @ID_DEVICE)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEV_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEV_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOMER_ZAKUPLI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOMER_ZAKUPLI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_DEVICE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NET_NAME_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NET_NAME_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OS_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OS_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATIK_IP_DEVICE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATIK_IP_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOPINFO_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOPINFO_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TIMORI_DEVICE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIMORI_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATE_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATE_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_SOTRUD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_SOTRUD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CONECT_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONECT_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE_CONECT_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_CONECT_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SN_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SN_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OLD_INV_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_INV_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TYPE_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DEV_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEV_DEVICE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEV_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEV_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NOMER_ZAKUPLI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOMER_ZAKUPLI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOMER_ZAKUPLI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOMER_ZAKUPLI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DATE_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_DEVICE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_DEVICE", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NET_NAME_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NET_NAME_DEVICE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NET_NAME_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NET_NAME_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_DEVICE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OS_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OS_DEVICE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OS_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OS_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STATIK_IP_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATIK_IP_DEVICE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STATIK_IP_DEVICE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATIK_IP_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DOPINFO_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOPINFO_DEVICE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DOPINFO_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOPINFO_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TIMORI_DEVICE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIMORI_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STATE_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATE_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_SOTRUD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_SOTRUD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_SOTRUD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_SOTRUD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CONECT_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONECT_DEVICE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CONECT_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CONECT_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TYPE_CONECT_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_CONECT_DEVICE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TYPE_CONECT_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_CONECT_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SN_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SN_DEVICE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SN_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SN_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OLD_INV_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_INV_DEVICE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OLD_INV_DEVICE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_INV_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_DEVICE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::CompozitClient.Properties.Settings.Default.INBASEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        ID_DEVICE, TYPE_DEVICE, NAME_DEVICE, DEV_DEVICE, NOMER_ZAKUPLI, DATE_DEVICE, NET_NAME_DEVICE, IP_DEVICE, OS_DEVICE, STATIK_IP_DEVICE, DOPINFO_DEVICE, TIMORI_DEVICE, 
                         STATE_DEVICE, ID_SOTRUD, CONECT_DEVICE, TYPE_CONECT_DEVICE, SN_DEVICE, OLD_INV_DEVICE
FROM            DEVICE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.AddDevice";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE_PC", global::System.Data.SqlDbType.NVarChar, 40, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_PC", global::System.Data.SqlDbType.NVarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEV_PC", global::System.Data.SqlDbType.NVarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOMER_ZAKUPLI", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_SOTRUD", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_PC", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NET_NAME_PC", global::System.Data.SqlDbType.NVarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_PC", global::System.Data.SqlDbType.NVarChar, 28, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OS_PC", global::System.Data.SqlDbType.NVarChar, 60, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATIK_IP_PC", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOPINFO_PC", global::System.Data.SqlDbType.NVarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TIMORI", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATE", global::System.Data.SqlDbType.NVarChar, 40, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Concect", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeConect", global::System.Data.SqlDbType.NVarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SN_DEVICE", global::System.Data.SqlDbType.NVarChar, 180, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OLD_INV_DEVICE", global::System.Data.SqlDbType.NVarChar, 120, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "dbo.UpdateDevice";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE_PC", global::System.Data.SqlDbType.NVarChar, 40, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_PC", global::System.Data.SqlDbType.NVarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEV_PC", global::System.Data.SqlDbType.NVarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOMER_ZAKUPLI", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_PC", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NET_NAME_PC", global::System.Data.SqlDbType.NVarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_PC", global::System.Data.SqlDbType.NVarChar, 28, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OS_PC", global::System.Data.SqlDbType.NVarChar, 60, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATIK_IP_PC", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOPINFO_PC", global::System.Data.SqlDbType.NVarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TIMORI", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATE", global::System.Data.SqlDbType.NVarChar, 40, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IDSOTRUD", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(INBASEDataSet1.DEVICEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual INBASEDataSet1.DEVICEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            INBASEDataSet1.DEVICEDataTable dataTable = new INBASEDataSet1.DEVICEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(INBASEDataSet1.DEVICEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(INBASEDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "DEVICE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_ID_DEVICE, 
                    string Original_TYPE_DEVICE, 
                    string Original_NAME_DEVICE, 
                    string Original_DEV_DEVICE, 
                    global::System.Nullable<int> Original_NOMER_ZAKUPLI, 
                    global::System.Nullable<global::System.DateTime> Original_DATE_DEVICE, 
                    string Original_NET_NAME_DEVICE, 
                    string Original_IP_DEVICE, 
                    string Original_OS_DEVICE, 
                    global::System.Nullable<bool> Original_STATIK_IP_DEVICE, 
                    string Original_DOPINFO_DEVICE, 
                    bool Original_TIMORI_DEVICE, 
                    string Original_STATE_DEVICE, 
                    global::System.Nullable<int> Original_ID_SOTRUD, 
                    global::System.Nullable<int> Original_CONECT_DEVICE, 
                    string Original_TYPE_CONECT_DEVICE, 
                    string Original_SN_DEVICE, 
                    string Original_OLD_INV_DEVICE) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_DEVICE));
            if ((Original_TYPE_DEVICE == null)) {
                throw new global::System.ArgumentNullException("Original_TYPE_DEVICE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_TYPE_DEVICE));
            }
            if ((Original_NAME_DEVICE == null)) {
                throw new global::System.ArgumentNullException("Original_NAME_DEVICE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_NAME_DEVICE));
            }
            if ((Original_DEV_DEVICE == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_DEV_DEVICE));
            }
            if ((Original_NOMER_ZAKUPLI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_NOMER_ZAKUPLI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_DATE_DEVICE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_DATE_DEVICE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_NET_NAME_DEVICE == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_NET_NAME_DEVICE));
            }
            if ((Original_IP_DEVICE == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_IP_DEVICE));
            }
            if ((Original_OS_DEVICE == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_OS_DEVICE));
            }
            if ((Original_STATIK_IP_DEVICE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((bool)(Original_STATIK_IP_DEVICE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_DOPINFO_DEVICE == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_DOPINFO_DEVICE));
            }
            this.Adapter.DeleteCommand.Parameters[19].Value = ((bool)(Original_TIMORI_DEVICE));
            if ((Original_STATE_DEVICE == null)) {
                throw new global::System.ArgumentNullException("Original_STATE_DEVICE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_STATE_DEVICE));
            }
            if ((Original_ID_SOTRUD.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((int)(Original_ID_SOTRUD.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_CONECT_DEVICE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((int)(Original_CONECT_DEVICE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_TYPE_CONECT_DEVICE == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_TYPE_CONECT_DEVICE));
            }
            if ((Original_SN_DEVICE == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_SN_DEVICE));
            }
            if ((Original_OLD_INV_DEVICE == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_OLD_INV_DEVICE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string TYPE_DEVICE, 
                    string NAME_DEVICE, 
                    string DEV_DEVICE, 
                    global::System.Nullable<int> NOMER_ZAKUPLI, 
                    global::System.Nullable<global::System.DateTime> DATE_DEVICE, 
                    string NET_NAME_DEVICE, 
                    string IP_DEVICE, 
                    string OS_DEVICE, 
                    global::System.Nullable<bool> STATIK_IP_DEVICE, 
                    string DOPINFO_DEVICE, 
                    bool TIMORI_DEVICE, 
                    string STATE_DEVICE, 
                    global::System.Nullable<int> ID_SOTRUD, 
                    global::System.Nullable<int> CONECT_DEVICE, 
                    string TYPE_CONECT_DEVICE, 
                    string SN_DEVICE, 
                    string OLD_INV_DEVICE) {
            if ((TYPE_DEVICE == null)) {
                throw new global::System.ArgumentNullException("TYPE_DEVICE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TYPE_DEVICE));
            }
            if ((NAME_DEVICE == null)) {
                throw new global::System.ArgumentNullException("NAME_DEVICE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NAME_DEVICE));
            }
            if ((DEV_DEVICE == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DEV_DEVICE));
            }
            if ((NOMER_ZAKUPLI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(NOMER_ZAKUPLI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((DATE_DEVICE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(DATE_DEVICE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((NET_NAME_DEVICE == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(NET_NAME_DEVICE));
            }
            if ((IP_DEVICE == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(IP_DEVICE));
            }
            if ((OS_DEVICE == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(OS_DEVICE));
            }
            if ((STATIK_IP_DEVICE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((bool)(STATIK_IP_DEVICE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((DOPINFO_DEVICE == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(DOPINFO_DEVICE));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((bool)(TIMORI_DEVICE));
            if ((STATE_DEVICE == null)) {
                throw new global::System.ArgumentNullException("STATE_DEVICE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(STATE_DEVICE));
            }
            if ((ID_SOTRUD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(ID_SOTRUD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((CONECT_DEVICE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((int)(CONECT_DEVICE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((TYPE_CONECT_DEVICE == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(TYPE_CONECT_DEVICE));
            }
            if ((SN_DEVICE == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(SN_DEVICE));
            }
            if ((OLD_INV_DEVICE == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(OLD_INV_DEVICE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string TYPE_DEVICE, 
                    string NAME_DEVICE, 
                    string DEV_DEVICE, 
                    global::System.Nullable<int> NOMER_ZAKUPLI, 
                    global::System.Nullable<global::System.DateTime> DATE_DEVICE, 
                    string NET_NAME_DEVICE, 
                    string IP_DEVICE, 
                    string OS_DEVICE, 
                    global::System.Nullable<bool> STATIK_IP_DEVICE, 
                    string DOPINFO_DEVICE, 
                    bool TIMORI_DEVICE, 
                    string STATE_DEVICE, 
                    global::System.Nullable<int> ID_SOTRUD, 
                    global::System.Nullable<int> CONECT_DEVICE, 
                    string TYPE_CONECT_DEVICE, 
                    string SN_DEVICE, 
                    string OLD_INV_DEVICE, 
                    int Original_ID_DEVICE, 
                    string Original_TYPE_DEVICE, 
                    string Original_NAME_DEVICE, 
                    string Original_DEV_DEVICE, 
                    global::System.Nullable<int> Original_NOMER_ZAKUPLI, 
                    global::System.Nullable<global::System.DateTime> Original_DATE_DEVICE, 
                    string Original_NET_NAME_DEVICE, 
                    string Original_IP_DEVICE, 
                    string Original_OS_DEVICE, 
                    global::System.Nullable<bool> Original_STATIK_IP_DEVICE, 
                    string Original_DOPINFO_DEVICE, 
                    bool Original_TIMORI_DEVICE, 
                    string Original_STATE_DEVICE, 
                    global::System.Nullable<int> Original_ID_SOTRUD, 
                    global::System.Nullable<int> Original_CONECT_DEVICE, 
                    string Original_TYPE_CONECT_DEVICE, 
                    string Original_SN_DEVICE, 
                    string Original_OLD_INV_DEVICE, 
                    int ID_DEVICE) {
            if ((TYPE_DEVICE == null)) {
                throw new global::System.ArgumentNullException("TYPE_DEVICE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TYPE_DEVICE));
            }
            if ((NAME_DEVICE == null)) {
                throw new global::System.ArgumentNullException("NAME_DEVICE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NAME_DEVICE));
            }
            if ((DEV_DEVICE == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DEV_DEVICE));
            }
            if ((NOMER_ZAKUPLI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(NOMER_ZAKUPLI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((DATE_DEVICE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(DATE_DEVICE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((NET_NAME_DEVICE == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(NET_NAME_DEVICE));
            }
            if ((IP_DEVICE == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(IP_DEVICE));
            }
            if ((OS_DEVICE == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(OS_DEVICE));
            }
            if ((STATIK_IP_DEVICE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(STATIK_IP_DEVICE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((DOPINFO_DEVICE == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(DOPINFO_DEVICE));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(TIMORI_DEVICE));
            if ((STATE_DEVICE == null)) {
                throw new global::System.ArgumentNullException("STATE_DEVICE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(STATE_DEVICE));
            }
            if ((ID_SOTRUD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(ID_SOTRUD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((CONECT_DEVICE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(CONECT_DEVICE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((TYPE_CONECT_DEVICE == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(TYPE_CONECT_DEVICE));
            }
            if ((SN_DEVICE == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(SN_DEVICE));
            }
            if ((OLD_INV_DEVICE == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(OLD_INV_DEVICE));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_ID_DEVICE));
            if ((Original_TYPE_DEVICE == null)) {
                throw new global::System.ArgumentNullException("Original_TYPE_DEVICE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_TYPE_DEVICE));
            }
            if ((Original_NAME_DEVICE == null)) {
                throw new global::System.ArgumentNullException("Original_NAME_DEVICE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_NAME_DEVICE));
            }
            if ((Original_DEV_DEVICE == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_DEV_DEVICE));
            }
            if ((Original_NOMER_ZAKUPLI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_NOMER_ZAKUPLI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_DATE_DEVICE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTime)(Original_DATE_DEVICE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_NET_NAME_DEVICE == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_NET_NAME_DEVICE));
            }
            if ((Original_IP_DEVICE == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_IP_DEVICE));
            }
            if ((Original_OS_DEVICE == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_OS_DEVICE));
            }
            if ((Original_STATIK_IP_DEVICE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((bool)(Original_STATIK_IP_DEVICE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_DOPINFO_DEVICE == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_DOPINFO_DEVICE));
            }
            this.Adapter.UpdateCommand.Parameters[36].Value = ((bool)(Original_TIMORI_DEVICE));
            if ((Original_STATE_DEVICE == null)) {
                throw new global::System.ArgumentNullException("Original_STATE_DEVICE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_STATE_DEVICE));
            }
            if ((Original_ID_SOTRUD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(Original_ID_SOTRUD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_CONECT_DEVICE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(Original_CONECT_DEVICE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_TYPE_CONECT_DEVICE == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_TYPE_CONECT_DEVICE));
            }
            if ((Original_SN_DEVICE == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_SN_DEVICE));
            }
            if ((Original_OLD_INV_DEVICE == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_OLD_INV_DEVICE));
            }
            this.Adapter.UpdateCommand.Parameters[48].Value = ((int)(ID_DEVICE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string TYPE_DEVICE, 
                    string NAME_DEVICE, 
                    string DEV_DEVICE, 
                    global::System.Nullable<int> NOMER_ZAKUPLI, 
                    global::System.Nullable<global::System.DateTime> DATE_DEVICE, 
                    string NET_NAME_DEVICE, 
                    string IP_DEVICE, 
                    string OS_DEVICE, 
                    global::System.Nullable<bool> STATIK_IP_DEVICE, 
                    string DOPINFO_DEVICE, 
                    bool TIMORI_DEVICE, 
                    string STATE_DEVICE, 
                    global::System.Nullable<int> ID_SOTRUD, 
                    global::System.Nullable<int> CONECT_DEVICE, 
                    string TYPE_CONECT_DEVICE, 
                    string SN_DEVICE, 
                    string OLD_INV_DEVICE, 
                    int Original_ID_DEVICE, 
                    string Original_TYPE_DEVICE, 
                    string Original_NAME_DEVICE, 
                    string Original_DEV_DEVICE, 
                    global::System.Nullable<int> Original_NOMER_ZAKUPLI, 
                    global::System.Nullable<global::System.DateTime> Original_DATE_DEVICE, 
                    string Original_NET_NAME_DEVICE, 
                    string Original_IP_DEVICE, 
                    string Original_OS_DEVICE, 
                    global::System.Nullable<bool> Original_STATIK_IP_DEVICE, 
                    string Original_DOPINFO_DEVICE, 
                    bool Original_TIMORI_DEVICE, 
                    string Original_STATE_DEVICE, 
                    global::System.Nullable<int> Original_ID_SOTRUD, 
                    global::System.Nullable<int> Original_CONECT_DEVICE, 
                    string Original_TYPE_CONECT_DEVICE, 
                    string Original_SN_DEVICE, 
                    string Original_OLD_INV_DEVICE) {
            return this.Update(TYPE_DEVICE, NAME_DEVICE, DEV_DEVICE, NOMER_ZAKUPLI, DATE_DEVICE, NET_NAME_DEVICE, IP_DEVICE, OS_DEVICE, STATIK_IP_DEVICE, DOPINFO_DEVICE, TIMORI_DEVICE, STATE_DEVICE, ID_SOTRUD, CONECT_DEVICE, TYPE_CONECT_DEVICE, SN_DEVICE, OLD_INV_DEVICE, Original_ID_DEVICE, Original_TYPE_DEVICE, Original_NAME_DEVICE, Original_DEV_DEVICE, Original_NOMER_ZAKUPLI, Original_DATE_DEVICE, Original_NET_NAME_DEVICE, Original_IP_DEVICE, Original_OS_DEVICE, Original_STATIK_IP_DEVICE, Original_DOPINFO_DEVICE, Original_TIMORI_DEVICE, Original_STATE_DEVICE, Original_ID_SOTRUD, Original_CONECT_DEVICE, Original_TYPE_CONECT_DEVICE, Original_SN_DEVICE, Original_OLD_INV_DEVICE, Original_ID_DEVICE);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual object AddDevice(
                    string TYPE_PC, 
                    string NAME_PC, 
                    string DEV_PC, 
                    global::System.Nullable<int> NOMER_ZAKUPLI, 
                    global::System.Nullable<int> ID_SOTRUD, 
                    global::System.Nullable<global::System.DateTime> DATE_PC, 
                    string NET_NAME_PC, 
                    string IP_PC, 
                    string OS_PC, 
                    global::System.Nullable<bool> STATIK_IP_PC, 
                    string DOPINFO_PC, 
                    global::System.Nullable<bool> TIMORI, 
                    string STATE, 
                    global::System.Nullable<int> Concect, 
                    string TypeConect, 
                    string SN_DEVICE, 
                    string OLD_INV_DEVICE) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((TYPE_PC == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(TYPE_PC));
            }
            if ((NAME_PC == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(NAME_PC));
            }
            if ((DEV_PC == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(DEV_PC));
            }
            if ((NOMER_ZAKUPLI.HasValue == true)) {
                command.Parameters[4].Value = ((int)(NOMER_ZAKUPLI.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ID_SOTRUD.HasValue == true)) {
                command.Parameters[5].Value = ((int)(ID_SOTRUD.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((DATE_PC.HasValue == true)) {
                command.Parameters[6].Value = ((System.DateTime)(DATE_PC.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((NET_NAME_PC == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(NET_NAME_PC));
            }
            if ((IP_PC == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(IP_PC));
            }
            if ((OS_PC == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(OS_PC));
            }
            if ((STATIK_IP_PC.HasValue == true)) {
                command.Parameters[10].Value = ((bool)(STATIK_IP_PC.Value));
            }
            else {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((DOPINFO_PC == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(DOPINFO_PC));
            }
            if ((TIMORI.HasValue == true)) {
                command.Parameters[12].Value = ((bool)(TIMORI.Value));
            }
            else {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((STATE == null)) {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[13].Value = ((string)(STATE));
            }
            if ((Concect.HasValue == true)) {
                command.Parameters[14].Value = ((int)(Concect.Value));
            }
            else {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((TypeConect == null)) {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[15].Value = ((string)(TypeConect));
            }
            if ((SN_DEVICE == null)) {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[16].Value = ((string)(SN_DEVICE));
            }
            if ((OLD_INV_DEVICE == null)) {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[17].Value = ((string)(OLD_INV_DEVICE));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateDevice(global::System.Nullable<int> CHID, string TYPE_PC, string NAME_PC, string DEV_PC, global::System.Nullable<int> NOMER_ZAKUPLI, global::System.Nullable<global::System.DateTime> DATE_PC, string NET_NAME_PC, string IP_PC, string OS_PC, global::System.Nullable<bool> STATIK_IP_PC, string DOPINFO_PC, global::System.Nullable<bool> TIMORI, string STATE, global::System.Nullable<int> IDSOTRUD) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((CHID.HasValue == true)) {
                command.Parameters[1].Value = ((int)(CHID.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((TYPE_PC == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(TYPE_PC));
            }
            if ((NAME_PC == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(NAME_PC));
            }
            if ((DEV_PC == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(DEV_PC));
            }
            if ((NOMER_ZAKUPLI.HasValue == true)) {
                command.Parameters[5].Value = ((int)(NOMER_ZAKUPLI.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((DATE_PC.HasValue == true)) {
                command.Parameters[6].Value = ((System.DateTime)(DATE_PC.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((NET_NAME_PC == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(NET_NAME_PC));
            }
            if ((IP_PC == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(IP_PC));
            }
            if ((OS_PC == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(OS_PC));
            }
            if ((STATIK_IP_PC.HasValue == true)) {
                command.Parameters[10].Value = ((bool)(STATIK_IP_PC.Value));
            }
            else {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((DOPINFO_PC == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(DOPINFO_PC));
            }
            if ((TIMORI.HasValue == true)) {
                command.Parameters[12].Value = ((bool)(TIMORI.Value));
            }
            else {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((STATE == null)) {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[13].Value = ((string)(STATE));
            }
            if ((IDSOTRUD.HasValue == true)) {
                command.Parameters[14].Value = ((int)(IDSOTRUD.Value));
            }
            else {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DEVICE_EVENTSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DEVICE_EVENTSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DEVICE_EVENTS";
            tableMapping.ColumnMappings.Add("N_DEEV", "N_DEEV");
            tableMapping.ColumnMappings.Add("ID_DEVICE", "ID_DEVICE");
            tableMapping.ColumnMappings.Add("ID_SOTRUD", "ID_SOTRUD");
            tableMapping.ColumnMappings.Add("TYPE_DEEV", "TYPE_DEEV");
            tableMapping.ColumnMappings.Add("DATE_DEEV", "DATE_DEEV");
            tableMapping.ColumnMappings.Add("DOPINFO_DEEV", "DOPINFO_DEEV");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[DEVICE_EVENTS] WHERE (([N_DEEV] = @Original_N_DEEV) AND ([ID_DEVICE] = @Original_ID_DEVICE) AND ((@IsNull_ID_SOTRUD = 1 AND [ID_SOTRUD] IS NULL) OR ([ID_SOTRUD] = @Original_ID_SOTRUD)) AND ([TYPE_DEEV] = @Original_TYPE_DEEV) AND ([DATE_DEEV] = @Original_DATE_DEEV) AND ((@IsNull_DOPINFO_DEEV = 1 AND [DOPINFO_DEEV] IS NULL) OR ([DOPINFO_DEEV] = @Original_DOPINFO_DEEV)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_N_DEEV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "N_DEEV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_SOTRUD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_SOTRUD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_SOTRUD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_SOTRUD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TYPE_DEEV", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_DEEV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_DEEV", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_DEEV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DOPINFO_DEEV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOPINFO_DEEV", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DOPINFO_DEEV", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOPINFO_DEEV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[DEVICE_EVENTS] ([ID_DEVICE], [ID_SOTRUD], [TYPE_DEEV], [DATE_DEEV], [DOPINFO_DEEV]) VALUES (@ID_DEVICE, @ID_SOTRUD, @TYPE_DEEV, @DATE_DEEV, @DOPINFO_DEEV);
SELECT N_DEEV, ID_DEVICE, ID_SOTRUD, TYPE_DEEV, DATE_DEEV, DOPINFO_DEEV FROM DEVICE_EVENTS WHERE (N_DEEV = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_SOTRUD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_SOTRUD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE_DEEV", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_DEEV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_DEEV", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_DEEV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOPINFO_DEEV", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOPINFO_DEEV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[DEVICE_EVENTS] SET [ID_DEVICE] = @ID_DEVICE, [ID_SOTRUD] = @ID_SOTRUD, [TYPE_DEEV] = @TYPE_DEEV, [DATE_DEEV] = @DATE_DEEV, [DOPINFO_DEEV] = @DOPINFO_DEEV WHERE (([N_DEEV] = @Original_N_DEEV) AND ([ID_DEVICE] = @Original_ID_DEVICE) AND ((@IsNull_ID_SOTRUD = 1 AND [ID_SOTRUD] IS NULL) OR ([ID_SOTRUD] = @Original_ID_SOTRUD)) AND ([TYPE_DEEV] = @Original_TYPE_DEEV) AND ([DATE_DEEV] = @Original_DATE_DEEV) AND ((@IsNull_DOPINFO_DEEV = 1 AND [DOPINFO_DEEV] IS NULL) OR ([DOPINFO_DEEV] = @Original_DOPINFO_DEEV)));
SELECT N_DEEV, ID_DEVICE, ID_SOTRUD, TYPE_DEEV, DATE_DEEV, DOPINFO_DEEV FROM DEVICE_EVENTS WHERE (N_DEEV = @N_DEEV)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_SOTRUD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_SOTRUD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE_DEEV", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_DEEV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_DEEV", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_DEEV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOPINFO_DEEV", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOPINFO_DEEV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_N_DEEV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "N_DEEV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_SOTRUD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_SOTRUD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_SOTRUD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_SOTRUD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TYPE_DEEV", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_DEEV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_DEEV", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_DEEV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DOPINFO_DEEV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOPINFO_DEEV", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DOPINFO_DEEV", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOPINFO_DEEV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@N_DEEV", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "N_DEEV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::CompozitClient.Properties.Settings.Default.INBASEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT N_DEEV, ID_DEVICE, ID_SOTRUD, TYPE_DEEV, DATE_DEEV, DOPINFO_DEEV FROM dbo." +
                "DEVICE_EVENTS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(INBASEDataSet1.DEVICE_EVENTSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual INBASEDataSet1.DEVICE_EVENTSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            INBASEDataSet1.DEVICE_EVENTSDataTable dataTable = new INBASEDataSet1.DEVICE_EVENTSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(INBASEDataSet1.DEVICE_EVENTSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(INBASEDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "DEVICE_EVENTS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_N_DEEV, int Original_ID_DEVICE, global::System.Nullable<int> Original_ID_SOTRUD, string Original_TYPE_DEEV, System.DateTime Original_DATE_DEEV, string Original_DOPINFO_DEEV) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_N_DEEV));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_DEVICE));
            if ((Original_ID_SOTRUD.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_ID_SOTRUD.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_TYPE_DEEV == null)) {
                throw new global::System.ArgumentNullException("Original_TYPE_DEEV");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_TYPE_DEEV));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_DATE_DEEV));
            if ((Original_DOPINFO_DEEV == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_DOPINFO_DEEV));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_DEVICE, global::System.Nullable<int> ID_SOTRUD, string TYPE_DEEV, System.DateTime DATE_DEEV, string DOPINFO_DEEV) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_DEVICE));
            if ((ID_SOTRUD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_SOTRUD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((TYPE_DEEV == null)) {
                throw new global::System.ArgumentNullException("TYPE_DEEV");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(TYPE_DEEV));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(DATE_DEEV));
            if ((DOPINFO_DEEV == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(DOPINFO_DEEV));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_DEVICE, global::System.Nullable<int> ID_SOTRUD, string TYPE_DEEV, System.DateTime DATE_DEEV, string DOPINFO_DEEV, int Original_N_DEEV, int Original_ID_DEVICE, global::System.Nullable<int> Original_ID_SOTRUD, string Original_TYPE_DEEV, System.DateTime Original_DATE_DEEV, string Original_DOPINFO_DEEV, int N_DEEV) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_DEVICE));
            if ((ID_SOTRUD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_SOTRUD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((TYPE_DEEV == null)) {
                throw new global::System.ArgumentNullException("TYPE_DEEV");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(TYPE_DEEV));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(DATE_DEEV));
            if ((DOPINFO_DEEV == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(DOPINFO_DEEV));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_N_DEEV));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ID_DEVICE));
            if ((Original_ID_SOTRUD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_ID_SOTRUD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_TYPE_DEEV == null)) {
                throw new global::System.ArgumentNullException("Original_TYPE_DEEV");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_TYPE_DEEV));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_DATE_DEEV));
            if ((Original_DOPINFO_DEEV == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_DOPINFO_DEEV));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(N_DEEV));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_DEVICE, global::System.Nullable<int> ID_SOTRUD, string TYPE_DEEV, System.DateTime DATE_DEEV, string DOPINFO_DEEV, int Original_N_DEEV, int Original_ID_DEVICE, global::System.Nullable<int> Original_ID_SOTRUD, string Original_TYPE_DEEV, System.DateTime Original_DATE_DEEV, string Original_DOPINFO_DEEV) {
            return this.Update(ID_DEVICE, ID_SOTRUD, TYPE_DEEV, DATE_DEEV, DOPINFO_DEEV, Original_N_DEEV, Original_ID_DEVICE, Original_ID_SOTRUD, Original_TYPE_DEEV, Original_DATE_DEEV, Original_DOPINFO_DEEV, Original_N_DEEV);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ITEMSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ITEMSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ITEMS";
            tableMapping.ColumnMappings.Add("ID_ITEM", "ID_ITEM");
            tableMapping.ColumnMappings.Add("NOMER_ZAKUPKI", "NOMER_ZAKUPKI");
            tableMapping.ColumnMappings.Add("ID_DEVICE", "ID_DEVICE");
            tableMapping.ColumnMappings.Add("TYPE_ITEM", "TYPE_ITEM");
            tableMapping.ColumnMappings.Add("NAME_ITEM", "NAME_ITEM");
            tableMapping.ColumnMappings.Add("DEV_ITEM", "DEV_ITEM");
            tableMapping.ColumnMappings.Add("STATE_ITEM", "STATE_ITEM");
            tableMapping.ColumnMappings.Add("OPISANIE_ITEM", "OPISANIE_ITEM");
            tableMapping.ColumnMappings.Add("SN_ITEM", "SN_ITEM");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ITEMS] WHERE (([ID_ITEM] = @Original_ID_ITEM) AND ((@IsNull_NOMER_ZAKUPKI = 1 AND [NOMER_ZAKUPKI] IS NULL) OR ([NOMER_ZAKUPKI] = @Original_NOMER_ZAKUPKI)) AND ((@IsNull_ID_DEVICE = 1 AND [ID_DEVICE] IS NULL) OR ([ID_DEVICE] = @Original_ID_DEVICE)) AND ([TYPE_ITEM] = @Original_TYPE_ITEM) AND ([NAME_ITEM] = @Original_NAME_ITEM) AND ((@IsNull_DEV_ITEM = 1 AND [DEV_ITEM] IS NULL) OR ([DEV_ITEM] = @Original_DEV_ITEM)) AND ([STATE_ITEM] = @Original_STATE_ITEM) AND ((@IsNull_OPISANIE_ITEM = 1 AND [OPISANIE_ITEM] IS NULL) OR ([OPISANIE_ITEM] = @Original_OPISANIE_ITEM)) AND ((@IsNull_SN_ITEM = 1 AND [SN_ITEM] IS NULL) OR ([SN_ITEM] = @Original_SN_ITEM)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_ITEM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ITEM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NOMER_ZAKUPKI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOMER_ZAKUPKI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOMER_ZAKUPKI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOMER_ZAKUPKI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DEVICE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TYPE_ITEM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_ITEM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_ITEM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_ITEM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DEV_ITEM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEV_ITEM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEV_ITEM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEV_ITEM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STATE_ITEM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATE_ITEM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPISANIE_ITEM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPISANIE_ITEM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPISANIE_ITEM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPISANIE_ITEM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SN_ITEM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SN_ITEM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SN_ITEM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SN_ITEM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ITEMS] ([NOMER_ZAKUPKI], [ID_DEVICE], [TYPE_ITEM], [NAME_ITEM], [DEV_ITEM], [STATE_ITEM], [OPISANIE_ITEM], [SN_ITEM]) VALUES (@NOMER_ZAKUPKI, @ID_DEVICE, @TYPE_ITEM, @NAME_ITEM, @DEV_ITEM, @STATE_ITEM, @OPISANIE_ITEM, @SN_ITEM);
SELECT ID_ITEM, NOMER_ZAKUPKI, ID_DEVICE, TYPE_ITEM, NAME_ITEM, DEV_ITEM, STATE_ITEM, OPISANIE_ITEM, SN_ITEM FROM ITEMS WHERE (ID_ITEM = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOMER_ZAKUPKI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOMER_ZAKUPKI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE_ITEM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_ITEM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_ITEM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_ITEM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEV_ITEM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEV_ITEM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATE_ITEM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATE_ITEM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPISANIE_ITEM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPISANIE_ITEM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SN_ITEM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SN_ITEM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ITEMS] SET [NOMER_ZAKUPKI] = @NOMER_ZAKUPKI, [ID_DEVICE] = @ID_DEVICE, [TYPE_ITEM] = @TYPE_ITEM, [NAME_ITEM] = @NAME_ITEM, [DEV_ITEM] = @DEV_ITEM, [STATE_ITEM] = @STATE_ITEM, [OPISANIE_ITEM] = @OPISANIE_ITEM, [SN_ITEM] = @SN_ITEM WHERE (([ID_ITEM] = @Original_ID_ITEM) AND ((@IsNull_NOMER_ZAKUPKI = 1 AND [NOMER_ZAKUPKI] IS NULL) OR ([NOMER_ZAKUPKI] = @Original_NOMER_ZAKUPKI)) AND ((@IsNull_ID_DEVICE = 1 AND [ID_DEVICE] IS NULL) OR ([ID_DEVICE] = @Original_ID_DEVICE)) AND ([TYPE_ITEM] = @Original_TYPE_ITEM) AND ([NAME_ITEM] = @Original_NAME_ITEM) AND ((@IsNull_DEV_ITEM = 1 AND [DEV_ITEM] IS NULL) OR ([DEV_ITEM] = @Original_DEV_ITEM)) AND ([STATE_ITEM] = @Original_STATE_ITEM) AND ((@IsNull_OPISANIE_ITEM = 1 AND [OPISANIE_ITEM] IS NULL) OR ([OPISANIE_ITEM] = @Original_OPISANIE_ITEM)) AND ((@IsNull_SN_ITEM = 1 AND [SN_ITEM] IS NULL) OR ([SN_ITEM] = @Original_SN_ITEM)));
SELECT ID_ITEM, NOMER_ZAKUPKI, ID_DEVICE, TYPE_ITEM, NAME_ITEM, DEV_ITEM, STATE_ITEM, OPISANIE_ITEM, SN_ITEM FROM ITEMS WHERE (ID_ITEM = @ID_ITEM)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOMER_ZAKUPKI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOMER_ZAKUPKI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE_ITEM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_ITEM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_ITEM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_ITEM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEV_ITEM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEV_ITEM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATE_ITEM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATE_ITEM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPISANIE_ITEM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPISANIE_ITEM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SN_ITEM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SN_ITEM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_ITEM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ITEM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NOMER_ZAKUPKI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOMER_ZAKUPKI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOMER_ZAKUPKI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOMER_ZAKUPKI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DEVICE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TYPE_ITEM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_ITEM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_ITEM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_ITEM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DEV_ITEM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEV_ITEM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEV_ITEM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEV_ITEM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STATE_ITEM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATE_ITEM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPISANIE_ITEM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPISANIE_ITEM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPISANIE_ITEM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPISANIE_ITEM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SN_ITEM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SN_ITEM", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SN_ITEM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SN_ITEM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_ITEM", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ITEM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::CompozitClient.Properties.Settings.Default.INBASEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_ITEM, NOMER_ZAKUPKI, ID_DEVICE, TYPE_ITEM, NAME_ITEM, DEV_ITEM, STATE_I" +
                "TEM, OPISANIE_ITEM, SN_ITEM FROM dbo.ITEMS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.AddItem";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOMER_ZAKUPKI", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_PC", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE_ITEM", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_ITEM", global::System.Data.SqlDbType.NVarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEV_ITEM", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATE_ITEM", global::System.Data.SqlDbType.NVarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPISANIE_ITEM", global::System.Data.SqlDbType.NVarChar, 280, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SN_ITEM", global::System.Data.SqlDbType.NVarChar, 120, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(INBASEDataSet1.ITEMSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual INBASEDataSet1.ITEMSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            INBASEDataSet1.ITEMSDataTable dataTable = new INBASEDataSet1.ITEMSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(INBASEDataSet1.ITEMSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(INBASEDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ITEMS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_ITEM, global::System.Nullable<int> Original_NOMER_ZAKUPKI, global::System.Nullable<int> Original_ID_DEVICE, string Original_TYPE_ITEM, string Original_NAME_ITEM, string Original_DEV_ITEM, string Original_STATE_ITEM, string Original_OPISANIE_ITEM, string Original_SN_ITEM) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_ITEM));
            if ((Original_NOMER_ZAKUPKI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_NOMER_ZAKUPKI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_DEVICE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_ID_DEVICE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_TYPE_ITEM == null)) {
                throw new global::System.ArgumentNullException("Original_TYPE_ITEM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_TYPE_ITEM));
            }
            if ((Original_NAME_ITEM == null)) {
                throw new global::System.ArgumentNullException("Original_NAME_ITEM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_NAME_ITEM));
            }
            if ((Original_DEV_ITEM == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_DEV_ITEM));
            }
            if ((Original_STATE_ITEM == null)) {
                throw new global::System.ArgumentNullException("Original_STATE_ITEM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_STATE_ITEM));
            }
            if ((Original_OPISANIE_ITEM == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_OPISANIE_ITEM));
            }
            if ((Original_SN_ITEM == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_SN_ITEM));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> NOMER_ZAKUPKI, global::System.Nullable<int> ID_DEVICE, string TYPE_ITEM, string NAME_ITEM, string DEV_ITEM, string STATE_ITEM, string OPISANIE_ITEM, string SN_ITEM) {
            if ((NOMER_ZAKUPKI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(NOMER_ZAKUPKI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ID_DEVICE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_DEVICE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((TYPE_ITEM == null)) {
                throw new global::System.ArgumentNullException("TYPE_ITEM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(TYPE_ITEM));
            }
            if ((NAME_ITEM == null)) {
                throw new global::System.ArgumentNullException("NAME_ITEM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(NAME_ITEM));
            }
            if ((DEV_ITEM == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(DEV_ITEM));
            }
            if ((STATE_ITEM == null)) {
                throw new global::System.ArgumentNullException("STATE_ITEM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(STATE_ITEM));
            }
            if ((OPISANIE_ITEM == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(OPISANIE_ITEM));
            }
            if ((SN_ITEM == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(SN_ITEM));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> NOMER_ZAKUPKI, 
                    global::System.Nullable<int> ID_DEVICE, 
                    string TYPE_ITEM, 
                    string NAME_ITEM, 
                    string DEV_ITEM, 
                    string STATE_ITEM, 
                    string OPISANIE_ITEM, 
                    string SN_ITEM, 
                    int Original_ID_ITEM, 
                    global::System.Nullable<int> Original_NOMER_ZAKUPKI, 
                    global::System.Nullable<int> Original_ID_DEVICE, 
                    string Original_TYPE_ITEM, 
                    string Original_NAME_ITEM, 
                    string Original_DEV_ITEM, 
                    string Original_STATE_ITEM, 
                    string Original_OPISANIE_ITEM, 
                    string Original_SN_ITEM, 
                    int ID_ITEM) {
            if ((NOMER_ZAKUPKI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(NOMER_ZAKUPKI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ID_DEVICE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_DEVICE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((TYPE_ITEM == null)) {
                throw new global::System.ArgumentNullException("TYPE_ITEM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(TYPE_ITEM));
            }
            if ((NAME_ITEM == null)) {
                throw new global::System.ArgumentNullException("NAME_ITEM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(NAME_ITEM));
            }
            if ((DEV_ITEM == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(DEV_ITEM));
            }
            if ((STATE_ITEM == null)) {
                throw new global::System.ArgumentNullException("STATE_ITEM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(STATE_ITEM));
            }
            if ((OPISANIE_ITEM == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(OPISANIE_ITEM));
            }
            if ((SN_ITEM == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(SN_ITEM));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_ID_ITEM));
            if ((Original_NOMER_ZAKUPKI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_NOMER_ZAKUPKI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_DEVICE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_ID_DEVICE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_TYPE_ITEM == null)) {
                throw new global::System.ArgumentNullException("Original_TYPE_ITEM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_TYPE_ITEM));
            }
            if ((Original_NAME_ITEM == null)) {
                throw new global::System.ArgumentNullException("Original_NAME_ITEM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_NAME_ITEM));
            }
            if ((Original_DEV_ITEM == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_DEV_ITEM));
            }
            if ((Original_STATE_ITEM == null)) {
                throw new global::System.ArgumentNullException("Original_STATE_ITEM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_STATE_ITEM));
            }
            if ((Original_OPISANIE_ITEM == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_OPISANIE_ITEM));
            }
            if ((Original_SN_ITEM == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_SN_ITEM));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(ID_ITEM));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> NOMER_ZAKUPKI, 
                    global::System.Nullable<int> ID_DEVICE, 
                    string TYPE_ITEM, 
                    string NAME_ITEM, 
                    string DEV_ITEM, 
                    string STATE_ITEM, 
                    string OPISANIE_ITEM, 
                    string SN_ITEM, 
                    int Original_ID_ITEM, 
                    global::System.Nullable<int> Original_NOMER_ZAKUPKI, 
                    global::System.Nullable<int> Original_ID_DEVICE, 
                    string Original_TYPE_ITEM, 
                    string Original_NAME_ITEM, 
                    string Original_DEV_ITEM, 
                    string Original_STATE_ITEM, 
                    string Original_OPISANIE_ITEM, 
                    string Original_SN_ITEM) {
            return this.Update(NOMER_ZAKUPKI, ID_DEVICE, TYPE_ITEM, NAME_ITEM, DEV_ITEM, STATE_ITEM, OPISANIE_ITEM, SN_ITEM, Original_ID_ITEM, Original_NOMER_ZAKUPKI, Original_ID_DEVICE, Original_TYPE_ITEM, Original_NAME_ITEM, Original_DEV_ITEM, Original_STATE_ITEM, Original_OPISANIE_ITEM, Original_SN_ITEM, Original_ID_ITEM);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int AddItem(global::System.Nullable<int> NOMER_ZAKUPKI, global::System.Nullable<int> ID_PC, string TYPE_ITEM, string NAME_ITEM, string DEV_ITEM, string STATE_ITEM, string OPISANIE_ITEM, string SN_ITEM) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((NOMER_ZAKUPKI.HasValue == true)) {
                command.Parameters[1].Value = ((int)(NOMER_ZAKUPKI.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ID_PC.HasValue == true)) {
                command.Parameters[2].Value = ((int)(ID_PC.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((TYPE_ITEM == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(TYPE_ITEM));
            }
            if ((NAME_ITEM == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(NAME_ITEM));
            }
            if ((DEV_ITEM == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(DEV_ITEM));
            }
            if ((STATE_ITEM == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(STATE_ITEM));
            }
            if ((OPISANIE_ITEM == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(OPISANIE_ITEM));
            }
            if ((SN_ITEM == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(SN_ITEM));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ITEMS_EVENTSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ITEMS_EVENTSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ITEMS_EVENTS";
            tableMapping.ColumnMappings.Add("N_ITEV", "N_ITEV");
            tableMapping.ColumnMappings.Add("ID_ITEM", "ID_ITEM");
            tableMapping.ColumnMappings.Add("ID_DEVICE", "ID_DEVICE");
            tableMapping.ColumnMappings.Add("TYPE_ITEV", "TYPE_ITEV");
            tableMapping.ColumnMappings.Add("DATE_ITEV", "DATE_ITEV");
            tableMapping.ColumnMappings.Add("DOPINFO_ITEV", "DOPINFO_ITEV");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ITEMS_EVENTS] WHERE (([N_ITEV] = @Original_N_ITEV) AND ([ID_ITEM] = @Original_ID_ITEM) AND ((@IsNull_ID_DEVICE = 1 AND [ID_DEVICE] IS NULL) OR ([ID_DEVICE] = @Original_ID_DEVICE)) AND ([TYPE_ITEV] = @Original_TYPE_ITEV) AND ([DATE_ITEV] = @Original_DATE_ITEV) AND ((@IsNull_DOPINFO_ITEV = 1 AND [DOPINFO_ITEV] IS NULL) OR ([DOPINFO_ITEV] = @Original_DOPINFO_ITEV)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_N_ITEV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "N_ITEV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_ITEM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ITEM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DEVICE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TYPE_ITEV", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_ITEV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_ITEV", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_ITEV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DOPINFO_ITEV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOPINFO_ITEV", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DOPINFO_ITEV", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOPINFO_ITEV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ITEMS_EVENTS] ([ID_ITEM], [ID_DEVICE], [TYPE_ITEV], [DATE_ITEV], [DOPINFO_ITEV]) VALUES (@ID_ITEM, @ID_DEVICE, @TYPE_ITEV, @DATE_ITEV, @DOPINFO_ITEV);
SELECT N_ITEV, ID_ITEM, ID_DEVICE, TYPE_ITEV, DATE_ITEV, DOPINFO_ITEV FROM ITEMS_EVENTS WHERE (N_ITEV = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_ITEM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ITEM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE_ITEV", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_ITEV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_ITEV", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_ITEV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOPINFO_ITEV", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOPINFO_ITEV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ITEMS_EVENTS] SET [ID_ITEM] = @ID_ITEM, [ID_DEVICE] = @ID_DEVICE, [TYPE_ITEV] = @TYPE_ITEV, [DATE_ITEV] = @DATE_ITEV, [DOPINFO_ITEV] = @DOPINFO_ITEV WHERE (([N_ITEV] = @Original_N_ITEV) AND ([ID_ITEM] = @Original_ID_ITEM) AND ((@IsNull_ID_DEVICE = 1 AND [ID_DEVICE] IS NULL) OR ([ID_DEVICE] = @Original_ID_DEVICE)) AND ([TYPE_ITEV] = @Original_TYPE_ITEV) AND ([DATE_ITEV] = @Original_DATE_ITEV) AND ((@IsNull_DOPINFO_ITEV = 1 AND [DOPINFO_ITEV] IS NULL) OR ([DOPINFO_ITEV] = @Original_DOPINFO_ITEV)));
SELECT N_ITEV, ID_ITEM, ID_DEVICE, TYPE_ITEV, DATE_ITEV, DOPINFO_ITEV FROM ITEMS_EVENTS WHERE (N_ITEV = @N_ITEV)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_ITEM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ITEM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DEVICE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE_ITEV", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_ITEV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_ITEV", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_ITEV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOPINFO_ITEV", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOPINFO_ITEV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_N_ITEV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "N_ITEV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_ITEM", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_ITEM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DEVICE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_DEVICE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_DEVICE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TYPE_ITEV", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_ITEV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_ITEV", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_ITEV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DOPINFO_ITEV", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOPINFO_ITEV", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DOPINFO_ITEV", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOPINFO_ITEV", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@N_ITEV", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "N_ITEV", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::CompozitClient.Properties.Settings.Default.INBASEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT N_ITEV, ID_ITEM, ID_DEVICE, TYPE_ITEV, DATE_ITEV, DOPINFO_ITEV FROM dbo.IT" +
                "EMS_EVENTS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(INBASEDataSet1.ITEMS_EVENTSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual INBASEDataSet1.ITEMS_EVENTSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            INBASEDataSet1.ITEMS_EVENTSDataTable dataTable = new INBASEDataSet1.ITEMS_EVENTSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(INBASEDataSet1.ITEMS_EVENTSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(INBASEDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ITEMS_EVENTS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_N_ITEV, int Original_ID_ITEM, global::System.Nullable<int> Original_ID_DEVICE, string Original_TYPE_ITEV, System.DateTime Original_DATE_ITEV, string Original_DOPINFO_ITEV) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_N_ITEV));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_ITEM));
            if ((Original_ID_DEVICE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_ID_DEVICE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_TYPE_ITEV == null)) {
                throw new global::System.ArgumentNullException("Original_TYPE_ITEV");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_TYPE_ITEV));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_DATE_ITEV));
            if ((Original_DOPINFO_ITEV == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_DOPINFO_ITEV));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_ITEM, global::System.Nullable<int> ID_DEVICE, string TYPE_ITEV, System.DateTime DATE_ITEV, string DOPINFO_ITEV) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_ITEM));
            if ((ID_DEVICE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_DEVICE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((TYPE_ITEV == null)) {
                throw new global::System.ArgumentNullException("TYPE_ITEV");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(TYPE_ITEV));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(DATE_ITEV));
            if ((DOPINFO_ITEV == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(DOPINFO_ITEV));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_ITEM, global::System.Nullable<int> ID_DEVICE, string TYPE_ITEV, System.DateTime DATE_ITEV, string DOPINFO_ITEV, int Original_N_ITEV, int Original_ID_ITEM, global::System.Nullable<int> Original_ID_DEVICE, string Original_TYPE_ITEV, System.DateTime Original_DATE_ITEV, string Original_DOPINFO_ITEV, int N_ITEV) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_ITEM));
            if ((ID_DEVICE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_DEVICE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((TYPE_ITEV == null)) {
                throw new global::System.ArgumentNullException("TYPE_ITEV");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(TYPE_ITEV));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(DATE_ITEV));
            if ((DOPINFO_ITEV == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(DOPINFO_ITEV));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_N_ITEV));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ID_ITEM));
            if ((Original_ID_DEVICE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_ID_DEVICE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_TYPE_ITEV == null)) {
                throw new global::System.ArgumentNullException("Original_TYPE_ITEV");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_TYPE_ITEV));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_DATE_ITEV));
            if ((Original_DOPINFO_ITEV == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_DOPINFO_ITEV));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(N_ITEV));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_ITEM, global::System.Nullable<int> ID_DEVICE, string TYPE_ITEV, System.DateTime DATE_ITEV, string DOPINFO_ITEV, int Original_N_ITEV, int Original_ID_ITEM, global::System.Nullable<int> Original_ID_DEVICE, string Original_TYPE_ITEV, System.DateTime Original_DATE_ITEV, string Original_DOPINFO_ITEV) {
            return this.Update(ID_ITEM, ID_DEVICE, TYPE_ITEV, DATE_ITEV, DOPINFO_ITEV, Original_N_ITEV, Original_ID_ITEM, Original_ID_DEVICE, Original_TYPE_ITEV, Original_DATE_ITEV, Original_DOPINFO_ITEV, Original_N_ITEV);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LOGPASSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LOGPASSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LOGPASS";
            tableMapping.ColumnMappings.Add("ID_LOGPASS", "ID_LOGPASS");
            tableMapping.ColumnMappings.Add("ID_SOTRUD", "ID_SOTRUD");
            tableMapping.ColumnMappings.Add("TYPE_LOGPASS", "TYPE_LOGPASS");
            tableMapping.ColumnMappings.Add("NASV_LOGPASS", "NASV_LOGPASS");
            tableMapping.ColumnMappings.Add("DATE_LOGPASS", "DATE_LOGPASS");
            tableMapping.ColumnMappings.Add("LOGIN_LOGPASS", "LOGIN_LOGPASS");
            tableMapping.ColumnMappings.Add("PASS_LOGPASS", "PASS_LOGPASS");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[LOGPASS] WHERE (([ID_LOGPASS] = @Original_ID_LOGPASS) AND ([ID_SOTRUD] = @Original_ID_SOTRUD) AND ([TYPE_LOGPASS] = @Original_TYPE_LOGPASS) AND ([NASV_LOGPASS] = @Original_NASV_LOGPASS) AND ([DATE_LOGPASS] = @Original_DATE_LOGPASS) AND ([LOGIN_LOGPASS] = @Original_LOGIN_LOGPASS) AND ((@IsNull_PASS_LOGPASS = 1 AND [PASS_LOGPASS] IS NULL) OR ([PASS_LOGPASS] = @Original_PASS_LOGPASS)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_LOGPASS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_LOGPASS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_SOTRUD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_SOTRUD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TYPE_LOGPASS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_LOGPASS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NASV_LOGPASS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NASV_LOGPASS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_LOGPASS", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_LOGPASS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOGIN_LOGPASS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOGIN_LOGPASS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PASS_LOGPASS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PASS_LOGPASS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PASS_LOGPASS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PASS_LOGPASS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[LOGPASS] ([ID_SOTRUD], [TYPE_LOGPASS], [NASV_LOGPASS], [DATE_LOGPASS], [LOGIN_LOGPASS], [PASS_LOGPASS]) VALUES (@ID_SOTRUD, @TYPE_LOGPASS, @NASV_LOGPASS, @DATE_LOGPASS, @LOGIN_LOGPASS, @PASS_LOGPASS);
SELECT ID_LOGPASS, ID_SOTRUD, TYPE_LOGPASS, NASV_LOGPASS, DATE_LOGPASS, LOGIN_LOGPASS, PASS_LOGPASS FROM LOGPASS WHERE (ID_LOGPASS = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_SOTRUD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_SOTRUD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE_LOGPASS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_LOGPASS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NASV_LOGPASS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NASV_LOGPASS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_LOGPASS", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_LOGPASS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOGIN_LOGPASS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOGIN_LOGPASS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PASS_LOGPASS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PASS_LOGPASS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[LOGPASS] SET [ID_SOTRUD] = @ID_SOTRUD, [TYPE_LOGPASS] = @TYPE_LOGPASS, [NASV_LOGPASS] = @NASV_LOGPASS, [DATE_LOGPASS] = @DATE_LOGPASS, [LOGIN_LOGPASS] = @LOGIN_LOGPASS, [PASS_LOGPASS] = @PASS_LOGPASS WHERE (([ID_LOGPASS] = @Original_ID_LOGPASS) AND ([ID_SOTRUD] = @Original_ID_SOTRUD) AND ([TYPE_LOGPASS] = @Original_TYPE_LOGPASS) AND ([NASV_LOGPASS] = @Original_NASV_LOGPASS) AND ([DATE_LOGPASS] = @Original_DATE_LOGPASS) AND ([LOGIN_LOGPASS] = @Original_LOGIN_LOGPASS) AND ((@IsNull_PASS_LOGPASS = 1 AND [PASS_LOGPASS] IS NULL) OR ([PASS_LOGPASS] = @Original_PASS_LOGPASS)));
SELECT ID_LOGPASS, ID_SOTRUD, TYPE_LOGPASS, NASV_LOGPASS, DATE_LOGPASS, LOGIN_LOGPASS, PASS_LOGPASS FROM LOGPASS WHERE (ID_LOGPASS = @ID_LOGPASS)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_SOTRUD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_SOTRUD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE_LOGPASS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_LOGPASS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NASV_LOGPASS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NASV_LOGPASS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_LOGPASS", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_LOGPASS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOGIN_LOGPASS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOGIN_LOGPASS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PASS_LOGPASS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PASS_LOGPASS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_LOGPASS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_LOGPASS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_SOTRUD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_SOTRUD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TYPE_LOGPASS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE_LOGPASS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NASV_LOGPASS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NASV_LOGPASS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_LOGPASS", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_LOGPASS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LOGIN_LOGPASS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LOGIN_LOGPASS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PASS_LOGPASS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PASS_LOGPASS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PASS_LOGPASS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PASS_LOGPASS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_LOGPASS", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_LOGPASS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::CompozitClient.Properties.Settings.Default.INBASEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_LOGPASS, ID_SOTRUD, TYPE_LOGPASS, NASV_LOGPASS, DATE_LOGPASS, LOGIN_LOG" +
                "PASS, PASS_LOGPASS FROM dbo.LOGPASS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.NewLogPas";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_SOTRUD", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE_LOGPASS", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NASV_LOGPASS", global::System.Data.SqlDbType.NVarChar, 1240, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_LOGPASS", global::System.Data.SqlDbType.Date, 3, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOGIN_LOGPASS", global::System.Data.SqlDbType.NVarChar, 840, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PASS_LOGPASS", global::System.Data.SqlDbType.NVarChar, 840, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(INBASEDataSet1.LOGPASSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual INBASEDataSet1.LOGPASSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            INBASEDataSet1.LOGPASSDataTable dataTable = new INBASEDataSet1.LOGPASSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(INBASEDataSet1.LOGPASSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(INBASEDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "LOGPASS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_LOGPASS, int Original_ID_SOTRUD, bool Original_TYPE_LOGPASS, string Original_NASV_LOGPASS, System.DateTime Original_DATE_LOGPASS, string Original_LOGIN_LOGPASS, string Original_PASS_LOGPASS) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_LOGPASS));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_SOTRUD));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((bool)(Original_TYPE_LOGPASS));
            if ((Original_NASV_LOGPASS == null)) {
                throw new global::System.ArgumentNullException("Original_NASV_LOGPASS");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_NASV_LOGPASS));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_DATE_LOGPASS));
            if ((Original_LOGIN_LOGPASS == null)) {
                throw new global::System.ArgumentNullException("Original_LOGIN_LOGPASS");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_LOGIN_LOGPASS));
            }
            if ((Original_PASS_LOGPASS == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_PASS_LOGPASS));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_SOTRUD, bool TYPE_LOGPASS, string NASV_LOGPASS, System.DateTime DATE_LOGPASS, string LOGIN_LOGPASS, string PASS_LOGPASS) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_SOTRUD));
            this.Adapter.InsertCommand.Parameters[1].Value = ((bool)(TYPE_LOGPASS));
            if ((NASV_LOGPASS == null)) {
                throw new global::System.ArgumentNullException("NASV_LOGPASS");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(NASV_LOGPASS));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(DATE_LOGPASS));
            if ((LOGIN_LOGPASS == null)) {
                throw new global::System.ArgumentNullException("LOGIN_LOGPASS");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(LOGIN_LOGPASS));
            }
            if ((PASS_LOGPASS == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(PASS_LOGPASS));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_SOTRUD, bool TYPE_LOGPASS, string NASV_LOGPASS, System.DateTime DATE_LOGPASS, string LOGIN_LOGPASS, string PASS_LOGPASS, int Original_ID_LOGPASS, int Original_ID_SOTRUD, bool Original_TYPE_LOGPASS, string Original_NASV_LOGPASS, System.DateTime Original_DATE_LOGPASS, string Original_LOGIN_LOGPASS, string Original_PASS_LOGPASS, int ID_LOGPASS) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_SOTRUD));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((bool)(TYPE_LOGPASS));
            if ((NASV_LOGPASS == null)) {
                throw new global::System.ArgumentNullException("NASV_LOGPASS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(NASV_LOGPASS));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(DATE_LOGPASS));
            if ((LOGIN_LOGPASS == null)) {
                throw new global::System.ArgumentNullException("LOGIN_LOGPASS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(LOGIN_LOGPASS));
            }
            if ((PASS_LOGPASS == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(PASS_LOGPASS));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ID_LOGPASS));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_ID_SOTRUD));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(Original_TYPE_LOGPASS));
            if ((Original_NASV_LOGPASS == null)) {
                throw new global::System.ArgumentNullException("Original_NASV_LOGPASS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_NASV_LOGPASS));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_DATE_LOGPASS));
            if ((Original_LOGIN_LOGPASS == null)) {
                throw new global::System.ArgumentNullException("Original_LOGIN_LOGPASS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_LOGIN_LOGPASS));
            }
            if ((Original_PASS_LOGPASS == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_PASS_LOGPASS));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(ID_LOGPASS));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_SOTRUD, bool TYPE_LOGPASS, string NASV_LOGPASS, System.DateTime DATE_LOGPASS, string LOGIN_LOGPASS, string PASS_LOGPASS, int Original_ID_LOGPASS, int Original_ID_SOTRUD, bool Original_TYPE_LOGPASS, string Original_NASV_LOGPASS, System.DateTime Original_DATE_LOGPASS, string Original_LOGIN_LOGPASS, string Original_PASS_LOGPASS) {
            return this.Update(ID_SOTRUD, TYPE_LOGPASS, NASV_LOGPASS, DATE_LOGPASS, LOGIN_LOGPASS, PASS_LOGPASS, Original_ID_LOGPASS, Original_ID_SOTRUD, Original_TYPE_LOGPASS, Original_NASV_LOGPASS, Original_DATE_LOGPASS, Original_LOGIN_LOGPASS, Original_PASS_LOGPASS, Original_ID_LOGPASS);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int NewLogPas(global::System.Nullable<int> ID_SOTRUD, global::System.Nullable<bool> TYPE_LOGPASS, string NASV_LOGPASS, global::System.Nullable<global::System.DateTime> DATE_LOGPASS, string LOGIN_LOGPASS, string PASS_LOGPASS) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((ID_SOTRUD.HasValue == true)) {
                command.Parameters[1].Value = ((int)(ID_SOTRUD.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((TYPE_LOGPASS.HasValue == true)) {
                command.Parameters[2].Value = ((bool)(TYPE_LOGPASS.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((NASV_LOGPASS == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(NASV_LOGPASS));
            }
            if ((DATE_LOGPASS.HasValue == true)) {
                command.Parameters[4].Value = ((System.DateTime)(DATE_LOGPASS.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((LOGIN_LOGPASS == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(LOGIN_LOGPASS));
            }
            if ((PASS_LOGPASS == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(PASS_LOGPASS));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OTDELTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public OTDELTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "OTDEL";
            tableMapping.ColumnMappings.Add("ID_OTDEL", "ID_OTDEL");
            tableMapping.ColumnMappings.Add("NAME_OTDEL", "NAME_OTDEL");
            tableMapping.ColumnMappings.Add("TEL_OTDEL", "TEL_OTDEL");
            tableMapping.ColumnMappings.Add("NACH_OTDEL", "NACH_OTDEL");
            tableMapping.ColumnMappings.Add("ADRESS_OTDEL", "ADRESS_OTDEL");
            tableMapping.ColumnMappings.Add("MESTO_OTDEL", "MESTO_OTDEL");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [OTDEL] WHERE (([ID_OTDEL] = @Original_ID_OTDEL) AND ([NAME_OTDEL] = @Original_NAME_OTDEL) AND ((@IsNull_TEL_OTDEL = 1 AND [TEL_OTDEL] IS NULL) OR ([TEL_OTDEL] = @Original_TEL_OTDEL)) AND ((@IsNull_NACH_OTDEL = 1 AND [NACH_OTDEL] IS NULL) OR ([NACH_OTDEL] = @Original_NACH_OTDEL)) AND ([ADRESS_OTDEL] = @Original_ADRESS_OTDEL) AND ([MESTO_OTDEL] = @Original_MESTO_OTDEL))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_OTDEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_OTDEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_OTDEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_OTDEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TEL_OTDEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL_OTDEL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TEL_OTDEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL_OTDEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NACH_OTDEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NACH_OTDEL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NACH_OTDEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NACH_OTDEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADRESS_OTDEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADRESS_OTDEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MESTO_OTDEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MESTO_OTDEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [OTDEL] ([NAME_OTDEL], [TEL_OTDEL], [NACH_OTDEL], [ADRESS_OTDEL], [MESTO_OTDEL]) VALUES (@NAME_OTDEL, @TEL_OTDEL, @NACH_OTDEL, @ADRESS_OTDEL, @MESTO_OTDEL);
SELECT ID_OTDEL, NAME_OTDEL, TEL_OTDEL, NACH_OTDEL, ADRESS_OTDEL, MESTO_OTDEL FROM OTDEL WHERE (ID_OTDEL = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_OTDEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_OTDEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TEL_OTDEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL_OTDEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NACH_OTDEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NACH_OTDEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADRESS_OTDEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADRESS_OTDEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MESTO_OTDEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MESTO_OTDEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [OTDEL] SET [NAME_OTDEL] = @NAME_OTDEL, [TEL_OTDEL] = @TEL_OTDEL, [NACH_OTDEL] = @NACH_OTDEL, [ADRESS_OTDEL] = @ADRESS_OTDEL, [MESTO_OTDEL] = @MESTO_OTDEL WHERE (([ID_OTDEL] = @Original_ID_OTDEL) AND ([NAME_OTDEL] = @Original_NAME_OTDEL) AND ((@IsNull_TEL_OTDEL = 1 AND [TEL_OTDEL] IS NULL) OR ([TEL_OTDEL] = @Original_TEL_OTDEL)) AND ((@IsNull_NACH_OTDEL = 1 AND [NACH_OTDEL] IS NULL) OR ([NACH_OTDEL] = @Original_NACH_OTDEL)) AND ([ADRESS_OTDEL] = @Original_ADRESS_OTDEL) AND ([MESTO_OTDEL] = @Original_MESTO_OTDEL));
SELECT ID_OTDEL, NAME_OTDEL, TEL_OTDEL, NACH_OTDEL, ADRESS_OTDEL, MESTO_OTDEL FROM OTDEL WHERE (ID_OTDEL = @ID_OTDEL)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_OTDEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_OTDEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TEL_OTDEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL_OTDEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NACH_OTDEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NACH_OTDEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADRESS_OTDEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADRESS_OTDEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MESTO_OTDEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MESTO_OTDEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_OTDEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_OTDEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_OTDEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_OTDEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TEL_OTDEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL_OTDEL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TEL_OTDEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL_OTDEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NACH_OTDEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NACH_OTDEL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NACH_OTDEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NACH_OTDEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADRESS_OTDEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADRESS_OTDEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MESTO_OTDEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MESTO_OTDEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_OTDEL", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_OTDEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::CompozitClient.Properties.Settings.Default.INBASEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        ID_OTDEL, NAME_OTDEL, TEL_OTDEL, NACH_OTDEL, ADRESS_OTDEL, MESTO_OT" +
                "DEL\r\nFROM            OTDEL";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.NewOtdel";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_OTDEL", global::System.Data.SqlDbType.NVarChar, 24, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TEL_OTDEL", global::System.Data.SqlDbType.NVarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADRESS_OTDEL", global::System.Data.SqlDbType.NVarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MESTO_OTDEL", global::System.Data.SqlDbType.NVarChar, 80, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "dbo.SetNachOtdel";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NACH_OTDEL", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(INBASEDataSet1.OTDELDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual INBASEDataSet1.OTDELDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            INBASEDataSet1.OTDELDataTable dataTable = new INBASEDataSet1.OTDELDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(INBASEDataSet1.OTDELDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(INBASEDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "OTDEL");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_OTDEL, string Original_NAME_OTDEL, string Original_TEL_OTDEL, global::System.Nullable<int> Original_NACH_OTDEL, string Original_ADRESS_OTDEL, string Original_MESTO_OTDEL) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_OTDEL));
            if ((Original_NAME_OTDEL == null)) {
                throw new global::System.ArgumentNullException("Original_NAME_OTDEL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_NAME_OTDEL));
            }
            if ((Original_TEL_OTDEL == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_TEL_OTDEL));
            }
            if ((Original_NACH_OTDEL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_NACH_OTDEL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_ADRESS_OTDEL == null)) {
                throw new global::System.ArgumentNullException("Original_ADRESS_OTDEL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ADRESS_OTDEL));
            }
            if ((Original_MESTO_OTDEL == null)) {
                throw new global::System.ArgumentNullException("Original_MESTO_OTDEL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_MESTO_OTDEL));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string NAME_OTDEL, string TEL_OTDEL, global::System.Nullable<int> NACH_OTDEL, string ADRESS_OTDEL, string MESTO_OTDEL) {
            if ((NAME_OTDEL == null)) {
                throw new global::System.ArgumentNullException("NAME_OTDEL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(NAME_OTDEL));
            }
            if ((TEL_OTDEL == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TEL_OTDEL));
            }
            if ((NACH_OTDEL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(NACH_OTDEL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ADRESS_OTDEL == null)) {
                throw new global::System.ArgumentNullException("ADRESS_OTDEL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ADRESS_OTDEL));
            }
            if ((MESTO_OTDEL == null)) {
                throw new global::System.ArgumentNullException("MESTO_OTDEL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(MESTO_OTDEL));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string NAME_OTDEL, string TEL_OTDEL, global::System.Nullable<int> NACH_OTDEL, string ADRESS_OTDEL, string MESTO_OTDEL, int Original_ID_OTDEL, string Original_NAME_OTDEL, string Original_TEL_OTDEL, global::System.Nullable<int> Original_NACH_OTDEL, string Original_ADRESS_OTDEL, string Original_MESTO_OTDEL, int ID_OTDEL) {
            if ((NAME_OTDEL == null)) {
                throw new global::System.ArgumentNullException("NAME_OTDEL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(NAME_OTDEL));
            }
            if ((TEL_OTDEL == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TEL_OTDEL));
            }
            if ((NACH_OTDEL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(NACH_OTDEL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ADRESS_OTDEL == null)) {
                throw new global::System.ArgumentNullException("ADRESS_OTDEL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ADRESS_OTDEL));
            }
            if ((MESTO_OTDEL == null)) {
                throw new global::System.ArgumentNullException("MESTO_OTDEL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(MESTO_OTDEL));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID_OTDEL));
            if ((Original_NAME_OTDEL == null)) {
                throw new global::System.ArgumentNullException("Original_NAME_OTDEL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_NAME_OTDEL));
            }
            if ((Original_TEL_OTDEL == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_TEL_OTDEL));
            }
            if ((Original_NACH_OTDEL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_NACH_OTDEL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_ADRESS_OTDEL == null)) {
                throw new global::System.ArgumentNullException("Original_ADRESS_OTDEL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_ADRESS_OTDEL));
            }
            if ((Original_MESTO_OTDEL == null)) {
                throw new global::System.ArgumentNullException("Original_MESTO_OTDEL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_MESTO_OTDEL));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(ID_OTDEL));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string NAME_OTDEL, string TEL_OTDEL, global::System.Nullable<int> NACH_OTDEL, string ADRESS_OTDEL, string MESTO_OTDEL, int Original_ID_OTDEL, string Original_NAME_OTDEL, string Original_TEL_OTDEL, global::System.Nullable<int> Original_NACH_OTDEL, string Original_ADRESS_OTDEL, string Original_MESTO_OTDEL) {
            return this.Update(NAME_OTDEL, TEL_OTDEL, NACH_OTDEL, ADRESS_OTDEL, MESTO_OTDEL, Original_ID_OTDEL, Original_NAME_OTDEL, Original_TEL_OTDEL, Original_NACH_OTDEL, Original_ADRESS_OTDEL, Original_MESTO_OTDEL, Original_ID_OTDEL);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int NewOtdel(string NAME_OTDEL, string TEL_OTDEL, string ADRESS_OTDEL, string MESTO_OTDEL) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((NAME_OTDEL == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(NAME_OTDEL));
            }
            if ((TEL_OTDEL == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(TEL_OTDEL));
            }
            if ((ADRESS_OTDEL == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(ADRESS_OTDEL));
            }
            if ((MESTO_OTDEL == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(MESTO_OTDEL));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int SetNachOtdel(global::System.Nullable<int> CHID, global::System.Nullable<int> NACH_OTDEL) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((CHID.HasValue == true)) {
                command.Parameters[1].Value = ((int)(CHID.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((NACH_OTDEL.HasValue == true)) {
                command.Parameters[2].Value = ((int)(NACH_OTDEL.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SOTRUDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SOTRUDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SOTRUD";
            tableMapping.ColumnMappings.Add("ID_SOTRUD", "ID_SOTRUD");
            tableMapping.ColumnMappings.Add("FAM_SOTRUD", "FAM_SOTRUD");
            tableMapping.ColumnMappings.Add("IMA_SOTRUD", "IMA_SOTRUD");
            tableMapping.ColumnMappings.Add("OTCH_SOTRUD", "OTCH_SOTRUD");
            tableMapping.ColumnMappings.Add("ID_OTDEL", "ID_OTDEL");
            tableMapping.ColumnMappings.Add("DOLGNOST_SOTRUD", "DOLGNOST_SOTRUD");
            tableMapping.ColumnMappings.Add("STATUS_SOTRUD", "STATUS_SOTRUD");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[SOTRUD] WHERE (([ID_SOTRUD] = @Original_ID_SOTRUD) AND ([FAM_SOTRUD] = @Original_FAM_SOTRUD) AND ([IMA_SOTRUD] = @Original_IMA_SOTRUD) AND ((@IsNull_OTCH_SOTRUD = 1 AND [OTCH_SOTRUD] IS NULL) OR ([OTCH_SOTRUD] = @Original_OTCH_SOTRUD)) AND ((@IsNull_ID_OTDEL = 1 AND [ID_OTDEL] IS NULL) OR ([ID_OTDEL] = @Original_ID_OTDEL)) AND ([DOLGNOST_SOTRUD] = @Original_DOLGNOST_SOTRUD) AND ([STATUS_SOTRUD] = @Original_STATUS_SOTRUD))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_SOTRUD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_SOTRUD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FAM_SOTRUD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAM_SOTRUD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IMA_SOTRUD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IMA_SOTRUD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OTCH_SOTRUD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OTCH_SOTRUD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OTCH_SOTRUD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OTCH_SOTRUD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_OTDEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_OTDEL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_OTDEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_OTDEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DOLGNOST_SOTRUD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOLGNOST_SOTRUD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STATUS_SOTRUD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATUS_SOTRUD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[SOTRUD] ([FAM_SOTRUD], [IMA_SOTRUD], [OTCH_SOTRUD], [ID_OTDEL], [DOLGNOST_SOTRUD], [STATUS_SOTRUD]) VALUES (@FAM_SOTRUD, @IMA_SOTRUD, @OTCH_SOTRUD, @ID_OTDEL, @DOLGNOST_SOTRUD, @STATUS_SOTRUD);
SELECT ID_SOTRUD, FAM_SOTRUD, IMA_SOTRUD, OTCH_SOTRUD, ID_OTDEL, DOLGNOST_SOTRUD, STATUS_SOTRUD FROM SOTRUD WHERE (ID_SOTRUD = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FAM_SOTRUD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAM_SOTRUD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IMA_SOTRUD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IMA_SOTRUD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTCH_SOTRUD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OTCH_SOTRUD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_OTDEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_OTDEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOLGNOST_SOTRUD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOLGNOST_SOTRUD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATUS_SOTRUD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATUS_SOTRUD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[SOTRUD] SET [FAM_SOTRUD] = @FAM_SOTRUD, [IMA_SOTRUD] = @IMA_SOTRUD, [OTCH_SOTRUD] = @OTCH_SOTRUD, [ID_OTDEL] = @ID_OTDEL, [DOLGNOST_SOTRUD] = @DOLGNOST_SOTRUD, [STATUS_SOTRUD] = @STATUS_SOTRUD WHERE (([ID_SOTRUD] = @Original_ID_SOTRUD) AND ([FAM_SOTRUD] = @Original_FAM_SOTRUD) AND ([IMA_SOTRUD] = @Original_IMA_SOTRUD) AND ((@IsNull_OTCH_SOTRUD = 1 AND [OTCH_SOTRUD] IS NULL) OR ([OTCH_SOTRUD] = @Original_OTCH_SOTRUD)) AND ((@IsNull_ID_OTDEL = 1 AND [ID_OTDEL] IS NULL) OR ([ID_OTDEL] = @Original_ID_OTDEL)) AND ([DOLGNOST_SOTRUD] = @Original_DOLGNOST_SOTRUD) AND ([STATUS_SOTRUD] = @Original_STATUS_SOTRUD));
SELECT ID_SOTRUD, FAM_SOTRUD, IMA_SOTRUD, OTCH_SOTRUD, ID_OTDEL, DOLGNOST_SOTRUD, STATUS_SOTRUD FROM SOTRUD WHERE (ID_SOTRUD = @ID_SOTRUD)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FAM_SOTRUD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAM_SOTRUD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IMA_SOTRUD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IMA_SOTRUD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTCH_SOTRUD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OTCH_SOTRUD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_OTDEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_OTDEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOLGNOST_SOTRUD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOLGNOST_SOTRUD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATUS_SOTRUD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATUS_SOTRUD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_SOTRUD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_SOTRUD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FAM_SOTRUD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAM_SOTRUD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IMA_SOTRUD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IMA_SOTRUD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OTCH_SOTRUD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OTCH_SOTRUD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OTCH_SOTRUD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OTCH_SOTRUD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_OTDEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_OTDEL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_OTDEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_OTDEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DOLGNOST_SOTRUD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOLGNOST_SOTRUD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STATUS_SOTRUD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATUS_SOTRUD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_SOTRUD", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_SOTRUD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::CompozitClient.Properties.Settings.Default.INBASEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_SOTRUD, FAM_SOTRUD, IMA_SOTRUD, OTCH_SOTRUD, ID_OTDEL, DOLGNOST_SOTRUD," +
                " STATUS_SOTRUD FROM dbo.SOTRUD";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.NewSotrudnik";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FAM_SOTRUD", global::System.Data.SqlDbType.NVarChar, 40, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IMA_SOTRUD", global::System.Data.SqlDbType.NVarChar, 40, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTCH_SOTRUD", global::System.Data.SqlDbType.NVarChar, 40, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_OTDEL", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOLGNOST_SOTRUD", global::System.Data.SqlDbType.NVarChar, 60, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATUS_SOTRUD", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(INBASEDataSet1.SOTRUDDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual INBASEDataSet1.SOTRUDDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            INBASEDataSet1.SOTRUDDataTable dataTable = new INBASEDataSet1.SOTRUDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(INBASEDataSet1.SOTRUDDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(INBASEDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "SOTRUD");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_SOTRUD, string Original_FAM_SOTRUD, string Original_IMA_SOTRUD, string Original_OTCH_SOTRUD, global::System.Nullable<int> Original_ID_OTDEL, string Original_DOLGNOST_SOTRUD, bool Original_STATUS_SOTRUD) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_SOTRUD));
            if ((Original_FAM_SOTRUD == null)) {
                throw new global::System.ArgumentNullException("Original_FAM_SOTRUD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_FAM_SOTRUD));
            }
            if ((Original_IMA_SOTRUD == null)) {
                throw new global::System.ArgumentNullException("Original_IMA_SOTRUD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_IMA_SOTRUD));
            }
            if ((Original_OTCH_SOTRUD == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_OTCH_SOTRUD));
            }
            if ((Original_ID_OTDEL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_ID_OTDEL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_DOLGNOST_SOTRUD == null)) {
                throw new global::System.ArgumentNullException("Original_DOLGNOST_SOTRUD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_DOLGNOST_SOTRUD));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((bool)(Original_STATUS_SOTRUD));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string FAM_SOTRUD, string IMA_SOTRUD, string OTCH_SOTRUD, global::System.Nullable<int> ID_OTDEL, string DOLGNOST_SOTRUD, bool STATUS_SOTRUD) {
            if ((FAM_SOTRUD == null)) {
                throw new global::System.ArgumentNullException("FAM_SOTRUD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(FAM_SOTRUD));
            }
            if ((IMA_SOTRUD == null)) {
                throw new global::System.ArgumentNullException("IMA_SOTRUD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(IMA_SOTRUD));
            }
            if ((OTCH_SOTRUD == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(OTCH_SOTRUD));
            }
            if ((ID_OTDEL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(ID_OTDEL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((DOLGNOST_SOTRUD == null)) {
                throw new global::System.ArgumentNullException("DOLGNOST_SOTRUD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(DOLGNOST_SOTRUD));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(STATUS_SOTRUD));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string FAM_SOTRUD, string IMA_SOTRUD, string OTCH_SOTRUD, global::System.Nullable<int> ID_OTDEL, string DOLGNOST_SOTRUD, bool STATUS_SOTRUD, int Original_ID_SOTRUD, string Original_FAM_SOTRUD, string Original_IMA_SOTRUD, string Original_OTCH_SOTRUD, global::System.Nullable<int> Original_ID_OTDEL, string Original_DOLGNOST_SOTRUD, bool Original_STATUS_SOTRUD, int ID_SOTRUD) {
            if ((FAM_SOTRUD == null)) {
                throw new global::System.ArgumentNullException("FAM_SOTRUD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(FAM_SOTRUD));
            }
            if ((IMA_SOTRUD == null)) {
                throw new global::System.ArgumentNullException("IMA_SOTRUD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(IMA_SOTRUD));
            }
            if ((OTCH_SOTRUD == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(OTCH_SOTRUD));
            }
            if ((ID_OTDEL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ID_OTDEL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((DOLGNOST_SOTRUD == null)) {
                throw new global::System.ArgumentNullException("DOLGNOST_SOTRUD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(DOLGNOST_SOTRUD));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(STATUS_SOTRUD));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ID_SOTRUD));
            if ((Original_FAM_SOTRUD == null)) {
                throw new global::System.ArgumentNullException("Original_FAM_SOTRUD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_FAM_SOTRUD));
            }
            if ((Original_IMA_SOTRUD == null)) {
                throw new global::System.ArgumentNullException("Original_IMA_SOTRUD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_IMA_SOTRUD));
            }
            if ((Original_OTCH_SOTRUD == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_OTCH_SOTRUD));
            }
            if ((Original_ID_OTDEL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_ID_OTDEL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_DOLGNOST_SOTRUD == null)) {
                throw new global::System.ArgumentNullException("Original_DOLGNOST_SOTRUD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_DOLGNOST_SOTRUD));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(Original_STATUS_SOTRUD));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(ID_SOTRUD));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string FAM_SOTRUD, string IMA_SOTRUD, string OTCH_SOTRUD, global::System.Nullable<int> ID_OTDEL, string DOLGNOST_SOTRUD, bool STATUS_SOTRUD, int Original_ID_SOTRUD, string Original_FAM_SOTRUD, string Original_IMA_SOTRUD, string Original_OTCH_SOTRUD, global::System.Nullable<int> Original_ID_OTDEL, string Original_DOLGNOST_SOTRUD, bool Original_STATUS_SOTRUD) {
            return this.Update(FAM_SOTRUD, IMA_SOTRUD, OTCH_SOTRUD, ID_OTDEL, DOLGNOST_SOTRUD, STATUS_SOTRUD, Original_ID_SOTRUD, Original_FAM_SOTRUD, Original_IMA_SOTRUD, Original_OTCH_SOTRUD, Original_ID_OTDEL, Original_DOLGNOST_SOTRUD, Original_STATUS_SOTRUD, Original_ID_SOTRUD);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual object NewSotrudnik(string FAM_SOTRUD, string IMA_SOTRUD, string OTCH_SOTRUD, global::System.Nullable<int> ID_OTDEL, string DOLGNOST_SOTRUD, global::System.Nullable<bool> STATUS_SOTRUD) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((FAM_SOTRUD == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(FAM_SOTRUD));
            }
            if ((IMA_SOTRUD == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(IMA_SOTRUD));
            }
            if ((OTCH_SOTRUD == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(OTCH_SOTRUD));
            }
            if ((ID_OTDEL.HasValue == true)) {
                command.Parameters[4].Value = ((int)(ID_OTDEL.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((DOLGNOST_SOTRUD == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(DOLGNOST_SOTRUD));
            }
            if ((STATUS_SOTRUD.HasValue == true)) {
                command.Parameters[6].Value = ((bool)(STATUS_SOTRUD.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ZAKUPKITableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ZAKUPKITableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ZAKUPKI";
            tableMapping.ColumnMappings.Add("NOMER_ZAKUPKI", "NOMER_ZAKUPKI");
            tableMapping.ColumnMappings.Add("DATE_ZAKUPKI", "DATE_ZAKUPKI");
            tableMapping.ColumnMappings.Add("NAME_ZAKYPKI", "NAME_ZAKYPKI");
            tableMapping.ColumnMappings.Add("OPIS_ZAKYPKI", "OPIS_ZAKYPKI");
            tableMapping.ColumnMappings.Add("STATE_ZAKYPKI", "STATE_ZAKYPKI");
            tableMapping.ColumnMappings.Add("DOK_ZAKYPKI", "DOK_ZAKYPKI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ZAKUPKI] WHERE (([NOMER_ZAKUPKI] = @Original_NOMER_ZAKUPKI) AND ([DATE_ZAKUPKI] = @Original_DATE_ZAKUPKI) AND ([NAME_ZAKYPKI] = @Original_NAME_ZAKYPKI) AND ((@IsNull_OPIS_ZAKYPKI = 1 AND [OPIS_ZAKYPKI] IS NULL) OR ([OPIS_ZAKYPKI] = @Original_OPIS_ZAKYPKI)) AND ([STATE_ZAKYPKI] = @Original_STATE_ZAKYPKI) AND ((@IsNull_DOK_ZAKYPKI = 1 AND [DOK_ZAKYPKI] IS NULL) OR ([DOK_ZAKYPKI] = @Original_DOK_ZAKYPKI)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOMER_ZAKUPKI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOMER_ZAKUPKI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_ZAKUPKI", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_ZAKUPKI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_ZAKYPKI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_ZAKYPKI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPIS_ZAKYPKI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPIS_ZAKYPKI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPIS_ZAKYPKI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPIS_ZAKYPKI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STATE_ZAKYPKI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATE_ZAKYPKI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DOK_ZAKYPKI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOK_ZAKYPKI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DOK_ZAKYPKI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOK_ZAKYPKI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ZAKUPKI] ([DATE_ZAKUPKI], [NAME_ZAKYPKI], [OPIS_ZAKYPKI], [STATE_ZAKYPKI], [DOK_ZAKYPKI]) VALUES (@DATE_ZAKUPKI, @NAME_ZAKYPKI, @OPIS_ZAKYPKI, @STATE_ZAKYPKI, @DOK_ZAKYPKI);
SELECT NOMER_ZAKUPKI, DATE_ZAKUPKI, NAME_ZAKYPKI, OPIS_ZAKYPKI, STATE_ZAKYPKI, DOK_ZAKYPKI FROM ZAKUPKI WHERE (NOMER_ZAKUPKI = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_ZAKUPKI", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_ZAKUPKI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_ZAKYPKI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_ZAKYPKI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPIS_ZAKYPKI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPIS_ZAKYPKI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATE_ZAKYPKI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATE_ZAKYPKI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOK_ZAKYPKI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOK_ZAKYPKI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ZAKUPKI] SET [DATE_ZAKUPKI] = @DATE_ZAKUPKI, [NAME_ZAKYPKI] = @NAME_ZAKYPKI, [OPIS_ZAKYPKI] = @OPIS_ZAKYPKI, [STATE_ZAKYPKI] = @STATE_ZAKYPKI, [DOK_ZAKYPKI] = @DOK_ZAKYPKI WHERE (([NOMER_ZAKUPKI] = @Original_NOMER_ZAKUPKI) AND ([DATE_ZAKUPKI] = @Original_DATE_ZAKUPKI) AND ([NAME_ZAKYPKI] = @Original_NAME_ZAKYPKI) AND ((@IsNull_OPIS_ZAKYPKI = 1 AND [OPIS_ZAKYPKI] IS NULL) OR ([OPIS_ZAKYPKI] = @Original_OPIS_ZAKYPKI)) AND ([STATE_ZAKYPKI] = @Original_STATE_ZAKYPKI) AND ((@IsNull_DOK_ZAKYPKI = 1 AND [DOK_ZAKYPKI] IS NULL) OR ([DOK_ZAKYPKI] = @Original_DOK_ZAKYPKI)));
SELECT NOMER_ZAKUPKI, DATE_ZAKUPKI, NAME_ZAKYPKI, OPIS_ZAKYPKI, STATE_ZAKYPKI, DOK_ZAKYPKI FROM ZAKUPKI WHERE (NOMER_ZAKUPKI = @NOMER_ZAKUPKI)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_ZAKUPKI", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_ZAKUPKI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_ZAKYPKI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_ZAKYPKI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OPIS_ZAKYPKI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPIS_ZAKYPKI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATE_ZAKYPKI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATE_ZAKYPKI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOK_ZAKYPKI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOK_ZAKYPKI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOMER_ZAKUPKI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOMER_ZAKUPKI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_ZAKUPKI", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_ZAKUPKI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_ZAKYPKI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_ZAKYPKI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OPIS_ZAKYPKI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPIS_ZAKYPKI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OPIS_ZAKYPKI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OPIS_ZAKYPKI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STATE_ZAKYPKI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATE_ZAKYPKI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DOK_ZAKYPKI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOK_ZAKYPKI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DOK_ZAKYPKI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOK_ZAKYPKI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOMER_ZAKUPKI", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "NOMER_ZAKUPKI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::CompozitClient.Properties.Settings.Default.INBASEConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT NOMER_ZAKUPKI, DATE_ZAKUPKI, NAME_ZAKYPKI, OPIS_ZAKYPKI, STATE_ZAKYPKI, DO" +
                "K_ZAKYPKI FROM dbo.ZAKUPKI";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(INBASEDataSet1.ZAKUPKIDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual INBASEDataSet1.ZAKUPKIDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            INBASEDataSet1.ZAKUPKIDataTable dataTable = new INBASEDataSet1.ZAKUPKIDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(INBASEDataSet1.ZAKUPKIDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(INBASEDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ZAKUPKI");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_NOMER_ZAKUPKI, System.DateTime Original_DATE_ZAKUPKI, string Original_NAME_ZAKYPKI, string Original_OPIS_ZAKYPKI, string Original_STATE_ZAKYPKI, string Original_DOK_ZAKYPKI) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_NOMER_ZAKUPKI));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_DATE_ZAKUPKI));
            if ((Original_NAME_ZAKYPKI == null)) {
                throw new global::System.ArgumentNullException("Original_NAME_ZAKYPKI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_NAME_ZAKYPKI));
            }
            if ((Original_OPIS_ZAKYPKI == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_OPIS_ZAKYPKI));
            }
            if ((Original_STATE_ZAKYPKI == null)) {
                throw new global::System.ArgumentNullException("Original_STATE_ZAKYPKI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_STATE_ZAKYPKI));
            }
            if ((Original_DOK_ZAKYPKI == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_DOK_ZAKYPKI));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime DATE_ZAKUPKI, string NAME_ZAKYPKI, string OPIS_ZAKYPKI, string STATE_ZAKYPKI, string DOK_ZAKYPKI) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(DATE_ZAKUPKI));
            if ((NAME_ZAKYPKI == null)) {
                throw new global::System.ArgumentNullException("NAME_ZAKYPKI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NAME_ZAKYPKI));
            }
            if ((OPIS_ZAKYPKI == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(OPIS_ZAKYPKI));
            }
            if ((STATE_ZAKYPKI == null)) {
                throw new global::System.ArgumentNullException("STATE_ZAKYPKI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(STATE_ZAKYPKI));
            }
            if ((DOK_ZAKYPKI == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(DOK_ZAKYPKI));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime DATE_ZAKUPKI, string NAME_ZAKYPKI, string OPIS_ZAKYPKI, string STATE_ZAKYPKI, string DOK_ZAKYPKI, int Original_NOMER_ZAKUPKI, System.DateTime Original_DATE_ZAKUPKI, string Original_NAME_ZAKYPKI, string Original_OPIS_ZAKYPKI, string Original_STATE_ZAKYPKI, string Original_DOK_ZAKYPKI, int NOMER_ZAKUPKI) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(DATE_ZAKUPKI));
            if ((NAME_ZAKYPKI == null)) {
                throw new global::System.ArgumentNullException("NAME_ZAKYPKI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NAME_ZAKYPKI));
            }
            if ((OPIS_ZAKYPKI == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(OPIS_ZAKYPKI));
            }
            if ((STATE_ZAKYPKI == null)) {
                throw new global::System.ArgumentNullException("STATE_ZAKYPKI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(STATE_ZAKYPKI));
            }
            if ((DOK_ZAKYPKI == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(DOK_ZAKYPKI));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_NOMER_ZAKUPKI));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Original_DATE_ZAKUPKI));
            if ((Original_NAME_ZAKYPKI == null)) {
                throw new global::System.ArgumentNullException("Original_NAME_ZAKYPKI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_NAME_ZAKYPKI));
            }
            if ((Original_OPIS_ZAKYPKI == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_OPIS_ZAKYPKI));
            }
            if ((Original_STATE_ZAKYPKI == null)) {
                throw new global::System.ArgumentNullException("Original_STATE_ZAKYPKI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_STATE_ZAKYPKI));
            }
            if ((Original_DOK_ZAKYPKI == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_DOK_ZAKYPKI));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(NOMER_ZAKUPKI));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime DATE_ZAKUPKI, string NAME_ZAKYPKI, string OPIS_ZAKYPKI, string STATE_ZAKYPKI, string DOK_ZAKYPKI, int Original_NOMER_ZAKUPKI, System.DateTime Original_DATE_ZAKUPKI, string Original_NAME_ZAKYPKI, string Original_OPIS_ZAKYPKI, string Original_STATE_ZAKYPKI, string Original_DOK_ZAKYPKI) {
            return this.Update(DATE_ZAKUPKI, NAME_ZAKYPKI, OPIS_ZAKYPKI, STATE_ZAKYPKI, DOK_ZAKYPKI, Original_NOMER_ZAKUPKI, Original_DATE_ZAKUPKI, Original_NAME_ZAKYPKI, Original_OPIS_ZAKYPKI, Original_STATE_ZAKYPKI, Original_DOK_ZAKYPKI, Original_NOMER_ZAKUPKI);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private DEVICETableAdapter _dEVICETableAdapter;
        
        private DEVICE_EVENTSTableAdapter _dEVICE_EVENTSTableAdapter;
        
        private ITEMSTableAdapter _iTEMSTableAdapter;
        
        private ITEMS_EVENTSTableAdapter _iTEMS_EVENTSTableAdapter;
        
        private LOGPASSTableAdapter _lOGPASSTableAdapter;
        
        private OTDELTableAdapter _oTDELTableAdapter;
        
        private SOTRUDTableAdapter _sOTRUDTableAdapter;
        
        private ZAKUPKITableAdapter _zAKUPKITableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public DEVICETableAdapter DEVICETableAdapter {
            get {
                return this._dEVICETableAdapter;
            }
            set {
                this._dEVICETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public DEVICE_EVENTSTableAdapter DEVICE_EVENTSTableAdapter {
            get {
                return this._dEVICE_EVENTSTableAdapter;
            }
            set {
                this._dEVICE_EVENTSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ITEMSTableAdapter ITEMSTableAdapter {
            get {
                return this._iTEMSTableAdapter;
            }
            set {
                this._iTEMSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ITEMS_EVENTSTableAdapter ITEMS_EVENTSTableAdapter {
            get {
                return this._iTEMS_EVENTSTableAdapter;
            }
            set {
                this._iTEMS_EVENTSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public LOGPASSTableAdapter LOGPASSTableAdapter {
            get {
                return this._lOGPASSTableAdapter;
            }
            set {
                this._lOGPASSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public OTDELTableAdapter OTDELTableAdapter {
            get {
                return this._oTDELTableAdapter;
            }
            set {
                this._oTDELTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SOTRUDTableAdapter SOTRUDTableAdapter {
            get {
                return this._sOTRUDTableAdapter;
            }
            set {
                this._sOTRUDTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ZAKUPKITableAdapter ZAKUPKITableAdapter {
            get {
                return this._zAKUPKITableAdapter;
            }
            set {
                this._zAKUPKITableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._dEVICETableAdapter != null) 
                            && (this._dEVICETableAdapter.Connection != null))) {
                    return this._dEVICETableAdapter.Connection;
                }
                if (((this._dEVICE_EVENTSTableAdapter != null) 
                            && (this._dEVICE_EVENTSTableAdapter.Connection != null))) {
                    return this._dEVICE_EVENTSTableAdapter.Connection;
                }
                if (((this._iTEMSTableAdapter != null) 
                            && (this._iTEMSTableAdapter.Connection != null))) {
                    return this._iTEMSTableAdapter.Connection;
                }
                if (((this._iTEMS_EVENTSTableAdapter != null) 
                            && (this._iTEMS_EVENTSTableAdapter.Connection != null))) {
                    return this._iTEMS_EVENTSTableAdapter.Connection;
                }
                if (((this._lOGPASSTableAdapter != null) 
                            && (this._lOGPASSTableAdapter.Connection != null))) {
                    return this._lOGPASSTableAdapter.Connection;
                }
                if (((this._oTDELTableAdapter != null) 
                            && (this._oTDELTableAdapter.Connection != null))) {
                    return this._oTDELTableAdapter.Connection;
                }
                if (((this._sOTRUDTableAdapter != null) 
                            && (this._sOTRUDTableAdapter.Connection != null))) {
                    return this._sOTRUDTableAdapter.Connection;
                }
                if (((this._zAKUPKITableAdapter != null) 
                            && (this._zAKUPKITableAdapter.Connection != null))) {
                    return this._zAKUPKITableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._dEVICETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._dEVICE_EVENTSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._iTEMSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._iTEMS_EVENTSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._lOGPASSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._oTDELTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sOTRUDTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._zAKUPKITableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(INBASEDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._oTDELTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.OTDEL.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._oTDELTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sOTRUDTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SOTRUD.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sOTRUDTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._zAKUPKITableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ZAKUPKI.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._zAKUPKITableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._dEVICETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DEVICE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dEVICETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._iTEMSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ITEMS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._iTEMSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._dEVICE_EVENTSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DEVICE_EVENTS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dEVICE_EVENTSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._iTEMS_EVENTSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ITEMS_EVENTS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._iTEMS_EVENTSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._lOGPASSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.LOGPASS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._lOGPASSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(INBASEDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._oTDELTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.OTDEL.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._oTDELTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sOTRUDTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SOTRUD.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sOTRUDTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._zAKUPKITableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ZAKUPKI.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._zAKUPKITableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._dEVICETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DEVICE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dEVICETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._iTEMSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ITEMS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._iTEMSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._dEVICE_EVENTSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DEVICE_EVENTS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dEVICE_EVENTSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._iTEMS_EVENTSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ITEMS_EVENTS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._iTEMS_EVENTSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._lOGPASSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.LOGPASS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._lOGPASSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(INBASEDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._lOGPASSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.LOGPASS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._lOGPASSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._iTEMS_EVENTSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ITEMS_EVENTS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._iTEMS_EVENTSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._dEVICE_EVENTSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DEVICE_EVENTS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dEVICE_EVENTSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._iTEMSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ITEMS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._iTEMSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._dEVICETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DEVICE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dEVICETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._zAKUPKITableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ZAKUPKI.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._zAKUPKITableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sOTRUDTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SOTRUD.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sOTRUDTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._oTDELTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.OTDEL.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._oTDELTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(INBASEDataSet1 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._dEVICETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dEVICETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._dEVICE_EVENTSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dEVICE_EVENTSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._iTEMSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._iTEMSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._iTEMS_EVENTSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._iTEMS_EVENTSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._lOGPASSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._lOGPASSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._oTDELTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._oTDELTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._sOTRUDTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sOTRUDTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._zAKUPKITableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._zAKUPKITableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager не содержит сведений о подключении. Укажите для каждого адапт" +
                        "ера таблицы TableAdapterManager допустимый экземпляр адаптера таблицы.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("Не удается начать транзакцию. Текущее соединение данных не поддерживает транзакци" +
                        "и или текущее состояние не позволяет начать транзакцию.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._dEVICETableAdapter != null)) {
                    revertConnections.Add(this._dEVICETableAdapter, this._dEVICETableAdapter.Connection);
                    this._dEVICETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._dEVICETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._dEVICETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dEVICETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dEVICETableAdapter.Adapter);
                    }
                }
                if ((this._dEVICE_EVENTSTableAdapter != null)) {
                    revertConnections.Add(this._dEVICE_EVENTSTableAdapter, this._dEVICE_EVENTSTableAdapter.Connection);
                    this._dEVICE_EVENTSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._dEVICE_EVENTSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._dEVICE_EVENTSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dEVICE_EVENTSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dEVICE_EVENTSTableAdapter.Adapter);
                    }
                }
                if ((this._iTEMSTableAdapter != null)) {
                    revertConnections.Add(this._iTEMSTableAdapter, this._iTEMSTableAdapter.Connection);
                    this._iTEMSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._iTEMSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._iTEMSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._iTEMSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._iTEMSTableAdapter.Adapter);
                    }
                }
                if ((this._iTEMS_EVENTSTableAdapter != null)) {
                    revertConnections.Add(this._iTEMS_EVENTSTableAdapter, this._iTEMS_EVENTSTableAdapter.Connection);
                    this._iTEMS_EVENTSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._iTEMS_EVENTSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._iTEMS_EVENTSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._iTEMS_EVENTSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._iTEMS_EVENTSTableAdapter.Adapter);
                    }
                }
                if ((this._lOGPASSTableAdapter != null)) {
                    revertConnections.Add(this._lOGPASSTableAdapter, this._lOGPASSTableAdapter.Connection);
                    this._lOGPASSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._lOGPASSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._lOGPASSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._lOGPASSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._lOGPASSTableAdapter.Adapter);
                    }
                }
                if ((this._oTDELTableAdapter != null)) {
                    revertConnections.Add(this._oTDELTableAdapter, this._oTDELTableAdapter.Connection);
                    this._oTDELTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._oTDELTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._oTDELTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._oTDELTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._oTDELTableAdapter.Adapter);
                    }
                }
                if ((this._sOTRUDTableAdapter != null)) {
                    revertConnections.Add(this._sOTRUDTableAdapter, this._sOTRUDTableAdapter.Connection);
                    this._sOTRUDTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sOTRUDTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sOTRUDTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sOTRUDTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sOTRUDTableAdapter.Adapter);
                    }
                }
                if ((this._zAKUPKITableAdapter != null)) {
                    revertConnections.Add(this._zAKUPKITableAdapter, this._zAKUPKITableAdapter.Connection);
                    this._zAKUPKITableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._zAKUPKITableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._zAKUPKITableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._zAKUPKITableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._zAKUPKITableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._dEVICETableAdapter != null)) {
                    this._dEVICETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._dEVICETableAdapter]));
                    this._dEVICETableAdapter.Transaction = null;
                }
                if ((this._dEVICE_EVENTSTableAdapter != null)) {
                    this._dEVICE_EVENTSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._dEVICE_EVENTSTableAdapter]));
                    this._dEVICE_EVENTSTableAdapter.Transaction = null;
                }
                if ((this._iTEMSTableAdapter != null)) {
                    this._iTEMSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._iTEMSTableAdapter]));
                    this._iTEMSTableAdapter.Transaction = null;
                }
                if ((this._iTEMS_EVENTSTableAdapter != null)) {
                    this._iTEMS_EVENTSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._iTEMS_EVENTSTableAdapter]));
                    this._iTEMS_EVENTSTableAdapter.Transaction = null;
                }
                if ((this._lOGPASSTableAdapter != null)) {
                    this._lOGPASSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._lOGPASSTableAdapter]));
                    this._lOGPASSTableAdapter.Transaction = null;
                }
                if ((this._oTDELTableAdapter != null)) {
                    this._oTDELTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._oTDELTableAdapter]));
                    this._oTDELTableAdapter.Transaction = null;
                }
                if ((this._sOTRUDTableAdapter != null)) {
                    this._sOTRUDTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sOTRUDTableAdapter]));
                    this._sOTRUDTableAdapter.Transaction = null;
                }
                if ((this._zAKUPKITableAdapter != null)) {
                    this._zAKUPKITableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._zAKUPKITableAdapter]));
                    this._zAKUPKITableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591